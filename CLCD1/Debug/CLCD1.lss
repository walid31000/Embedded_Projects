
CLCD1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003fec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000046  00800060  00003fec  00004080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  008000a6  008000a6  000040c6  2**0
                  ALLOC
  3 .stab         00002760  00000000  00000000  000040c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001239  00000000  00000000  00006828  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00007a61  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00007ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00007d11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000995a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000a845  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000b5f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000b754  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000b9e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000c1af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ee       	ldi	r30, 0xEC	; 236
      68:	ff e3       	ldi	r31, 0x3F	; 63
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 3a       	cpi	r26, 0xA6	; 166
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a6 ea       	ldi	r26, 0xA6	; 166
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ab 3a       	cpi	r26, 0xAB	; 171
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <main>
      8a:	0c 94 f4 1f 	jmp	0x3fe8	; 0x3fe8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 f8 1c 	jmp	0x39f0	; 0x39f0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	aa e8       	ldi	r26, 0x8A	; 138
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 14 1d 	jmp	0x3a28	; 0x3a28 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 20 1d 	jmp	0x3a40	; 0x3a40 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 20 1d 	jmp	0x3a40	; 0x3a40 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 f8 1c 	jmp	0x39f0	; 0x39f0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	8a e8       	ldi	r24, 0x8A	; 138
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 14 1d 	jmp	0x3a28	; 0x3a28 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 20 1d 	jmp	0x3a40	; 0x3a40 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 20 1d 	jmp	0x3a40	; 0x3a40 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 20 1d 	jmp	0x3a40	; 0x3a40 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 08 1d 	jmp	0x3a10	; 0x3a10 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 24 1d 	jmp	0x3a48	; 0x3a48 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <voidSetHalfDataPort>:
#include "CLCD_prv.h"
#include "CLCD_cfg.h"


static void voidSetHalfDataPort(uint8 copy_u8FourBitData )
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	0f 92       	push	r0
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62
     b50:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D4_PIN ,GET_BIT(copy_u8FourBitData,0));
     b52:	89 81       	ldd	r24, Y+1	; 0x01
     b54:	98 2f       	mov	r25, r24
     b56:	91 70       	andi	r25, 0x01	; 1
     b58:	80 e0       	ldi	r24, 0x00	; 0
     b5a:	63 e0       	ldi	r22, 0x03	; 3
     b5c:	49 2f       	mov	r20, r25
     b5e:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D5_PIN ,GET_BIT(copy_u8FourBitData,1));
     b62:	89 81       	ldd	r24, Y+1	; 0x01
     b64:	86 95       	lsr	r24
     b66:	98 2f       	mov	r25, r24
     b68:	91 70       	andi	r25, 0x01	; 1
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	64 e0       	ldi	r22, 0x04	; 4
     b6e:	49 2f       	mov	r20, r25
     b70:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D6_PIN ,GET_BIT(copy_u8FourBitData,2));
     b74:	89 81       	ldd	r24, Y+1	; 0x01
     b76:	86 95       	lsr	r24
     b78:	86 95       	lsr	r24
     b7a:	98 2f       	mov	r25, r24
     b7c:	91 70       	andi	r25, 0x01	; 1
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	65 e0       	ldi	r22, 0x05	; 5
     b82:	49 2f       	mov	r20, r25
     b84:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D7_PIN ,GET_BIT(copy_u8FourBitData,3));
     b88:	89 81       	ldd	r24, Y+1	; 0x01
     b8a:	86 95       	lsr	r24
     b8c:	86 95       	lsr	r24
     b8e:	86 95       	lsr	r24
     b90:	98 2f       	mov	r25, r24
     b92:	91 70       	andi	r25, 0x01	; 1
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	66 e0       	ldi	r22, 0x06	; 6
     b98:	49 2f       	mov	r20, r25
     b9a:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
}
     b9e:	0f 90       	pop	r0
     ba0:	cf 91       	pop	r28
     ba2:	df 91       	pop	r29
     ba4:	08 95       	ret

00000ba6 <voidSendEnablePulse>:

static void voidSendEnablePulse (void)
{
     ba6:	df 93       	push	r29
     ba8:	cf 93       	push	r28
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	2e 97       	sbiw	r28, 0x0e	; 14
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	62 e0       	ldi	r22, 0x02	; 2
     bbe:	41 e0       	ldi	r20, 0x01	; 1
     bc0:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	a0 e0       	ldi	r26, 0x00	; 0
     bca:	b0 e4       	ldi	r27, 0x40	; 64
     bcc:	8b 87       	std	Y+11, r24	; 0x0b
     bce:	9c 87       	std	Y+12, r25	; 0x0c
     bd0:	ad 87       	std	Y+13, r26	; 0x0d
     bd2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bd4:	6b 85       	ldd	r22, Y+11	; 0x0b
     bd6:	7c 85       	ldd	r23, Y+12	; 0x0c
     bd8:	8d 85       	ldd	r24, Y+13	; 0x0d
     bda:	9e 85       	ldd	r25, Y+14	; 0x0e
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	4a ef       	ldi	r20, 0xFA	; 250
     be2:	54 e4       	ldi	r21, 0x44	; 68
     be4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     be8:	dc 01       	movw	r26, r24
     bea:	cb 01       	movw	r24, r22
     bec:	8f 83       	std	Y+7, r24	; 0x07
     bee:	98 87       	std	Y+8, r25	; 0x08
     bf0:	a9 87       	std	Y+9, r26	; 0x09
     bf2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     bf4:	6f 81       	ldd	r22, Y+7	; 0x07
     bf6:	78 85       	ldd	r23, Y+8	; 0x08
     bf8:	89 85       	ldd	r24, Y+9	; 0x09
     bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	40 e8       	ldi	r20, 0x80	; 128
     c02:	5f e3       	ldi	r21, 0x3F	; 63
     c04:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     c08:	88 23       	and	r24, r24
     c0a:	2c f4       	brge	.+10     	; 0xc16 <voidSendEnablePulse+0x70>
		__ticks = 1;
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	9e 83       	std	Y+6, r25	; 0x06
     c12:	8d 83       	std	Y+5, r24	; 0x05
     c14:	3f c0       	rjmp	.+126    	; 0xc94 <voidSendEnablePulse+0xee>
	else if (__tmp > 65535)
     c16:	6f 81       	ldd	r22, Y+7	; 0x07
     c18:	78 85       	ldd	r23, Y+8	; 0x08
     c1a:	89 85       	ldd	r24, Y+9	; 0x09
     c1c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c1e:	20 e0       	ldi	r18, 0x00	; 0
     c20:	3f ef       	ldi	r19, 0xFF	; 255
     c22:	4f e7       	ldi	r20, 0x7F	; 127
     c24:	57 e4       	ldi	r21, 0x47	; 71
     c26:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     c2a:	18 16       	cp	r1, r24
     c2c:	4c f5       	brge	.+82     	; 0xc80 <voidSendEnablePulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c2e:	6b 85       	ldd	r22, Y+11	; 0x0b
     c30:	7c 85       	ldd	r23, Y+12	; 0x0c
     c32:	8d 85       	ldd	r24, Y+13	; 0x0d
     c34:	9e 85       	ldd	r25, Y+14	; 0x0e
     c36:	20 e0       	ldi	r18, 0x00	; 0
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	40 e2       	ldi	r20, 0x20	; 32
     c3c:	51 e4       	ldi	r21, 0x41	; 65
     c3e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c42:	dc 01       	movw	r26, r24
     c44:	cb 01       	movw	r24, r22
     c46:	bc 01       	movw	r22, r24
     c48:	cd 01       	movw	r24, r26
     c4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	9e 83       	std	Y+6, r25	; 0x06
     c54:	8d 83       	std	Y+5, r24	; 0x05
     c56:	0f c0       	rjmp	.+30     	; 0xc76 <voidSendEnablePulse+0xd0>
     c58:	88 ec       	ldi	r24, 0xC8	; 200
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	9c 83       	std	Y+4, r25	; 0x04
     c5e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c60:	8b 81       	ldd	r24, Y+3	; 0x03
     c62:	9c 81       	ldd	r25, Y+4	; 0x04
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	f1 f7       	brne	.-4      	; 0xc64 <voidSendEnablePulse+0xbe>
     c68:	9c 83       	std	Y+4, r25	; 0x04
     c6a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c6c:	8d 81       	ldd	r24, Y+5	; 0x05
     c6e:	9e 81       	ldd	r25, Y+6	; 0x06
     c70:	01 97       	sbiw	r24, 0x01	; 1
     c72:	9e 83       	std	Y+6, r25	; 0x06
     c74:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c76:	8d 81       	ldd	r24, Y+5	; 0x05
     c78:	9e 81       	ldd	r25, Y+6	; 0x06
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	69 f7       	brne	.-38     	; 0xc58 <voidSendEnablePulse+0xb2>
     c7e:	14 c0       	rjmp	.+40     	; 0xca8 <voidSendEnablePulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c80:	6f 81       	ldd	r22, Y+7	; 0x07
     c82:	78 85       	ldd	r23, Y+8	; 0x08
     c84:	89 85       	ldd	r24, Y+9	; 0x09
     c86:	9a 85       	ldd	r25, Y+10	; 0x0a
     c88:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	9e 83       	std	Y+6, r25	; 0x06
     c92:	8d 83       	std	Y+5, r24	; 0x05
     c94:	8d 81       	ldd	r24, Y+5	; 0x05
     c96:	9e 81       	ldd	r25, Y+6	; 0x06
     c98:	9a 83       	std	Y+2, r25	; 0x02
     c9a:	89 83       	std	Y+1, r24	; 0x01
     c9c:	89 81       	ldd	r24, Y+1	; 0x01
     c9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <voidSendEnablePulse+0xfa>
     ca4:	9a 83       	std	Y+2, r25	; 0x02
     ca6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	62 e0       	ldi	r22, 0x02	; 2
     cac:	40 e0       	ldi	r20, 0x00	; 0
     cae:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
}
     cb2:	2e 96       	adiw	r28, 0x0e	; 14
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	cf 91       	pop	r28
     cc0:	df 91       	pop	r29
     cc2:	08 95       	ret

00000cc4 <CLCD_voidSendCommand>:

void CLCD_voidSendCommand (uint8 copy_u8Command)
{
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	0f 92       	push	r0
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	89 83       	std	Y+1, r24	; 0x01
	/*1-Set RS pin to low for command*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_LOW);
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	61 e0       	ldi	r22, 0x01	; 1
     cd4:	40 e0       	ldi	r20, 0x00	; 0
     cd6:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
	voidSendEnablePulse ();


#elif CLCD_u8CONNECTION_MODE == FOUR_BIT
	/*Send the higher four bit of the command*/
	voidSetHalfDataPort(copy_u8Command>>4u );
     cda:	89 81       	ldd	r24, Y+1	; 0x01
     cdc:	82 95       	swap	r24
     cde:	8f 70       	andi	r24, 0x0F	; 15
     ce0:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>
	/*-Send Enable Pulse*/
	voidSendEnablePulse ();
     ce4:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
	/*Send the lower four bit of the command*/
	voidSetHalfDataPort(copy_u8Command);
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>

	/*-Send Enable Pulse*/
	voidSendEnablePulse ();
     cee:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
#endif
}
     cf2:	0f 90       	pop	r0
     cf4:	cf 91       	pop	r28
     cf6:	df 91       	pop	r29
     cf8:	08 95       	ret

00000cfa <CLCD_voidSendData>:
void CLCD_voidSendData (uint8 copy_u8Data)
{
     cfa:	df 93       	push	r29
     cfc:	cf 93       	push	r28
     cfe:	0f 92       	push	r0
     d00:	cd b7       	in	r28, 0x3d	; 61
     d02:	de b7       	in	r29, 0x3e	; 62
     d04:	89 83       	std	Y+1, r24	; 0x01
	/*1-Set RS pin to high for data*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_HIGH);
     d06:	80 e0       	ldi	r24, 0x00	; 0
     d08:	61 e0       	ldi	r22, 0x01	; 1
     d0a:	41 e0       	ldi	r20, 0x01	; 1
     d0c:	0e 94 0e 0b 	call	0x161c	; 0x161c <DIO_u8SetPinValue>
	voidSendEnablePulse ();


#elif CLCD_u8CONNECTION_MODE == FOUR_BIT
	/*Send the higher four bit of the data*/
	voidSetHalfDataPort(copy_u8Data>>4u );
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	82 95       	swap	r24
     d14:	8f 70       	andi	r24, 0x0F	; 15
     d16:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>
	/*-Send Enable Pulse*/
	voidSendEnablePulse();
     d1a:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
	/*Send the lower four bit of the data*/
	voidSetHalfDataPort(copy_u8Data);
     d1e:	89 81       	ldd	r24, Y+1	; 0x01
     d20:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>

	/*-Send Enable Pulse*/
	voidSendEnablePulse();
     d24:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
#endif
}
     d28:	0f 90       	pop	r0
     d2a:	cf 91       	pop	r28
     d2c:	df 91       	pop	r29
     d2e:	08 95       	ret

00000d30 <CLCD_voidInit>:
void CLCD_voidInit (void)
{
     d30:	df 93       	push	r29
     d32:	cf 93       	push	r28
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	2e 97       	sbiw	r28, 0x0e	; 14
     d3a:	0f b6       	in	r0, 0x3f	; 63
     d3c:	f8 94       	cli
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	0f be       	out	0x3f, r0	; 63
     d42:	cd bf       	out	0x3d, r28	; 61
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	a0 e2       	ldi	r26, 0x20	; 32
     d4a:	b2 e4       	ldi	r27, 0x42	; 66
     d4c:	8b 87       	std	Y+11, r24	; 0x0b
     d4e:	9c 87       	std	Y+12, r25	; 0x0c
     d50:	ad 87       	std	Y+13, r26	; 0x0d
     d52:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d54:	6b 85       	ldd	r22, Y+11	; 0x0b
     d56:	7c 85       	ldd	r23, Y+12	; 0x0c
     d58:	8d 85       	ldd	r24, Y+13	; 0x0d
     d5a:	9e 85       	ldd	r25, Y+14	; 0x0e
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	4a ef       	ldi	r20, 0xFA	; 250
     d62:	54 e4       	ldi	r21, 0x44	; 68
     d64:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d68:	dc 01       	movw	r26, r24
     d6a:	cb 01       	movw	r24, r22
     d6c:	8f 83       	std	Y+7, r24	; 0x07
     d6e:	98 87       	std	Y+8, r25	; 0x08
     d70:	a9 87       	std	Y+9, r26	; 0x09
     d72:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d74:	6f 81       	ldd	r22, Y+7	; 0x07
     d76:	78 85       	ldd	r23, Y+8	; 0x08
     d78:	89 85       	ldd	r24, Y+9	; 0x09
     d7a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d7c:	20 e0       	ldi	r18, 0x00	; 0
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	40 e8       	ldi	r20, 0x80	; 128
     d82:	5f e3       	ldi	r21, 0x3F	; 63
     d84:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d88:	88 23       	and	r24, r24
     d8a:	2c f4       	brge	.+10     	; 0xd96 <CLCD_voidInit+0x66>
		__ticks = 1;
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	9e 83       	std	Y+6, r25	; 0x06
     d92:	8d 83       	std	Y+5, r24	; 0x05
     d94:	3f c0       	rjmp	.+126    	; 0xe14 <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
     d96:	6f 81       	ldd	r22, Y+7	; 0x07
     d98:	78 85       	ldd	r23, Y+8	; 0x08
     d9a:	89 85       	ldd	r24, Y+9	; 0x09
     d9c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	3f ef       	ldi	r19, 0xFF	; 255
     da2:	4f e7       	ldi	r20, 0x7F	; 127
     da4:	57 e4       	ldi	r21, 0x47	; 71
     da6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     daa:	18 16       	cp	r1, r24
     dac:	4c f5       	brge	.+82     	; 0xe00 <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dae:	6b 85       	ldd	r22, Y+11	; 0x0b
     db0:	7c 85       	ldd	r23, Y+12	; 0x0c
     db2:	8d 85       	ldd	r24, Y+13	; 0x0d
     db4:	9e 85       	ldd	r25, Y+14	; 0x0e
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	40 e2       	ldi	r20, 0x20	; 32
     dbc:	51 e4       	ldi	r21, 0x41	; 65
     dbe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     dc2:	dc 01       	movw	r26, r24
     dc4:	cb 01       	movw	r24, r22
     dc6:	bc 01       	movw	r22, r24
     dc8:	cd 01       	movw	r24, r26
     dca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dce:	dc 01       	movw	r26, r24
     dd0:	cb 01       	movw	r24, r22
     dd2:	9e 83       	std	Y+6, r25	; 0x06
     dd4:	8d 83       	std	Y+5, r24	; 0x05
     dd6:	0f c0       	rjmp	.+30     	; 0xdf6 <CLCD_voidInit+0xc6>
     dd8:	88 ec       	ldi	r24, 0xC8	; 200
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	9c 83       	std	Y+4, r25	; 0x04
     dde:	8b 83       	std	Y+3, r24	; 0x03
     de0:	8b 81       	ldd	r24, Y+3	; 0x03
     de2:	9c 81       	ldd	r25, Y+4	; 0x04
     de4:	01 97       	sbiw	r24, 0x01	; 1
     de6:	f1 f7       	brne	.-4      	; 0xde4 <CLCD_voidInit+0xb4>
     de8:	9c 83       	std	Y+4, r25	; 0x04
     dea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dec:	8d 81       	ldd	r24, Y+5	; 0x05
     dee:	9e 81       	ldd	r25, Y+6	; 0x06
     df0:	01 97       	sbiw	r24, 0x01	; 1
     df2:	9e 83       	std	Y+6, r25	; 0x06
     df4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     df6:	8d 81       	ldd	r24, Y+5	; 0x05
     df8:	9e 81       	ldd	r25, Y+6	; 0x06
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	69 f7       	brne	.-38     	; 0xdd8 <CLCD_voidInit+0xa8>
     dfe:	14 c0       	rjmp	.+40     	; 0xe28 <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e00:	6f 81       	ldd	r22, Y+7	; 0x07
     e02:	78 85       	ldd	r23, Y+8	; 0x08
     e04:	89 85       	ldd	r24, Y+9	; 0x09
     e06:	9a 85       	ldd	r25, Y+10	; 0x0a
     e08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e0c:	dc 01       	movw	r26, r24
     e0e:	cb 01       	movw	r24, r22
     e10:	9e 83       	std	Y+6, r25	; 0x06
     e12:	8d 83       	std	Y+5, r24	; 0x05
     e14:	8d 81       	ldd	r24, Y+5	; 0x05
     e16:	9e 81       	ldd	r25, Y+6	; 0x06
     e18:	9a 83       	std	Y+2, r25	; 0x02
     e1a:	89 83       	std	Y+1, r24	; 0x01
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	9a 81       	ldd	r25, Y+2	; 0x02
     e20:	01 97       	sbiw	r24, 0x01	; 1
     e22:	f1 f7       	brne	.-4      	; 0xe20 <CLCD_voidInit+0xf0>
     e24:	9a 83       	std	Y+2, r25	; 0x02
     e26:	89 83       	std	Y+1, r24	; 0x01
	/*2-Function set command :2 lines,font size :5*7 */
#if CLCD_u8CONNECTION_MODE	==EIGHT_BIT
	CLCD_voidSendCommand(0b00111000);

#elif CLCD_u8CONNECTION_MODE ==FOUR_BIT
	voidSetHalfDataPort(0b0010);
     e28:	82 e0       	ldi	r24, 0x02	; 2
     e2a:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e2e:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
	voidSetHalfDataPort(0b0010);
     e32:	82 e0       	ldi	r24, 0x02	; 2
     e34:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e38:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
	voidSetHalfDataPort(0b1000);
     e3c:	88 e0       	ldi	r24, 0x08	; 8
     e3e:	0e 94 a3 05 	call	0xb46	; 0xb46 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e42:	0e 94 d3 05 	call	0xba6	; 0xba6 <voidSendEnablePulse>
#endif

	/*3-Display on off control :Display :ON, cursor:off,blink cursor off*/

	CLCD_voidSendCommand(0b00001100);
     e46:	8c e0       	ldi	r24, 0x0C	; 12
     e48:	0e 94 62 06 	call	0xcc4	; 0xcc4 <CLCD_voidSendCommand>
	/*4-Display clear */
	CLCD_voidSendCommand(1);
     e4c:	81 e0       	ldi	r24, 0x01	; 1
     e4e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <CLCD_voidSendCommand>

}
     e52:	2e 96       	adiw	r28, 0x0e	; 14
     e54:	0f b6       	in	r0, 0x3f	; 63
     e56:	f8 94       	cli
     e58:	de bf       	out	0x3e, r29	; 62
     e5a:	0f be       	out	0x3f, r0	; 63
     e5c:	cd bf       	out	0x3d, r28	; 61
     e5e:	cf 91       	pop	r28
     e60:	df 91       	pop	r29
     e62:	08 95       	ret

00000e64 <CLCD_u8SendString>:
uint8 CLCD_u8SendString (const char *copy_Chstring)
{
     e64:	df 93       	push	r29
     e66:	cf 93       	push	r28
     e68:	00 d0       	rcall	.+0      	; 0xe6a <CLCD_u8SendString+0x6>
     e6a:	0f 92       	push	r0
     e6c:	cd b7       	in	r28, 0x3d	; 61
     e6e:	de b7       	in	r29, 0x3e	; 62
     e70:	9b 83       	std	Y+3, r25	; 0x03
     e72:	8a 83       	std	Y+2, r24	; 0x02
	uint8 LocalErrorState=OK;
     e74:	19 82       	std	Y+1, r1	; 0x01
	if(copy_Chstring!=NULL)
     e76:	8a 81       	ldd	r24, Y+2	; 0x02
     e78:	9b 81       	ldd	r25, Y+3	; 0x03
     e7a:	00 97       	sbiw	r24, 0x00	; 0
     e7c:	89 f0       	breq	.+34     	; 0xea0 <CLCD_u8SendString+0x3c>
     e7e:	0a c0       	rjmp	.+20     	; 0xe94 <CLCD_u8SendString+0x30>
	{//uint8 Local_u8Counter=0;
		while(*copy_Chstring!='\0')
		{

			CLCD_voidSendData(*copy_Chstring);
     e80:	ea 81       	ldd	r30, Y+2	; 0x02
     e82:	fb 81       	ldd	r31, Y+3	; 0x03
     e84:	80 81       	ld	r24, Z
     e86:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
			copy_Chstring++;
     e8a:	8a 81       	ldd	r24, Y+2	; 0x02
     e8c:	9b 81       	ldd	r25, Y+3	; 0x03
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	9b 83       	std	Y+3, r25	; 0x03
     e92:	8a 83       	std	Y+2, r24	; 0x02
uint8 CLCD_u8SendString (const char *copy_Chstring)
{
	uint8 LocalErrorState=OK;
	if(copy_Chstring!=NULL)
	{//uint8 Local_u8Counter=0;
		while(*copy_Chstring!='\0')
     e94:	ea 81       	ldd	r30, Y+2	; 0x02
     e96:	fb 81       	ldd	r31, Y+3	; 0x03
     e98:	80 81       	ld	r24, Z
     e9a:	88 23       	and	r24, r24
     e9c:	89 f7       	brne	.-30     	; 0xe80 <CLCD_u8SendString+0x1c>
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <CLCD_u8SendString+0x40>

		}
	}
	else
	{
		LocalErrorState=NULL_PTR;
     ea0:	82 e0       	ldi	r24, 0x02	; 2
     ea2:	89 83       	std	Y+1, r24	; 0x01
	}
	return LocalErrorState;
     ea4:	89 81       	ldd	r24, Y+1	; 0x01
}
     ea6:	0f 90       	pop	r0
     ea8:	0f 90       	pop	r0
     eaa:	0f 90       	pop	r0
     eac:	cf 91       	pop	r28
     eae:	df 91       	pop	r29
     eb0:	08 95       	ret

00000eb2 <CLCD_voidSendNumber>:

void CLCD_voidSendNumber (sint32 copy_s32Number)
{
     eb2:	df 93       	push	r29
     eb4:	cf 93       	push	r28
     eb6:	cd b7       	in	r28, 0x3d	; 61
     eb8:	de b7       	in	r29, 0x3e	; 62
     eba:	61 97       	sbiw	r28, 0x11	; 17
     ebc:	0f b6       	in	r0, 0x3f	; 63
     ebe:	f8 94       	cli
     ec0:	de bf       	out	0x3e, r29	; 62
     ec2:	0f be       	out	0x3f, r0	; 63
     ec4:	cd bf       	out	0x3d, r28	; 61
     ec6:	6e 87       	std	Y+14, r22	; 0x0e
     ec8:	7f 87       	std	Y+15, r23	; 0x0f
     eca:	88 8b       	std	Y+16, r24	; 0x10
     ecc:	99 8b       	std	Y+17, r25	; 0x11
	char Local_chNumberArr[10];

	uint8 Local_u8RighttDigit;
	uint8 Local_u8Counter =0;
     ece:	1a 82       	std	Y+2, r1	; 0x02
	sint8 Local_s8Counter2;
	if(copy_s32Number == 0)
     ed0:	8e 85       	ldd	r24, Y+14	; 0x0e
     ed2:	9f 85       	ldd	r25, Y+15	; 0x0f
     ed4:	a8 89       	ldd	r26, Y+16	; 0x10
     ed6:	b9 89       	ldd	r27, Y+17	; 0x11
     ed8:	00 97       	sbiw	r24, 0x00	; 0
     eda:	a1 05       	cpc	r26, r1
     edc:	b1 05       	cpc	r27, r1
     ede:	21 f4       	brne	.+8      	; 0xee8 <CLCD_voidSendNumber+0x36>
	{
		CLCD_voidSendData('0');
     ee0:	80 e3       	ldi	r24, 0x30	; 48
     ee2:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
     ee6:	69 c0       	rjmp	.+210    	; 0xfba <CLCD_voidSendNumber+0x108>

		return;
	}
	else if (copy_s32Number<0)
     ee8:	8e 85       	ldd	r24, Y+14	; 0x0e
     eea:	9f 85       	ldd	r25, Y+15	; 0x0f
     eec:	a8 89       	ldd	r26, Y+16	; 0x10
     eee:	b9 89       	ldd	r27, Y+17	; 0x11
     ef0:	bb 23       	and	r27, r27
     ef2:	0c f0       	brlt	.+2      	; 0xef6 <CLCD_voidSendNumber+0x44>
     ef4:	43 c0       	rjmp	.+134    	; 0xf7c <CLCD_voidSendNumber+0xca>
	{
		CLCD_voidSendData('-');
     ef6:	8d e2       	ldi	r24, 0x2D	; 45
     ef8:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
		copy_s32Number *=-1;
     efc:	8e 85       	ldd	r24, Y+14	; 0x0e
     efe:	9f 85       	ldd	r25, Y+15	; 0x0f
     f00:	a8 89       	ldd	r26, Y+16	; 0x10
     f02:	b9 89       	ldd	r27, Y+17	; 0x11
     f04:	b0 95       	com	r27
     f06:	a0 95       	com	r26
     f08:	90 95       	com	r25
     f0a:	81 95       	neg	r24
     f0c:	9f 4f       	sbci	r25, 0xFF	; 255
     f0e:	af 4f       	sbci	r26, 0xFF	; 255
     f10:	bf 4f       	sbci	r27, 0xFF	; 255
     f12:	8e 87       	std	Y+14, r24	; 0x0e
     f14:	9f 87       	std	Y+15, r25	; 0x0f
     f16:	a8 8b       	std	Y+16, r26	; 0x10
     f18:	b9 8b       	std	Y+17, r27	; 0x11
     f1a:	30 c0       	rjmp	.+96     	; 0xf7c <CLCD_voidSendNumber+0xca>
	}

	while(copy_s32Number!=0)
	{

		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
     f1c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f1e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f20:	a8 89       	ldd	r26, Y+16	; 0x10
     f22:	b9 89       	ldd	r27, Y+17	; 0x11
     f24:	2a e0       	ldi	r18, 0x0A	; 10
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	40 e0       	ldi	r20, 0x00	; 0
     f2a:	50 e0       	ldi	r21, 0x00	; 0
     f2c:	bc 01       	movw	r22, r24
     f2e:	cd 01       	movw	r24, r26
     f30:	0e 94 bb 1c 	call	0x3976	; 0x3976 <__divmodsi4>
     f34:	dc 01       	movw	r26, r24
     f36:	cb 01       	movw	r24, r22
     f38:	8b 83       	std	Y+3, r24	; 0x03
		copy_s32Number /=10;/*Get rid of the right most digit*/
     f3a:	8e 85       	ldd	r24, Y+14	; 0x0e
     f3c:	9f 85       	ldd	r25, Y+15	; 0x0f
     f3e:	a8 89       	ldd	r26, Y+16	; 0x10
     f40:	b9 89       	ldd	r27, Y+17	; 0x11
     f42:	2a e0       	ldi	r18, 0x0A	; 10
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e0       	ldi	r20, 0x00	; 0
     f48:	50 e0       	ldi	r21, 0x00	; 0
     f4a:	bc 01       	movw	r22, r24
     f4c:	cd 01       	movw	r24, r26
     f4e:	0e 94 bb 1c 	call	0x3976	; 0x3976 <__divmodsi4>
     f52:	da 01       	movw	r26, r20
     f54:	c9 01       	movw	r24, r18
     f56:	8e 87       	std	Y+14, r24	; 0x0e
     f58:	9f 87       	std	Y+15, r25	; 0x0f
     f5a:	a8 8b       	std	Y+16, r26	; 0x10
     f5c:	b9 8b       	std	Y+17, r27	; 0x11
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	28 2f       	mov	r18, r24
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	8b 81       	ldd	r24, Y+3	; 0x03
     f66:	48 2f       	mov	r20, r24
     f68:	40 5d       	subi	r20, 0xD0	; 208
     f6a:	ce 01       	movw	r24, r28
     f6c:	04 96       	adiw	r24, 0x04	; 4
     f6e:	fc 01       	movw	r30, r24
     f70:	e2 0f       	add	r30, r18
     f72:	f3 1f       	adc	r31, r19
     f74:	40 83       	st	Z, r20
		Local_u8Counter++;
     f76:	8a 81       	ldd	r24, Y+2	; 0x02
     f78:	8f 5f       	subi	r24, 0xFF	; 255
     f7a:	8a 83       	std	Y+2, r24	; 0x02
	{
		CLCD_voidSendData('-');
		copy_s32Number *=-1;
	}

	while(copy_s32Number!=0)
     f7c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f7e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f80:	a8 89       	ldd	r26, Y+16	; 0x10
     f82:	b9 89       	ldd	r27, Y+17	; 0x11
     f84:	00 97       	sbiw	r24, 0x00	; 0
     f86:	a1 05       	cpc	r26, r1
     f88:	b1 05       	cpc	r27, r1
     f8a:	41 f6       	brne	.-112    	; 0xf1c <CLCD_voidSendNumber+0x6a>
		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
		copy_s32Number /=10;/*Get rid of the right most digit*/
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2=Local_u8Counter-1;Local_s8Counter2>=0;Local_s8Counter2--)
     f8c:	8a 81       	ldd	r24, Y+2	; 0x02
     f8e:	81 50       	subi	r24, 0x01	; 1
     f90:	89 83       	std	Y+1, r24	; 0x01
     f92:	10 c0       	rjmp	.+32     	; 0xfb4 <CLCD_voidSendNumber+0x102>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
     f94:	89 81       	ldd	r24, Y+1	; 0x01
     f96:	28 2f       	mov	r18, r24
     f98:	33 27       	eor	r19, r19
     f9a:	27 fd       	sbrc	r18, 7
     f9c:	30 95       	com	r19
     f9e:	ce 01       	movw	r24, r28
     fa0:	04 96       	adiw	r24, 0x04	; 4
     fa2:	fc 01       	movw	r30, r24
     fa4:	e2 0f       	add	r30, r18
     fa6:	f3 1f       	adc	r31, r19
     fa8:	80 81       	ld	r24, Z
     faa:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
		copy_s32Number /=10;/*Get rid of the right most digit*/
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2=Local_u8Counter-1;Local_s8Counter2>=0;Local_s8Counter2--)
     fae:	89 81       	ldd	r24, Y+1	; 0x01
     fb0:	81 50       	subi	r24, 0x01	; 1
     fb2:	89 83       	std	Y+1, r24	; 0x01
     fb4:	89 81       	ldd	r24, Y+1	; 0x01
     fb6:	88 23       	and	r24, r24
     fb8:	6c f7       	brge	.-38     	; 0xf94 <CLCD_voidSendNumber+0xe2>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
	}


}
     fba:	61 96       	adiw	r28, 0x11	; 17
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	cf 91       	pop	r28
     fc8:	df 91       	pop	r29
     fca:	08 95       	ret

00000fcc <CLCD_voidGoToXY>:


void CLCD_voidGoToXY (uint8 copy_u8Xpos,uint8 copy_u8Ypos)
{
     fcc:	df 93       	push	r29
     fce:	cf 93       	push	r28
     fd0:	00 d0       	rcall	.+0      	; 0xfd2 <CLCD_voidGoToXY+0x6>
     fd2:	0f 92       	push	r0
     fd4:	cd b7       	in	r28, 0x3d	; 61
     fd6:	de b7       	in	r29, 0x3e	; 62
     fd8:	8a 83       	std	Y+2, r24	; 0x02
     fda:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8DDRamAdd= (copy_u8Ypos*0x40)+copy_u8Xpos;
     fdc:	8b 81       	ldd	r24, Y+3	; 0x03
     fde:	88 2f       	mov	r24, r24
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	00 24       	eor	r0, r0
     fe4:	96 95       	lsr	r25
     fe6:	87 95       	ror	r24
     fe8:	07 94       	ror	r0
     fea:	96 95       	lsr	r25
     fec:	87 95       	ror	r24
     fee:	07 94       	ror	r0
     ff0:	98 2f       	mov	r25, r24
     ff2:	80 2d       	mov	r24, r0
     ff4:	98 2f       	mov	r25, r24
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	89 0f       	add	r24, r25
     ffa:	89 83       	std	Y+1, r24	; 0x01
	 * }
	 *

	 */
	/*set bit7 for setting DDRAM adress command*/
	SET_BIT (Local_u8DDRamAdd,7u);
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	80 68       	ori	r24, 0x80	; 128
    1000:	89 83       	std	Y+1, r24	; 0x01
	/*send the setting DDRAM address command*/
	CLCD_voidSendCommand(Local_u8DDRamAdd);
    1002:	89 81       	ldd	r24, Y+1	; 0x01
    1004:	0e 94 62 06 	call	0xcc4	; 0xcc4 <CLCD_voidSendCommand>
}
    1008:	0f 90       	pop	r0
    100a:	0f 90       	pop	r0
    100c:	0f 90       	pop	r0
    100e:	cf 91       	pop	r28
    1010:	df 91       	pop	r29
    1012:	08 95       	ret

00001014 <CLCD_u8WriteSpecialCharacter>:

uint8 CLCD_u8WriteSpecialCharacter(uint8 copy_u8PatternNumber,uint8 copy_pu8PatternArr[],uint8 copy_u8Xpos,uint8 copy_u8Ypos)
{
    1014:	df 93       	push	r29
    1016:	cf 93       	push	r28
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	28 97       	sbiw	r28, 0x08	; 8
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	f8 94       	cli
    1022:	de bf       	out	0x3e, r29	; 62
    1024:	0f be       	out	0x3f, r0	; 63
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	8c 83       	std	Y+4, r24	; 0x04
    102a:	7e 83       	std	Y+6, r23	; 0x06
    102c:	6d 83       	std	Y+5, r22	; 0x05
    102e:	4f 83       	std	Y+7, r20	; 0x07
    1030:	28 87       	std	Y+8, r18	; 0x08
	uint8 Local_u8ErrorState=OK;
    1032:	1b 82       	std	Y+3, r1	; 0x03
	if(copy_pu8PatternArr !=NULL)
    1034:	8d 81       	ldd	r24, Y+5	; 0x05
    1036:	9e 81       	ldd	r25, Y+6	; 0x06
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	59 f1       	breq	.+86     	; 0x1092 <CLCD_u8WriteSpecialCharacter+0x7e>
	{
		uint8 Local_u8CGRAMAdd =copy_u8PatternNumber*8u;
    103c:	8c 81       	ldd	r24, Y+4	; 0x04
    103e:	88 2f       	mov	r24, r24
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	88 0f       	add	r24, r24
    1044:	99 1f       	adc	r25, r25
    1046:	88 0f       	add	r24, r24
    1048:	99 1f       	adc	r25, r25
    104a:	88 0f       	add	r24, r24
    104c:	99 1f       	adc	r25, r25
    104e:	8a 83       	std	Y+2, r24	; 0x02
		uint8 Local_u8Iterator;
		/*set bit6 clear bit7 for setting CGRAM adress command*/
		SET_BIT(Local_u8CGRAMAdd,6u);
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	80 64       	ori	r24, 0x40	; 64
    1054:	8a 83       	std	Y+2, r24	; 0x02
		/*Set CGRAM adress*/
		CLCD_voidSendCommand(Local_u8CGRAMAdd);
    1056:	8a 81       	ldd	r24, Y+2	; 0x02
    1058:	0e 94 62 06 	call	0xcc4	; 0xcc4 <CLCD_voidSendCommand>
		/*write the pattern inside CGRAM*/
		for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    105c:	19 82       	std	Y+1, r1	; 0x01
    105e:	0e c0       	rjmp	.+28     	; 0x107c <CLCD_u8WriteSpecialCharacter+0x68>
		{
			CLCD_voidSendData(copy_pu8PatternArr[Local_u8Iterator]);
    1060:	89 81       	ldd	r24, Y+1	; 0x01
    1062:	28 2f       	mov	r18, r24
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	8d 81       	ldd	r24, Y+5	; 0x05
    1068:	9e 81       	ldd	r25, Y+6	; 0x06
    106a:	fc 01       	movw	r30, r24
    106c:	e2 0f       	add	r30, r18
    106e:	f3 1f       	adc	r31, r19
    1070:	80 81       	ld	r24, Z
    1072:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
		/*set bit6 clear bit7 for setting CGRAM adress command*/
		SET_BIT(Local_u8CGRAMAdd,6u);
		/*Set CGRAM adress*/
		CLCD_voidSendCommand(Local_u8CGRAMAdd);
		/*write the pattern inside CGRAM*/
		for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1076:	89 81       	ldd	r24, Y+1	; 0x01
    1078:	8f 5f       	subi	r24, 0xFF	; 255
    107a:	89 83       	std	Y+1, r24	; 0x01
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	88 30       	cpi	r24, 0x08	; 8
    1080:	78 f3       	brcs	.-34     	; 0x1060 <CLCD_u8WriteSpecialCharacter+0x4c>
		{
			CLCD_voidSendData(copy_pu8PatternArr[Local_u8Iterator]);
		}
		/*set DDRAM adress*/
		CLCD_voidGoToXY(copy_u8Xpos,copy_u8Ypos);
    1082:	8f 81       	ldd	r24, Y+7	; 0x07
    1084:	68 85       	ldd	r22, Y+8	; 0x08
    1086:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
		/*write the corresponding pattern number to be displayed from CGRAM*/
		CLCD_voidSendData(copy_u8PatternNumber);
    108a:	8c 81       	ldd	r24, Y+4	; 0x04
    108c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <CLCD_u8WriteSpecialCharacter+0x82>
	}
	else
	{
		Local_u8ErrorState=NULL_PTR;
    1092:	82 e0       	ldi	r24, 0x02	; 2
    1094:	8b 83       	std	Y+3, r24	; 0x03
	}
	return Local_u8ErrorState;
    1096:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1098:	28 96       	adiw	r28, 0x08	; 8
    109a:	0f b6       	in	r0, 0x3f	; 63
    109c:	f8 94       	cli
    109e:	de bf       	out	0x3e, r29	; 62
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	cf 91       	pop	r28
    10a6:	df 91       	pop	r29
    10a8:	08 95       	ret

000010aa <CLCD_voidCalc>:


  void  CLCD_voidCalc(void)
{
    10aa:	0f 93       	push	r16
    10ac:	1f 93       	push	r17
    10ae:	df 93       	push	r29
    10b0:	cf 93       	push	r28
    10b2:	cd b7       	in	r28, 0x3d	; 61
    10b4:	de b7       	in	r29, 0x3e	; 62
    10b6:	e6 97       	sbiw	r28, 0x36	; 54
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
	// Function to convert an integer to a string
	void itoa(int n, char *str)
		{
		    sprintf(str, "%d", n);
		}
	switch (Local_s8Iterator1)
    10c2:	80 91 aa 00 	lds	r24, 0x00AA
    10c6:	28 2f       	mov	r18, r24
    10c8:	33 27       	eor	r19, r19
    10ca:	27 fd       	sbrc	r18, 7
    10cc:	30 95       	com	r19
    10ce:	3e ab       	std	Y+54, r19	; 0x36
    10d0:	2d ab       	std	Y+53, r18	; 0x35
    10d2:	8d a9       	ldd	r24, Y+53	; 0x35
    10d4:	9e a9       	ldd	r25, Y+54	; 0x36
    10d6:	81 30       	cpi	r24, 0x01	; 1
    10d8:	91 05       	cpc	r25, r1
    10da:	a1 f1       	breq	.+104    	; 0x1144 <CLCD_voidCalc+0x9a>
    10dc:	2d a9       	ldd	r18, Y+53	; 0x35
    10de:	3e a9       	ldd	r19, Y+54	; 0x36
    10e0:	22 30       	cpi	r18, 0x02	; 2
    10e2:	31 05       	cpc	r19, r1
    10e4:	2c f4       	brge	.+10     	; 0x10f0 <CLCD_voidCalc+0x46>
    10e6:	8d a9       	ldd	r24, Y+53	; 0x35
    10e8:	9e a9       	ldd	r25, Y+54	; 0x36
    10ea:	00 97       	sbiw	r24, 0x00	; 0
    10ec:	71 f0       	breq	.+28     	; 0x110a <CLCD_voidCalc+0x60>
    10ee:	07 c1       	rjmp	.+526    	; 0x12fe <CLCD_voidCalc+0x254>
    10f0:	2d a9       	ldd	r18, Y+53	; 0x35
    10f2:	3e a9       	ldd	r19, Y+54	; 0x36
    10f4:	22 30       	cpi	r18, 0x02	; 2
    10f6:	31 05       	cpc	r19, r1
    10f8:	09 f4       	brne	.+2      	; 0x10fc <CLCD_voidCalc+0x52>
    10fa:	41 c0       	rjmp	.+130    	; 0x117e <CLCD_voidCalc+0xd4>
    10fc:	8d a9       	ldd	r24, Y+53	; 0x35
    10fe:	9e a9       	ldd	r25, Y+54	; 0x36
    1100:	83 30       	cpi	r24, 0x03	; 3
    1102:	91 05       	cpc	r25, r1
    1104:	09 f4       	brne	.+2      	; 0x1108 <CLCD_voidCalc+0x5e>
    1106:	5a c0       	rjmp	.+180    	; 0x11bc <CLCD_voidCalc+0x112>
    1108:	fa c0       	rjmp	.+500    	; 0x12fe <CLCD_voidCalc+0x254>
	{
	case 0: Local_s32Result= Local_s32Num1+Local_s32Num2;break;
    110a:	80 91 92 00 	lds	r24, 0x0092
    110e:	90 91 93 00 	lds	r25, 0x0093
    1112:	a0 91 94 00 	lds	r26, 0x0094
    1116:	b0 91 95 00 	lds	r27, 0x0095
    111a:	20 91 96 00 	lds	r18, 0x0096
    111e:	30 91 97 00 	lds	r19, 0x0097
    1122:	40 91 98 00 	lds	r20, 0x0098
    1126:	50 91 99 00 	lds	r21, 0x0099
    112a:	82 0f       	add	r24, r18
    112c:	93 1f       	adc	r25, r19
    112e:	a4 1f       	adc	r26, r20
    1130:	b5 1f       	adc	r27, r21
    1132:	80 93 a6 00 	sts	0x00A6, r24
    1136:	90 93 a7 00 	sts	0x00A7, r25
    113a:	a0 93 a8 00 	sts	0x00A8, r26
    113e:	b0 93 a9 00 	sts	0x00A9, r27
    1142:	dd c0       	rjmp	.+442    	; 0x12fe <CLCD_voidCalc+0x254>

	case 1:Local_s32Result= (Local_s32Num1-Local_s32Num2); break;
    1144:	80 91 92 00 	lds	r24, 0x0092
    1148:	90 91 93 00 	lds	r25, 0x0093
    114c:	a0 91 94 00 	lds	r26, 0x0094
    1150:	b0 91 95 00 	lds	r27, 0x0095
    1154:	20 91 96 00 	lds	r18, 0x0096
    1158:	30 91 97 00 	lds	r19, 0x0097
    115c:	40 91 98 00 	lds	r20, 0x0098
    1160:	50 91 99 00 	lds	r21, 0x0099
    1164:	82 1b       	sub	r24, r18
    1166:	93 0b       	sbc	r25, r19
    1168:	a4 0b       	sbc	r26, r20
    116a:	b5 0b       	sbc	r27, r21
    116c:	80 93 a6 00 	sts	0x00A6, r24
    1170:	90 93 a7 00 	sts	0x00A7, r25
    1174:	a0 93 a8 00 	sts	0x00A8, r26
    1178:	b0 93 a9 00 	sts	0x00A9, r27
    117c:	c0 c0       	rjmp	.+384    	; 0x12fe <CLCD_voidCalc+0x254>

	case 2:Local_s32Result=(Local_s32Num1*Local_s32Num2); break;
    117e:	80 91 92 00 	lds	r24, 0x0092
    1182:	90 91 93 00 	lds	r25, 0x0093
    1186:	a0 91 94 00 	lds	r26, 0x0094
    118a:	b0 91 95 00 	lds	r27, 0x0095
    118e:	20 91 96 00 	lds	r18, 0x0096
    1192:	30 91 97 00 	lds	r19, 0x0097
    1196:	40 91 98 00 	lds	r20, 0x0098
    119a:	50 91 99 00 	lds	r21, 0x0099
    119e:	bc 01       	movw	r22, r24
    11a0:	cd 01       	movw	r24, r26
    11a2:	0e 94 9c 1c 	call	0x3938	; 0x3938 <__mulsi3>
    11a6:	dc 01       	movw	r26, r24
    11a8:	cb 01       	movw	r24, r22
    11aa:	80 93 a6 00 	sts	0x00A6, r24
    11ae:	90 93 a7 00 	sts	0x00A7, r25
    11b2:	a0 93 a8 00 	sts	0x00A8, r26
    11b6:	b0 93 a9 00 	sts	0x00A9, r27
    11ba:	a1 c0       	rjmp	.+322    	; 0x12fe <CLCD_voidCalc+0x254>

	case 3:

		Local_s32ScaledResult=(Local_s32Num1*100)/Local_s32Num2;
    11bc:	80 91 92 00 	lds	r24, 0x0092
    11c0:	90 91 93 00 	lds	r25, 0x0093
    11c4:	a0 91 94 00 	lds	r26, 0x0094
    11c8:	b0 91 95 00 	lds	r27, 0x0095
    11cc:	24 e6       	ldi	r18, 0x64	; 100
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	40 e0       	ldi	r20, 0x00	; 0
    11d2:	50 e0       	ldi	r21, 0x00	; 0
    11d4:	bc 01       	movw	r22, r24
    11d6:	cd 01       	movw	r24, r26
    11d8:	0e 94 9c 1c 	call	0x3938	; 0x3938 <__mulsi3>
    11dc:	dc 01       	movw	r26, r24
    11de:	cb 01       	movw	r24, r22
    11e0:	20 91 96 00 	lds	r18, 0x0096
    11e4:	30 91 97 00 	lds	r19, 0x0097
    11e8:	40 91 98 00 	lds	r20, 0x0098
    11ec:	50 91 99 00 	lds	r21, 0x0099
    11f0:	bc 01       	movw	r22, r24
    11f2:	cd 01       	movw	r24, r26
    11f4:	0e 94 bb 1c 	call	0x3976	; 0x3976 <__divmodsi4>
    11f8:	da 01       	movw	r26, r20
    11fa:	c9 01       	movw	r24, r18
    11fc:	89 87       	std	Y+9, r24	; 0x09
    11fe:	9a 87       	std	Y+10, r25	; 0x0a
    1200:	ab 87       	std	Y+11, r26	; 0x0b
    1202:	bc 87       	std	Y+12, r27	; 0x0c
	       Local_s32Quotian=Local_s32ScaledResult/100;
    1204:	89 85       	ldd	r24, Y+9	; 0x09
    1206:	9a 85       	ldd	r25, Y+10	; 0x0a
    1208:	ab 85       	ldd	r26, Y+11	; 0x0b
    120a:	bc 85       	ldd	r27, Y+12	; 0x0c
    120c:	24 e6       	ldi	r18, 0x64	; 100
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	40 e0       	ldi	r20, 0x00	; 0
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	bc 01       	movw	r22, r24
    1216:	cd 01       	movw	r24, r26
    1218:	0e 94 bb 1c 	call	0x3976	; 0x3976 <__divmodsi4>
    121c:	da 01       	movw	r26, r20
    121e:	c9 01       	movw	r24, r18
    1220:	8d 83       	std	Y+5, r24	; 0x05
    1222:	9e 83       	std	Y+6, r25	; 0x06
    1224:	af 83       	std	Y+7, r26	; 0x07
    1226:	b8 87       	std	Y+8, r27	; 0x08
	       Local_S32Remainder=Local_s32ScaledResult%100;
    1228:	89 85       	ldd	r24, Y+9	; 0x09
    122a:	9a 85       	ldd	r25, Y+10	; 0x0a
    122c:	ab 85       	ldd	r26, Y+11	; 0x0b
    122e:	bc 85       	ldd	r27, Y+12	; 0x0c
    1230:	24 e6       	ldi	r18, 0x64	; 100
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	40 e0       	ldi	r20, 0x00	; 0
    1236:	50 e0       	ldi	r21, 0x00	; 0
    1238:	bc 01       	movw	r22, r24
    123a:	cd 01       	movw	r24, r26
    123c:	0e 94 bb 1c 	call	0x3976	; 0x3976 <__divmodsi4>
    1240:	dc 01       	movw	r26, r24
    1242:	cb 01       	movw	r24, r22
    1244:	89 83       	std	Y+1, r24	; 0x01
    1246:	9a 83       	std	Y+2, r25	; 0x02
    1248:	ab 83       	std	Y+3, r26	; 0x03
    124a:	bc 83       	std	Y+4, r27	; 0x04

	       // Convert the quotient and remainder to string format
	       char strQuotient[10];
	       char strRemainder[10];
	       itoa(Local_s32Quotian, strQuotient);
    124c:	8d 81       	ldd	r24, Y+5	; 0x05
    124e:	9e 81       	ldd	r25, Y+6	; 0x06
    1250:	9e 01       	movw	r18, r28
    1252:	2f 5d       	subi	r18, 0xDF	; 223
    1254:	3f 4f       	sbci	r19, 0xFF	; 255
    1256:	b9 01       	movw	r22, r18
    1258:	0e 94 8a 09 	call	0x1314	; 0x1314 <itoa.1733>
	       itoa(Local_S32Remainder, strRemainder);
    125c:	89 81       	ldd	r24, Y+1	; 0x01
    125e:	9a 81       	ldd	r25, Y+2	; 0x02
    1260:	9e 01       	movw	r18, r28
    1262:	25 5d       	subi	r18, 0xD5	; 213
    1264:	3f 4f       	sbci	r19, 0xFF	; 255
    1266:	b9 01       	movw	r22, r18
    1268:	0e 94 8a 09 	call	0x1314	; 0x1314 <itoa.1733>
	       itoa( Local_s32Result, result);
    126c:	80 91 a6 00 	lds	r24, 0x00A6
    1270:	90 91 a7 00 	lds	r25, 0x00A7
    1274:	a0 91 a8 00 	lds	r26, 0x00A8
    1278:	b0 91 a9 00 	lds	r27, 0x00A9
    127c:	9e 01       	movw	r18, r28
    127e:	23 5f       	subi	r18, 0xF3	; 243
    1280:	3f 4f       	sbci	r19, 0xFF	; 255
    1282:	b9 01       	movw	r22, r18
    1284:	0e 94 8a 09 	call	0x1314	; 0x1314 <itoa.1733>
	       // Prepare the formatted result string with two decimal places

	       strcpy(result, strQuotient);
    1288:	ce 01       	movw	r24, r28
    128a:	0d 96       	adiw	r24, 0x0d	; 13
    128c:	9e 01       	movw	r18, r28
    128e:	2f 5d       	subi	r18, 0xDF	; 223
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	b9 01       	movw	r22, r18
    1294:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <strcpy>
	       strcat(result, ".");
    1298:	8e 01       	movw	r16, r28
    129a:	03 5f       	subi	r16, 0xF3	; 243
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	ce 01       	movw	r24, r28
    12a0:	0d 96       	adiw	r24, 0x0d	; 13
    12a2:	0e 94 4a 1d 	call	0x3a94	; 0x3a94 <strlen>
    12a6:	80 0f       	add	r24, r16
    12a8:	91 1f       	adc	r25, r17
    12aa:	20 e6       	ldi	r18, 0x60	; 96
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	b9 01       	movw	r22, r18
    12b0:	42 e0       	ldi	r20, 0x02	; 2
    12b2:	50 e0       	ldi	r21, 0x00	; 0
    12b4:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <memcpy>
	       if (strlen(strRemainder) == 1) {
    12b8:	ce 01       	movw	r24, r28
    12ba:	8b 96       	adiw	r24, 0x2b	; 43
    12bc:	0e 94 4a 1d 	call	0x3a94	; 0x3a94 <strlen>
    12c0:	81 30       	cpi	r24, 0x01	; 1
    12c2:	91 05       	cpc	r25, r1
    12c4:	81 f4       	brne	.+32     	; 0x12e6 <CLCD_voidCalc+0x23c>
	           strcat(result, "0");
    12c6:	8e 01       	movw	r16, r28
    12c8:	03 5f       	subi	r16, 0xF3	; 243
    12ca:	1f 4f       	sbci	r17, 0xFF	; 255
    12cc:	ce 01       	movw	r24, r28
    12ce:	0d 96       	adiw	r24, 0x0d	; 13
    12d0:	0e 94 4a 1d 	call	0x3a94	; 0x3a94 <strlen>
    12d4:	80 0f       	add	r24, r16
    12d6:	91 1f       	adc	r25, r17
    12d8:	22 e6       	ldi	r18, 0x62	; 98
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	b9 01       	movw	r22, r18
    12de:	42 e0       	ldi	r20, 0x02	; 2
    12e0:	50 e0       	ldi	r21, 0x00	; 0
    12e2:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <memcpy>
	       }
	       strcat(result, strRemainder);
    12e6:	ce 01       	movw	r24, r28
    12e8:	0d 96       	adiw	r24, 0x0d	; 13
    12ea:	9e 01       	movw	r18, r28
    12ec:	25 5d       	subi	r18, 0xD5	; 213
    12ee:	3f 4f       	sbci	r19, 0xFF	; 255
    12f0:	b9 01       	movw	r22, r18
    12f2:	0e 94 38 1d 	call	0x3a70	; 0x3a70 <strcat>

         CLCD_u8SendString(result);
    12f6:	ce 01       	movw	r24, r28
    12f8:	0d 96       	adiw	r24, 0x0d	; 13
    12fa:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
	       break;


	}

}
    12fe:	e6 96       	adiw	r28, 0x36	; 54
    1300:	0f b6       	in	r0, 0x3f	; 63
    1302:	f8 94       	cli
    1304:	de bf       	out	0x3e, r29	; 62
    1306:	0f be       	out	0x3f, r0	; 63
    1308:	cd bf       	out	0x3d, r28	; 61
    130a:	cf 91       	pop	r28
    130c:	df 91       	pop	r29
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	08 95       	ret

00001314 <itoa.1733>:
	 sint32 Local_S32Remainder;
	char result[20];
//	extern char ch_Operation[4]={'+','-','*','/'};
	// Function to convert an integer to a string
	void itoa(int n, char *str)
		{
    1314:	df 93       	push	r29
    1316:	cf 93       	push	r28
    1318:	00 d0       	rcall	.+0      	; 0x131a <itoa.1733+0x6>
    131a:	00 d0       	rcall	.+0      	; 0x131c <itoa.1733+0x8>
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
    1320:	9a 83       	std	Y+2, r25	; 0x02
    1322:	89 83       	std	Y+1, r24	; 0x01
    1324:	7c 83       	std	Y+4, r23	; 0x04
    1326:	6b 83       	std	Y+3, r22	; 0x03
		    sprintf(str, "%d", n);
    1328:	00 d0       	rcall	.+0      	; 0x132a <itoa.1733+0x16>
    132a:	00 d0       	rcall	.+0      	; 0x132c <itoa.1733+0x18>
    132c:	00 d0       	rcall	.+0      	; 0x132e <itoa.1733+0x1a>
    132e:	ed b7       	in	r30, 0x3d	; 61
    1330:	fe b7       	in	r31, 0x3e	; 62
    1332:	31 96       	adiw	r30, 0x01	; 1
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	9c 81       	ldd	r25, Y+4	; 0x04
    1338:	91 83       	std	Z+1, r25	; 0x01
    133a:	80 83       	st	Z, r24
    133c:	84 e6       	ldi	r24, 0x64	; 100
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	93 83       	std	Z+3, r25	; 0x03
    1342:	82 83       	std	Z+2, r24	; 0x02
    1344:	89 81       	ldd	r24, Y+1	; 0x01
    1346:	9a 81       	ldd	r25, Y+2	; 0x02
    1348:	95 83       	std	Z+5, r25	; 0x05
    134a:	84 83       	std	Z+4, r24	; 0x04
    134c:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <sprintf>
    1350:	8d b7       	in	r24, 0x3d	; 61
    1352:	9e b7       	in	r25, 0x3e	; 62
    1354:	06 96       	adiw	r24, 0x06	; 6
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	f8 94       	cli
    135a:	9e bf       	out	0x3e, r25	; 62
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	8d bf       	out	0x3d, r24	; 61
		}
    1360:	0f 90       	pop	r0
    1362:	0f 90       	pop	r0
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	cf 91       	pop	r28
    136a:	df 91       	pop	r29
    136c:	08 95       	ret

0000136e <DIO_u8SetPinDirection>:
#include "DIO_reg.h"
#include "DIO_interface.h"


uint8 DIO_u8SetPinDirection (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinDir_t copy_Dir)
{
    136e:	df 93       	push	r29
    1370:	cf 93       	push	r28
    1372:	cd b7       	in	r28, 0x3d	; 61
    1374:	de b7       	in	r29, 0x3e	; 62
    1376:	28 97       	sbiw	r28, 0x08	; 8
    1378:	0f b6       	in	r0, 0x3f	; 63
    137a:	f8 94       	cli
    137c:	de bf       	out	0x3e, r29	; 62
    137e:	0f be       	out	0x3f, r0	; 63
    1380:	cd bf       	out	0x3d, r28	; 61
    1382:	8a 83       	std	Y+2, r24	; 0x02
    1384:	6b 83       	std	Y+3, r22	; 0x03
    1386:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState= OK;
    1388:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	88 30       	cpi	r24, 0x08	; 8
    138e:	08 f0       	brcs	.+2      	; 0x1392 <DIO_u8SetPinDirection+0x24>
    1390:	f3 c0       	rjmp	.+486    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
	{
		if(copy_Dir==DIO_PIN_INPUT)
    1392:	8c 81       	ldd	r24, Y+4	; 0x04
    1394:	88 23       	and	r24, r24
    1396:	09 f0       	breq	.+2      	; 0x139a <DIO_u8SetPinDirection+0x2c>
    1398:	77 c0       	rjmp	.+238    	; 0x1488 <DIO_u8SetPinDirection+0x11a>
		{
			switch (copy_Port)
    139a:	8a 81       	ldd	r24, Y+2	; 0x02
    139c:	28 2f       	mov	r18, r24
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	38 87       	std	Y+8, r19	; 0x08
    13a2:	2f 83       	std	Y+7, r18	; 0x07
    13a4:	8f 81       	ldd	r24, Y+7	; 0x07
    13a6:	98 85       	ldd	r25, Y+8	; 0x08
    13a8:	81 30       	cpi	r24, 0x01	; 1
    13aa:	91 05       	cpc	r25, r1
    13ac:	59 f1       	breq	.+86     	; 0x1404 <DIO_u8SetPinDirection+0x96>
    13ae:	2f 81       	ldd	r18, Y+7	; 0x07
    13b0:	38 85       	ldd	r19, Y+8	; 0x08
    13b2:	22 30       	cpi	r18, 0x02	; 2
    13b4:	31 05       	cpc	r19, r1
    13b6:	2c f4       	brge	.+10     	; 0x13c2 <DIO_u8SetPinDirection+0x54>
    13b8:	8f 81       	ldd	r24, Y+7	; 0x07
    13ba:	98 85       	ldd	r25, Y+8	; 0x08
    13bc:	00 97       	sbiw	r24, 0x00	; 0
    13be:	69 f0       	breq	.+26     	; 0x13da <DIO_u8SetPinDirection+0x6c>
    13c0:	60 c0       	rjmp	.+192    	; 0x1482 <DIO_u8SetPinDirection+0x114>
    13c2:	2f 81       	ldd	r18, Y+7	; 0x07
    13c4:	38 85       	ldd	r19, Y+8	; 0x08
    13c6:	22 30       	cpi	r18, 0x02	; 2
    13c8:	31 05       	cpc	r19, r1
    13ca:	89 f1       	breq	.+98     	; 0x142e <DIO_u8SetPinDirection+0xc0>
    13cc:	8f 81       	ldd	r24, Y+7	; 0x07
    13ce:	98 85       	ldd	r25, Y+8	; 0x08
    13d0:	83 30       	cpi	r24, 0x03	; 3
    13d2:	91 05       	cpc	r25, r1
    13d4:	09 f4       	brne	.+2      	; 0x13d8 <DIO_u8SetPinDirection+0x6a>
    13d6:	40 c0       	rjmp	.+128    	; 0x1458 <DIO_u8SetPinDirection+0xea>
    13d8:	54 c0       	rjmp	.+168    	; 0x1482 <DIO_u8SetPinDirection+0x114>
			{
			case DIO_PORTA:CLR_BIT(DDRA,copy_PinNum);break;
    13da:	aa e3       	ldi	r26, 0x3A	; 58
    13dc:	b0 e0       	ldi	r27, 0x00	; 0
    13de:	ea e3       	ldi	r30, 0x3A	; 58
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	80 81       	ld	r24, Z
    13e4:	48 2f       	mov	r20, r24
    13e6:	8b 81       	ldd	r24, Y+3	; 0x03
    13e8:	28 2f       	mov	r18, r24
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	02 2e       	mov	r0, r18
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <DIO_u8SetPinDirection+0x8a>
    13f4:	88 0f       	add	r24, r24
    13f6:	99 1f       	adc	r25, r25
    13f8:	0a 94       	dec	r0
    13fa:	e2 f7       	brpl	.-8      	; 0x13f4 <DIO_u8SetPinDirection+0x86>
    13fc:	80 95       	com	r24
    13fe:	84 23       	and	r24, r20
    1400:	8c 93       	st	X, r24
    1402:	ba c0       	rjmp	.+372    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:CLR_BIT(DDRB,copy_PinNum);break;
    1404:	a7 e3       	ldi	r26, 0x37	; 55
    1406:	b0 e0       	ldi	r27, 0x00	; 0
    1408:	e7 e3       	ldi	r30, 0x37	; 55
    140a:	f0 e0       	ldi	r31, 0x00	; 0
    140c:	80 81       	ld	r24, Z
    140e:	48 2f       	mov	r20, r24
    1410:	8b 81       	ldd	r24, Y+3	; 0x03
    1412:	28 2f       	mov	r18, r24
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	02 2e       	mov	r0, r18
    141c:	02 c0       	rjmp	.+4      	; 0x1422 <DIO_u8SetPinDirection+0xb4>
    141e:	88 0f       	add	r24, r24
    1420:	99 1f       	adc	r25, r25
    1422:	0a 94       	dec	r0
    1424:	e2 f7       	brpl	.-8      	; 0x141e <DIO_u8SetPinDirection+0xb0>
    1426:	80 95       	com	r24
    1428:	84 23       	and	r24, r20
    142a:	8c 93       	st	X, r24
    142c:	a5 c0       	rjmp	.+330    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:CLR_BIT(DDRC,copy_PinNum);break;
    142e:	a4 e3       	ldi	r26, 0x34	; 52
    1430:	b0 e0       	ldi	r27, 0x00	; 0
    1432:	e4 e3       	ldi	r30, 0x34	; 52
    1434:	f0 e0       	ldi	r31, 0x00	; 0
    1436:	80 81       	ld	r24, Z
    1438:	48 2f       	mov	r20, r24
    143a:	8b 81       	ldd	r24, Y+3	; 0x03
    143c:	28 2f       	mov	r18, r24
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	81 e0       	ldi	r24, 0x01	; 1
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	02 2e       	mov	r0, r18
    1446:	02 c0       	rjmp	.+4      	; 0x144c <DIO_u8SetPinDirection+0xde>
    1448:	88 0f       	add	r24, r24
    144a:	99 1f       	adc	r25, r25
    144c:	0a 94       	dec	r0
    144e:	e2 f7       	brpl	.-8      	; 0x1448 <DIO_u8SetPinDirection+0xda>
    1450:	80 95       	com	r24
    1452:	84 23       	and	r24, r20
    1454:	8c 93       	st	X, r24
    1456:	90 c0       	rjmp	.+288    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:CLR_BIT(DDRD,copy_PinNum);break;
    1458:	a1 e3       	ldi	r26, 0x31	; 49
    145a:	b0 e0       	ldi	r27, 0x00	; 0
    145c:	e1 e3       	ldi	r30, 0x31	; 49
    145e:	f0 e0       	ldi	r31, 0x00	; 0
    1460:	80 81       	ld	r24, Z
    1462:	48 2f       	mov	r20, r24
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	28 2f       	mov	r18, r24
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	02 2e       	mov	r0, r18
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <DIO_u8SetPinDirection+0x108>
    1472:	88 0f       	add	r24, r24
    1474:	99 1f       	adc	r25, r25
    1476:	0a 94       	dec	r0
    1478:	e2 f7       	brpl	.-8      	; 0x1472 <DIO_u8SetPinDirection+0x104>
    147a:	80 95       	com	r24
    147c:	84 23       	and	r24, r20
    147e:	8c 93       	st	X, r24
    1480:	7b c0       	rjmp	.+246    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	89 83       	std	Y+1, r24	; 0x01
    1486:	78 c0       	rjmp	.+240    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			}

		}
		else if(copy_Dir==DIO_PIN_OUTPUT)
    1488:	8c 81       	ldd	r24, Y+4	; 0x04
    148a:	81 30       	cpi	r24, 0x01	; 1
    148c:	09 f0       	breq	.+2      	; 0x1490 <DIO_u8SetPinDirection+0x122>
    148e:	72 c0       	rjmp	.+228    	; 0x1574 <DIO_u8SetPinDirection+0x206>
		{
			switch (copy_Port)
    1490:	8a 81       	ldd	r24, Y+2	; 0x02
    1492:	28 2f       	mov	r18, r24
    1494:	30 e0       	ldi	r19, 0x00	; 0
    1496:	3e 83       	std	Y+6, r19	; 0x06
    1498:	2d 83       	std	Y+5, r18	; 0x05
    149a:	8d 81       	ldd	r24, Y+5	; 0x05
    149c:	9e 81       	ldd	r25, Y+6	; 0x06
    149e:	81 30       	cpi	r24, 0x01	; 1
    14a0:	91 05       	cpc	r25, r1
    14a2:	49 f1       	breq	.+82     	; 0x14f6 <DIO_u8SetPinDirection+0x188>
    14a4:	2d 81       	ldd	r18, Y+5	; 0x05
    14a6:	3e 81       	ldd	r19, Y+6	; 0x06
    14a8:	22 30       	cpi	r18, 0x02	; 2
    14aa:	31 05       	cpc	r19, r1
    14ac:	2c f4       	brge	.+10     	; 0x14b8 <DIO_u8SetPinDirection+0x14a>
    14ae:	8d 81       	ldd	r24, Y+5	; 0x05
    14b0:	9e 81       	ldd	r25, Y+6	; 0x06
    14b2:	00 97       	sbiw	r24, 0x00	; 0
    14b4:	61 f0       	breq	.+24     	; 0x14ce <DIO_u8SetPinDirection+0x160>
    14b6:	5b c0       	rjmp	.+182    	; 0x156e <DIO_u8SetPinDirection+0x200>
    14b8:	2d 81       	ldd	r18, Y+5	; 0x05
    14ba:	3e 81       	ldd	r19, Y+6	; 0x06
    14bc:	22 30       	cpi	r18, 0x02	; 2
    14be:	31 05       	cpc	r19, r1
    14c0:	71 f1       	breq	.+92     	; 0x151e <DIO_u8SetPinDirection+0x1b0>
    14c2:	8d 81       	ldd	r24, Y+5	; 0x05
    14c4:	9e 81       	ldd	r25, Y+6	; 0x06
    14c6:	83 30       	cpi	r24, 0x03	; 3
    14c8:	91 05       	cpc	r25, r1
    14ca:	e9 f1       	breq	.+122    	; 0x1546 <DIO_u8SetPinDirection+0x1d8>
    14cc:	50 c0       	rjmp	.+160    	; 0x156e <DIO_u8SetPinDirection+0x200>
			{
			case DIO_PORTA:SET_BIT(DDRA,copy_PinNum);break;
    14ce:	aa e3       	ldi	r26, 0x3A	; 58
    14d0:	b0 e0       	ldi	r27, 0x00	; 0
    14d2:	ea e3       	ldi	r30, 0x3A	; 58
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	48 2f       	mov	r20, r24
    14da:	8b 81       	ldd	r24, Y+3	; 0x03
    14dc:	28 2f       	mov	r18, r24
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	81 e0       	ldi	r24, 0x01	; 1
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	02 2e       	mov	r0, r18
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <DIO_u8SetPinDirection+0x17e>
    14e8:	88 0f       	add	r24, r24
    14ea:	99 1f       	adc	r25, r25
    14ec:	0a 94       	dec	r0
    14ee:	e2 f7       	brpl	.-8      	; 0x14e8 <DIO_u8SetPinDirection+0x17a>
    14f0:	84 2b       	or	r24, r20
    14f2:	8c 93       	st	X, r24
    14f4:	41 c0       	rjmp	.+130    	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:SET_BIT(DDRB,copy_PinNum);break;
    14f6:	a7 e3       	ldi	r26, 0x37	; 55
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e7 e3       	ldi	r30, 0x37	; 55
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	48 2f       	mov	r20, r24
    1502:	8b 81       	ldd	r24, Y+3	; 0x03
    1504:	28 2f       	mov	r18, r24
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	02 2e       	mov	r0, r18
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <DIO_u8SetPinDirection+0x1a6>
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	0a 94       	dec	r0
    1516:	e2 f7       	brpl	.-8      	; 0x1510 <DIO_u8SetPinDirection+0x1a2>
    1518:	84 2b       	or	r24, r20
    151a:	8c 93       	st	X, r24
    151c:	2d c0       	rjmp	.+90     	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:SET_BIT(DDRC,copy_PinNum);break;
    151e:	a4 e3       	ldi	r26, 0x34	; 52
    1520:	b0 e0       	ldi	r27, 0x00	; 0
    1522:	e4 e3       	ldi	r30, 0x34	; 52
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	80 81       	ld	r24, Z
    1528:	48 2f       	mov	r20, r24
    152a:	8b 81       	ldd	r24, Y+3	; 0x03
    152c:	28 2f       	mov	r18, r24
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	02 2e       	mov	r0, r18
    1536:	02 c0       	rjmp	.+4      	; 0x153c <DIO_u8SetPinDirection+0x1ce>
    1538:	88 0f       	add	r24, r24
    153a:	99 1f       	adc	r25, r25
    153c:	0a 94       	dec	r0
    153e:	e2 f7       	brpl	.-8      	; 0x1538 <DIO_u8SetPinDirection+0x1ca>
    1540:	84 2b       	or	r24, r20
    1542:	8c 93       	st	X, r24
    1544:	19 c0       	rjmp	.+50     	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:SET_BIT(DDRD,copy_PinNum);break;
    1546:	a1 e3       	ldi	r26, 0x31	; 49
    1548:	b0 e0       	ldi	r27, 0x00	; 0
    154a:	e1 e3       	ldi	r30, 0x31	; 49
    154c:	f0 e0       	ldi	r31, 0x00	; 0
    154e:	80 81       	ld	r24, Z
    1550:	48 2f       	mov	r20, r24
    1552:	8b 81       	ldd	r24, Y+3	; 0x03
    1554:	28 2f       	mov	r18, r24
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	02 2e       	mov	r0, r18
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <DIO_u8SetPinDirection+0x1f6>
    1560:	88 0f       	add	r24, r24
    1562:	99 1f       	adc	r25, r25
    1564:	0a 94       	dec	r0
    1566:	e2 f7       	brpl	.-8      	; 0x1560 <DIO_u8SetPinDirection+0x1f2>
    1568:	84 2b       	or	r24, r20
    156a:	8c 93       	st	X, r24
    156c:	05 c0       	rjmp	.+10     	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
    156e:	81 e0       	ldi	r24, 0x01	; 1
    1570:	89 83       	std	Y+1, r24	; 0x01
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <DIO_u8SetPinDirection+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
    1574:	81 e0       	ldi	r24, 0x01	; 1
    1576:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return Local_u8ErrorState;
    1578:	89 81       	ldd	r24, Y+1	; 0x01


}	
    157a:	28 96       	adiw	r28, 0x08	; 8
    157c:	0f b6       	in	r0, 0x3f	; 63
    157e:	f8 94       	cli
    1580:	de bf       	out	0x3e, r29	; 62
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	cd bf       	out	0x3d, r28	; 61
    1586:	cf 91       	pop	r28
    1588:	df 91       	pop	r29
    158a:	08 95       	ret

0000158c <DIO_SetPortDirection>:
uint8 DIO_SetPortDirection (DIO_Port_t copy_Port ,uint8 copy_u8Port_Dir )
{
    158c:	df 93       	push	r29
    158e:	cf 93       	push	r28
    1590:	00 d0       	rcall	.+0      	; 0x1592 <DIO_SetPortDirection+0x6>
    1592:	00 d0       	rcall	.+0      	; 0x1594 <DIO_SetPortDirection+0x8>
    1594:	0f 92       	push	r0
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	8a 83       	std	Y+2, r24	; 0x02
    159c:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState= OK;
    159e:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
    15a0:	8a 81       	ldd	r24, Y+2	; 0x02
    15a2:	28 2f       	mov	r18, r24
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	3d 83       	std	Y+5, r19	; 0x05
    15a8:	2c 83       	std	Y+4, r18	; 0x04
    15aa:	8c 81       	ldd	r24, Y+4	; 0x04
    15ac:	9d 81       	ldd	r25, Y+5	; 0x05
    15ae:	81 30       	cpi	r24, 0x01	; 1
    15b0:	91 05       	cpc	r25, r1
    15b2:	d1 f0       	breq	.+52     	; 0x15e8 <DIO_SetPortDirection+0x5c>
    15b4:	2c 81       	ldd	r18, Y+4	; 0x04
    15b6:	3d 81       	ldd	r19, Y+5	; 0x05
    15b8:	22 30       	cpi	r18, 0x02	; 2
    15ba:	31 05       	cpc	r19, r1
    15bc:	2c f4       	brge	.+10     	; 0x15c8 <DIO_SetPortDirection+0x3c>
    15be:	8c 81       	ldd	r24, Y+4	; 0x04
    15c0:	9d 81       	ldd	r25, Y+5	; 0x05
    15c2:	00 97       	sbiw	r24, 0x00	; 0
    15c4:	61 f0       	breq	.+24     	; 0x15de <DIO_SetPortDirection+0x52>
    15c6:	1f c0       	rjmp	.+62     	; 0x1606 <DIO_SetPortDirection+0x7a>
    15c8:	2c 81       	ldd	r18, Y+4	; 0x04
    15ca:	3d 81       	ldd	r19, Y+5	; 0x05
    15cc:	22 30       	cpi	r18, 0x02	; 2
    15ce:	31 05       	cpc	r19, r1
    15d0:	81 f0       	breq	.+32     	; 0x15f2 <DIO_SetPortDirection+0x66>
    15d2:	8c 81       	ldd	r24, Y+4	; 0x04
    15d4:	9d 81       	ldd	r25, Y+5	; 0x05
    15d6:	83 30       	cpi	r24, 0x03	; 3
    15d8:	91 05       	cpc	r25, r1
    15da:	81 f0       	breq	.+32     	; 0x15fc <DIO_SetPortDirection+0x70>
    15dc:	14 c0       	rjmp	.+40     	; 0x1606 <DIO_SetPortDirection+0x7a>
	{
	case DIO_PORTA:DDRA=copy_u8Port_Dir;break;
    15de:	ea e3       	ldi	r30, 0x3A	; 58
    15e0:	f0 e0       	ldi	r31, 0x00	; 0
    15e2:	8b 81       	ldd	r24, Y+3	; 0x03
    15e4:	80 83       	st	Z, r24
    15e6:	11 c0       	rjmp	.+34     	; 0x160a <DIO_SetPortDirection+0x7e>
	case DIO_PORTB:DDRB=copy_u8Port_Dir;break;
    15e8:	e7 e3       	ldi	r30, 0x37	; 55
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	8b 81       	ldd	r24, Y+3	; 0x03
    15ee:	80 83       	st	Z, r24
    15f0:	0c c0       	rjmp	.+24     	; 0x160a <DIO_SetPortDirection+0x7e>
	case DIO_PORTC:DDRC=copy_u8Port_Dir;break;
    15f2:	e4 e3       	ldi	r30, 0x34	; 52
    15f4:	f0 e0       	ldi	r31, 0x00	; 0
    15f6:	8b 81       	ldd	r24, Y+3	; 0x03
    15f8:	80 83       	st	Z, r24
    15fa:	07 c0       	rjmp	.+14     	; 0x160a <DIO_SetPortDirection+0x7e>
	case DIO_PORTD:DDRD=copy_u8Port_Dir;break;
    15fc:	e1 e3       	ldi	r30, 0x31	; 49
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	8b 81       	ldd	r24, Y+3	; 0x03
    1602:	80 83       	st	Z, r24
    1604:	02 c0       	rjmp	.+4      	; 0x160a <DIO_SetPortDirection+0x7e>
	default :Local_u8ErrorState=NOK;break;
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    160a:	89 81       	ldd	r24, Y+1	; 0x01
}
    160c:	0f 90       	pop	r0
    160e:	0f 90       	pop	r0
    1610:	0f 90       	pop	r0
    1612:	0f 90       	pop	r0
    1614:	0f 90       	pop	r0
    1616:	cf 91       	pop	r28
    1618:	df 91       	pop	r29
    161a:	08 95       	ret

0000161c <DIO_u8SetPinValue>:


uint8 DIO_u8SetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinVal_t  copy_Val)
{
    161c:	df 93       	push	r29
    161e:	cf 93       	push	r28
    1620:	cd b7       	in	r28, 0x3d	; 61
    1622:	de b7       	in	r29, 0x3e	; 62
    1624:	28 97       	sbiw	r28, 0x08	; 8
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	f8 94       	cli
    162a:	de bf       	out	0x3e, r29	; 62
    162c:	0f be       	out	0x3f, r0	; 63
    162e:	cd bf       	out	0x3d, r28	; 61
    1630:	8a 83       	std	Y+2, r24	; 0x02
    1632:	6b 83       	std	Y+3, r22	; 0x03
    1634:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
    1636:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	88 30       	cpi	r24, 0x08	; 8
    163c:	08 f0       	brcs	.+2      	; 0x1640 <DIO_u8SetPinValue+0x24>
    163e:	f3 c0       	rjmp	.+486    	; 0x1826 <DIO_u8SetPinValue+0x20a>
	{
		if(copy_Val==DIO_PIN_LOW)
    1640:	8c 81       	ldd	r24, Y+4	; 0x04
    1642:	88 23       	and	r24, r24
    1644:	09 f0       	breq	.+2      	; 0x1648 <DIO_u8SetPinValue+0x2c>
    1646:	77 c0       	rjmp	.+238    	; 0x1736 <DIO_u8SetPinValue+0x11a>
		{
			switch (copy_Port)
    1648:	8a 81       	ldd	r24, Y+2	; 0x02
    164a:	28 2f       	mov	r18, r24
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	38 87       	std	Y+8, r19	; 0x08
    1650:	2f 83       	std	Y+7, r18	; 0x07
    1652:	8f 81       	ldd	r24, Y+7	; 0x07
    1654:	98 85       	ldd	r25, Y+8	; 0x08
    1656:	81 30       	cpi	r24, 0x01	; 1
    1658:	91 05       	cpc	r25, r1
    165a:	59 f1       	breq	.+86     	; 0x16b2 <DIO_u8SetPinValue+0x96>
    165c:	2f 81       	ldd	r18, Y+7	; 0x07
    165e:	38 85       	ldd	r19, Y+8	; 0x08
    1660:	22 30       	cpi	r18, 0x02	; 2
    1662:	31 05       	cpc	r19, r1
    1664:	2c f4       	brge	.+10     	; 0x1670 <DIO_u8SetPinValue+0x54>
    1666:	8f 81       	ldd	r24, Y+7	; 0x07
    1668:	98 85       	ldd	r25, Y+8	; 0x08
    166a:	00 97       	sbiw	r24, 0x00	; 0
    166c:	69 f0       	breq	.+26     	; 0x1688 <DIO_u8SetPinValue+0x6c>
    166e:	60 c0       	rjmp	.+192    	; 0x1730 <DIO_u8SetPinValue+0x114>
    1670:	2f 81       	ldd	r18, Y+7	; 0x07
    1672:	38 85       	ldd	r19, Y+8	; 0x08
    1674:	22 30       	cpi	r18, 0x02	; 2
    1676:	31 05       	cpc	r19, r1
    1678:	89 f1       	breq	.+98     	; 0x16dc <DIO_u8SetPinValue+0xc0>
    167a:	8f 81       	ldd	r24, Y+7	; 0x07
    167c:	98 85       	ldd	r25, Y+8	; 0x08
    167e:	83 30       	cpi	r24, 0x03	; 3
    1680:	91 05       	cpc	r25, r1
    1682:	09 f4       	brne	.+2      	; 0x1686 <DIO_u8SetPinValue+0x6a>
    1684:	40 c0       	rjmp	.+128    	; 0x1706 <DIO_u8SetPinValue+0xea>
    1686:	54 c0       	rjmp	.+168    	; 0x1730 <DIO_u8SetPinValue+0x114>
			{
			case DIO_PORTA:CLR_BIT(PORTA,copy_PinNum);break;
    1688:	ab e3       	ldi	r26, 0x3B	; 59
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	eb e3       	ldi	r30, 0x3B	; 59
    168e:	f0 e0       	ldi	r31, 0x00	; 0
    1690:	80 81       	ld	r24, Z
    1692:	48 2f       	mov	r20, r24
    1694:	8b 81       	ldd	r24, Y+3	; 0x03
    1696:	28 2f       	mov	r18, r24
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	81 e0       	ldi	r24, 0x01	; 1
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	02 2e       	mov	r0, r18
    16a0:	02 c0       	rjmp	.+4      	; 0x16a6 <DIO_u8SetPinValue+0x8a>
    16a2:	88 0f       	add	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	0a 94       	dec	r0
    16a8:	e2 f7       	brpl	.-8      	; 0x16a2 <DIO_u8SetPinValue+0x86>
    16aa:	80 95       	com	r24
    16ac:	84 23       	and	r24, r20
    16ae:	8c 93       	st	X, r24
    16b0:	ba c0       	rjmp	.+372    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:CLR_BIT(PORTB,copy_PinNum);break;
    16b2:	a8 e3       	ldi	r26, 0x38	; 56
    16b4:	b0 e0       	ldi	r27, 0x00	; 0
    16b6:	e8 e3       	ldi	r30, 0x38	; 56
    16b8:	f0 e0       	ldi	r31, 0x00	; 0
    16ba:	80 81       	ld	r24, Z
    16bc:	48 2f       	mov	r20, r24
    16be:	8b 81       	ldd	r24, Y+3	; 0x03
    16c0:	28 2f       	mov	r18, r24
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	02 2e       	mov	r0, r18
    16ca:	02 c0       	rjmp	.+4      	; 0x16d0 <DIO_u8SetPinValue+0xb4>
    16cc:	88 0f       	add	r24, r24
    16ce:	99 1f       	adc	r25, r25
    16d0:	0a 94       	dec	r0
    16d2:	e2 f7       	brpl	.-8      	; 0x16cc <DIO_u8SetPinValue+0xb0>
    16d4:	80 95       	com	r24
    16d6:	84 23       	and	r24, r20
    16d8:	8c 93       	st	X, r24
    16da:	a5 c0       	rjmp	.+330    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:CLR_BIT(PORTC,copy_PinNum);break;
    16dc:	a5 e3       	ldi	r26, 0x35	; 53
    16de:	b0 e0       	ldi	r27, 0x00	; 0
    16e0:	e5 e3       	ldi	r30, 0x35	; 53
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	80 81       	ld	r24, Z
    16e6:	48 2f       	mov	r20, r24
    16e8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ea:	28 2f       	mov	r18, r24
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	81 e0       	ldi	r24, 0x01	; 1
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	02 2e       	mov	r0, r18
    16f4:	02 c0       	rjmp	.+4      	; 0x16fa <DIO_u8SetPinValue+0xde>
    16f6:	88 0f       	add	r24, r24
    16f8:	99 1f       	adc	r25, r25
    16fa:	0a 94       	dec	r0
    16fc:	e2 f7       	brpl	.-8      	; 0x16f6 <DIO_u8SetPinValue+0xda>
    16fe:	80 95       	com	r24
    1700:	84 23       	and	r24, r20
    1702:	8c 93       	st	X, r24
    1704:	90 c0       	rjmp	.+288    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:CLR_BIT(PORTD,copy_PinNum);break;
    1706:	a2 e3       	ldi	r26, 0x32	; 50
    1708:	b0 e0       	ldi	r27, 0x00	; 0
    170a:	e2 e3       	ldi	r30, 0x32	; 50
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	80 81       	ld	r24, Z
    1710:	48 2f       	mov	r20, r24
    1712:	8b 81       	ldd	r24, Y+3	; 0x03
    1714:	28 2f       	mov	r18, r24
    1716:	30 e0       	ldi	r19, 0x00	; 0
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	02 2e       	mov	r0, r18
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <DIO_u8SetPinValue+0x108>
    1720:	88 0f       	add	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	0a 94       	dec	r0
    1726:	e2 f7       	brpl	.-8      	; 0x1720 <DIO_u8SetPinValue+0x104>
    1728:	80 95       	com	r24
    172a:	84 23       	and	r24, r20
    172c:	8c 93       	st	X, r24
    172e:	7b c0       	rjmp	.+246    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
    1730:	81 e0       	ldi	r24, 0x01	; 1
    1732:	89 83       	std	Y+1, r24	; 0x01
    1734:	78 c0       	rjmp	.+240    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			}


		}
		else if(copy_Val==DIO_PIN_HIGH)
    1736:	8c 81       	ldd	r24, Y+4	; 0x04
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	09 f0       	breq	.+2      	; 0x173e <DIO_u8SetPinValue+0x122>
    173c:	72 c0       	rjmp	.+228    	; 0x1822 <DIO_u8SetPinValue+0x206>
		{
			switch (copy_Port)
    173e:	8a 81       	ldd	r24, Y+2	; 0x02
    1740:	28 2f       	mov	r18, r24
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	3e 83       	std	Y+6, r19	; 0x06
    1746:	2d 83       	std	Y+5, r18	; 0x05
    1748:	8d 81       	ldd	r24, Y+5	; 0x05
    174a:	9e 81       	ldd	r25, Y+6	; 0x06
    174c:	81 30       	cpi	r24, 0x01	; 1
    174e:	91 05       	cpc	r25, r1
    1750:	49 f1       	breq	.+82     	; 0x17a4 <DIO_u8SetPinValue+0x188>
    1752:	2d 81       	ldd	r18, Y+5	; 0x05
    1754:	3e 81       	ldd	r19, Y+6	; 0x06
    1756:	22 30       	cpi	r18, 0x02	; 2
    1758:	31 05       	cpc	r19, r1
    175a:	2c f4       	brge	.+10     	; 0x1766 <DIO_u8SetPinValue+0x14a>
    175c:	8d 81       	ldd	r24, Y+5	; 0x05
    175e:	9e 81       	ldd	r25, Y+6	; 0x06
    1760:	00 97       	sbiw	r24, 0x00	; 0
    1762:	61 f0       	breq	.+24     	; 0x177c <DIO_u8SetPinValue+0x160>
    1764:	5b c0       	rjmp	.+182    	; 0x181c <DIO_u8SetPinValue+0x200>
    1766:	2d 81       	ldd	r18, Y+5	; 0x05
    1768:	3e 81       	ldd	r19, Y+6	; 0x06
    176a:	22 30       	cpi	r18, 0x02	; 2
    176c:	31 05       	cpc	r19, r1
    176e:	71 f1       	breq	.+92     	; 0x17cc <DIO_u8SetPinValue+0x1b0>
    1770:	8d 81       	ldd	r24, Y+5	; 0x05
    1772:	9e 81       	ldd	r25, Y+6	; 0x06
    1774:	83 30       	cpi	r24, 0x03	; 3
    1776:	91 05       	cpc	r25, r1
    1778:	e9 f1       	breq	.+122    	; 0x17f4 <DIO_u8SetPinValue+0x1d8>
    177a:	50 c0       	rjmp	.+160    	; 0x181c <DIO_u8SetPinValue+0x200>
			{
			case DIO_PORTA:SET_BIT(PORTA,copy_PinNum);break;
    177c:	ab e3       	ldi	r26, 0x3B	; 59
    177e:	b0 e0       	ldi	r27, 0x00	; 0
    1780:	eb e3       	ldi	r30, 0x3B	; 59
    1782:	f0 e0       	ldi	r31, 0x00	; 0
    1784:	80 81       	ld	r24, Z
    1786:	48 2f       	mov	r20, r24
    1788:	8b 81       	ldd	r24, Y+3	; 0x03
    178a:	28 2f       	mov	r18, r24
    178c:	30 e0       	ldi	r19, 0x00	; 0
    178e:	81 e0       	ldi	r24, 0x01	; 1
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	02 2e       	mov	r0, r18
    1794:	02 c0       	rjmp	.+4      	; 0x179a <DIO_u8SetPinValue+0x17e>
    1796:	88 0f       	add	r24, r24
    1798:	99 1f       	adc	r25, r25
    179a:	0a 94       	dec	r0
    179c:	e2 f7       	brpl	.-8      	; 0x1796 <DIO_u8SetPinValue+0x17a>
    179e:	84 2b       	or	r24, r20
    17a0:	8c 93       	st	X, r24
    17a2:	41 c0       	rjmp	.+130    	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:SET_BIT(PORTB,copy_PinNum);break;
    17a4:	a8 e3       	ldi	r26, 0x38	; 56
    17a6:	b0 e0       	ldi	r27, 0x00	; 0
    17a8:	e8 e3       	ldi	r30, 0x38	; 56
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	80 81       	ld	r24, Z
    17ae:	48 2f       	mov	r20, r24
    17b0:	8b 81       	ldd	r24, Y+3	; 0x03
    17b2:	28 2f       	mov	r18, r24
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	02 2e       	mov	r0, r18
    17bc:	02 c0       	rjmp	.+4      	; 0x17c2 <DIO_u8SetPinValue+0x1a6>
    17be:	88 0f       	add	r24, r24
    17c0:	99 1f       	adc	r25, r25
    17c2:	0a 94       	dec	r0
    17c4:	e2 f7       	brpl	.-8      	; 0x17be <DIO_u8SetPinValue+0x1a2>
    17c6:	84 2b       	or	r24, r20
    17c8:	8c 93       	st	X, r24
    17ca:	2d c0       	rjmp	.+90     	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:SET_BIT(PORTC,copy_PinNum);break;
    17cc:	a5 e3       	ldi	r26, 0x35	; 53
    17ce:	b0 e0       	ldi	r27, 0x00	; 0
    17d0:	e5 e3       	ldi	r30, 0x35	; 53
    17d2:	f0 e0       	ldi	r31, 0x00	; 0
    17d4:	80 81       	ld	r24, Z
    17d6:	48 2f       	mov	r20, r24
    17d8:	8b 81       	ldd	r24, Y+3	; 0x03
    17da:	28 2f       	mov	r18, r24
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	81 e0       	ldi	r24, 0x01	; 1
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	02 2e       	mov	r0, r18
    17e4:	02 c0       	rjmp	.+4      	; 0x17ea <DIO_u8SetPinValue+0x1ce>
    17e6:	88 0f       	add	r24, r24
    17e8:	99 1f       	adc	r25, r25
    17ea:	0a 94       	dec	r0
    17ec:	e2 f7       	brpl	.-8      	; 0x17e6 <DIO_u8SetPinValue+0x1ca>
    17ee:	84 2b       	or	r24, r20
    17f0:	8c 93       	st	X, r24
    17f2:	19 c0       	rjmp	.+50     	; 0x1826 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:SET_BIT(PORTD,copy_PinNum);break;
    17f4:	a2 e3       	ldi	r26, 0x32	; 50
    17f6:	b0 e0       	ldi	r27, 0x00	; 0
    17f8:	e2 e3       	ldi	r30, 0x32	; 50
    17fa:	f0 e0       	ldi	r31, 0x00	; 0
    17fc:	80 81       	ld	r24, Z
    17fe:	48 2f       	mov	r20, r24
    1800:	8b 81       	ldd	r24, Y+3	; 0x03
    1802:	28 2f       	mov	r18, r24
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	81 e0       	ldi	r24, 0x01	; 1
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	02 2e       	mov	r0, r18
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <DIO_u8SetPinValue+0x1f6>
    180e:	88 0f       	add	r24, r24
    1810:	99 1f       	adc	r25, r25
    1812:	0a 94       	dec	r0
    1814:	e2 f7       	brpl	.-8      	; 0x180e <DIO_u8SetPinValue+0x1f2>
    1816:	84 2b       	or	r24, r20
    1818:	8c 93       	st	X, r24
    181a:	05 c0       	rjmp	.+10     	; 0x1826 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	89 83       	std	Y+1, r24	; 0x01
    1820:	02 c0       	rjmp	.+4      	; 0x1826 <DIO_u8SetPinValue+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	89 83       	std	Y+1, r24	; 0x01
		}
	}


	return Local_u8ErrorState;
    1826:	89 81       	ldd	r24, Y+1	; 0x01

}
    1828:	28 96       	adiw	r28, 0x08	; 8
    182a:	0f b6       	in	r0, 0x3f	; 63
    182c:	f8 94       	cli
    182e:	de bf       	out	0x3e, r29	; 62
    1830:	0f be       	out	0x3f, r0	; 63
    1832:	cd bf       	out	0x3d, r28	; 61
    1834:	cf 91       	pop	r28
    1836:	df 91       	pop	r29
    1838:	08 95       	ret

0000183a <DIO_SetPortValue>:

uint8 DIO_SetPortValue (DIO_Port_t copy_Port ,uint8 copy_u8PortVal )
{
    183a:	df 93       	push	r29
    183c:	cf 93       	push	r28
    183e:	00 d0       	rcall	.+0      	; 0x1840 <DIO_SetPortValue+0x6>
    1840:	00 d0       	rcall	.+0      	; 0x1842 <DIO_SetPortValue+0x8>
    1842:	0f 92       	push	r0
    1844:	cd b7       	in	r28, 0x3d	; 61
    1846:	de b7       	in	r29, 0x3e	; 62
    1848:	8a 83       	std	Y+2, r24	; 0x02
    184a:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState=OK;
    184c:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
    184e:	8a 81       	ldd	r24, Y+2	; 0x02
    1850:	28 2f       	mov	r18, r24
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	3d 83       	std	Y+5, r19	; 0x05
    1856:	2c 83       	std	Y+4, r18	; 0x04
    1858:	8c 81       	ldd	r24, Y+4	; 0x04
    185a:	9d 81       	ldd	r25, Y+5	; 0x05
    185c:	81 30       	cpi	r24, 0x01	; 1
    185e:	91 05       	cpc	r25, r1
    1860:	d1 f0       	breq	.+52     	; 0x1896 <DIO_SetPortValue+0x5c>
    1862:	2c 81       	ldd	r18, Y+4	; 0x04
    1864:	3d 81       	ldd	r19, Y+5	; 0x05
    1866:	22 30       	cpi	r18, 0x02	; 2
    1868:	31 05       	cpc	r19, r1
    186a:	2c f4       	brge	.+10     	; 0x1876 <DIO_SetPortValue+0x3c>
    186c:	8c 81       	ldd	r24, Y+4	; 0x04
    186e:	9d 81       	ldd	r25, Y+5	; 0x05
    1870:	00 97       	sbiw	r24, 0x00	; 0
    1872:	61 f0       	breq	.+24     	; 0x188c <DIO_SetPortValue+0x52>
    1874:	1f c0       	rjmp	.+62     	; 0x18b4 <DIO_SetPortValue+0x7a>
    1876:	2c 81       	ldd	r18, Y+4	; 0x04
    1878:	3d 81       	ldd	r19, Y+5	; 0x05
    187a:	22 30       	cpi	r18, 0x02	; 2
    187c:	31 05       	cpc	r19, r1
    187e:	81 f0       	breq	.+32     	; 0x18a0 <DIO_SetPortValue+0x66>
    1880:	8c 81       	ldd	r24, Y+4	; 0x04
    1882:	9d 81       	ldd	r25, Y+5	; 0x05
    1884:	83 30       	cpi	r24, 0x03	; 3
    1886:	91 05       	cpc	r25, r1
    1888:	81 f0       	breq	.+32     	; 0x18aa <DIO_SetPortValue+0x70>
    188a:	14 c0       	rjmp	.+40     	; 0x18b4 <DIO_SetPortValue+0x7a>
	{
	case DIO_PORTA:PORTA=copy_u8PortVal;break;
    188c:	eb e3       	ldi	r30, 0x3B	; 59
    188e:	f0 e0       	ldi	r31, 0x00	; 0
    1890:	8b 81       	ldd	r24, Y+3	; 0x03
    1892:	80 83       	st	Z, r24
    1894:	11 c0       	rjmp	.+34     	; 0x18b8 <DIO_SetPortValue+0x7e>
	case DIO_PORTB:PORTB=copy_u8PortVal;break;
    1896:	e8 e3       	ldi	r30, 0x38	; 56
    1898:	f0 e0       	ldi	r31, 0x00	; 0
    189a:	8b 81       	ldd	r24, Y+3	; 0x03
    189c:	80 83       	st	Z, r24
    189e:	0c c0       	rjmp	.+24     	; 0x18b8 <DIO_SetPortValue+0x7e>
	case DIO_PORTC:PORTC=copy_u8PortVal;break;
    18a0:	e5 e3       	ldi	r30, 0x35	; 53
    18a2:	f0 e0       	ldi	r31, 0x00	; 0
    18a4:	8b 81       	ldd	r24, Y+3	; 0x03
    18a6:	80 83       	st	Z, r24
    18a8:	07 c0       	rjmp	.+14     	; 0x18b8 <DIO_SetPortValue+0x7e>
	case DIO_PORTD:PORTD=copy_u8PortVal;break;
    18aa:	e2 e3       	ldi	r30, 0x32	; 50
    18ac:	f0 e0       	ldi	r31, 0x00	; 0
    18ae:	8b 81       	ldd	r24, Y+3	; 0x03
    18b0:	80 83       	st	Z, r24
    18b2:	02 c0       	rjmp	.+4      	; 0x18b8 <DIO_SetPortValue+0x7e>
	default :Local_u8ErrorState=NOK;break;
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	89 83       	std	Y+1, r24	; 0x01

	}

	return Local_u8ErrorState;
    18b8:	89 81       	ldd	r24, Y+1	; 0x01

}	
    18ba:	0f 90       	pop	r0
    18bc:	0f 90       	pop	r0
    18be:	0f 90       	pop	r0
    18c0:	0f 90       	pop	r0
    18c2:	0f 90       	pop	r0
    18c4:	cf 91       	pop	r28
    18c6:	df 91       	pop	r29
    18c8:	08 95       	ret

000018ca <DIO_u8GetPinValue>:
uint8  DIO_u8GetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum, DIO_PinVal_t*  copy_pVal)
{
    18ca:	df 93       	push	r29
    18cc:	cf 93       	push	r28
    18ce:	cd b7       	in	r28, 0x3d	; 61
    18d0:	de b7       	in	r29, 0x3e	; 62
    18d2:	27 97       	sbiw	r28, 0x07	; 7
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	f8 94       	cli
    18d8:	de bf       	out	0x3e, r29	; 62
    18da:	0f be       	out	0x3f, r0	; 63
    18dc:	cd bf       	out	0x3d, r28	; 61
    18de:	8a 83       	std	Y+2, r24	; 0x02
    18e0:	6b 83       	std	Y+3, r22	; 0x03
    18e2:	5d 83       	std	Y+5, r21	; 0x05
    18e4:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
    18e6:	19 82       	std	Y+1, r1	; 0x01
	if(copy_pVal!=NULL)
    18e8:	8c 81       	ldd	r24, Y+4	; 0x04
    18ea:	9d 81       	ldd	r25, Y+5	; 0x05
    18ec:	00 97       	sbiw	r24, 0x00	; 0
    18ee:	09 f4       	brne	.+2      	; 0x18f2 <DIO_u8GetPinValue+0x28>
    18f0:	7b c0       	rjmp	.+246    	; 0x19e8 <DIO_u8GetPinValue+0x11e>
	{
		if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    18f2:	8b 81       	ldd	r24, Y+3	; 0x03
    18f4:	88 30       	cpi	r24, 0x08	; 8
    18f6:	08 f0       	brcs	.+2      	; 0x18fa <DIO_u8GetPinValue+0x30>
    18f8:	74 c0       	rjmp	.+232    	; 0x19e2 <DIO_u8GetPinValue+0x118>
		{
			switch(copy_Port)
    18fa:	8a 81       	ldd	r24, Y+2	; 0x02
    18fc:	28 2f       	mov	r18, r24
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	3f 83       	std	Y+7, r19	; 0x07
    1902:	2e 83       	std	Y+6, r18	; 0x06
    1904:	4e 81       	ldd	r20, Y+6	; 0x06
    1906:	5f 81       	ldd	r21, Y+7	; 0x07
    1908:	41 30       	cpi	r20, 0x01	; 1
    190a:	51 05       	cpc	r21, r1
    190c:	59 f1       	breq	.+86     	; 0x1964 <DIO_u8GetPinValue+0x9a>
    190e:	8e 81       	ldd	r24, Y+6	; 0x06
    1910:	9f 81       	ldd	r25, Y+7	; 0x07
    1912:	82 30       	cpi	r24, 0x02	; 2
    1914:	91 05       	cpc	r25, r1
    1916:	34 f4       	brge	.+12     	; 0x1924 <DIO_u8GetPinValue+0x5a>
    1918:	2e 81       	ldd	r18, Y+6	; 0x06
    191a:	3f 81       	ldd	r19, Y+7	; 0x07
    191c:	21 15       	cp	r18, r1
    191e:	31 05       	cpc	r19, r1
    1920:	69 f0       	breq	.+26     	; 0x193c <DIO_u8GetPinValue+0x72>
    1922:	5c c0       	rjmp	.+184    	; 0x19dc <DIO_u8GetPinValue+0x112>
    1924:	4e 81       	ldd	r20, Y+6	; 0x06
    1926:	5f 81       	ldd	r21, Y+7	; 0x07
    1928:	42 30       	cpi	r20, 0x02	; 2
    192a:	51 05       	cpc	r21, r1
    192c:	79 f1       	breq	.+94     	; 0x198c <DIO_u8GetPinValue+0xc2>
    192e:	8e 81       	ldd	r24, Y+6	; 0x06
    1930:	9f 81       	ldd	r25, Y+7	; 0x07
    1932:	83 30       	cpi	r24, 0x03	; 3
    1934:	91 05       	cpc	r25, r1
    1936:	09 f4       	brne	.+2      	; 0x193a <DIO_u8GetPinValue+0x70>
    1938:	3d c0       	rjmp	.+122    	; 0x19b4 <DIO_u8GetPinValue+0xea>
    193a:	50 c0       	rjmp	.+160    	; 0x19dc <DIO_u8GetPinValue+0x112>
			{
			case DIO_PORTA:*copy_pVal=GET_BIT(PINA,copy_PinNum);break;
    193c:	e9 e3       	ldi	r30, 0x39	; 57
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	80 81       	ld	r24, Z
    1942:	28 2f       	mov	r18, r24
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	8b 81       	ldd	r24, Y+3	; 0x03
    1948:	88 2f       	mov	r24, r24
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	a9 01       	movw	r20, r18
    194e:	02 c0       	rjmp	.+4      	; 0x1954 <DIO_u8GetPinValue+0x8a>
    1950:	55 95       	asr	r21
    1952:	47 95       	ror	r20
    1954:	8a 95       	dec	r24
    1956:	e2 f7       	brpl	.-8      	; 0x1950 <DIO_u8GetPinValue+0x86>
    1958:	ca 01       	movw	r24, r20
    195a:	81 70       	andi	r24, 0x01	; 1
    195c:	ec 81       	ldd	r30, Y+4	; 0x04
    195e:	fd 81       	ldd	r31, Y+5	; 0x05
    1960:	80 83       	st	Z, r24
    1962:	44 c0       	rjmp	.+136    	; 0x19ec <DIO_u8GetPinValue+0x122>
			case DIO_PORTB:*copy_pVal=GET_BIT(PINB,copy_PinNum);break;
    1964:	e6 e3       	ldi	r30, 0x36	; 54
    1966:	f0 e0       	ldi	r31, 0x00	; 0
    1968:	80 81       	ld	r24, Z
    196a:	28 2f       	mov	r18, r24
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	8b 81       	ldd	r24, Y+3	; 0x03
    1970:	88 2f       	mov	r24, r24
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	a9 01       	movw	r20, r18
    1976:	02 c0       	rjmp	.+4      	; 0x197c <DIO_u8GetPinValue+0xb2>
    1978:	55 95       	asr	r21
    197a:	47 95       	ror	r20
    197c:	8a 95       	dec	r24
    197e:	e2 f7       	brpl	.-8      	; 0x1978 <DIO_u8GetPinValue+0xae>
    1980:	ca 01       	movw	r24, r20
    1982:	81 70       	andi	r24, 0x01	; 1
    1984:	ec 81       	ldd	r30, Y+4	; 0x04
    1986:	fd 81       	ldd	r31, Y+5	; 0x05
    1988:	80 83       	st	Z, r24
    198a:	30 c0       	rjmp	.+96     	; 0x19ec <DIO_u8GetPinValue+0x122>
			case DIO_PORTC:*copy_pVal=GET_BIT(PINC,copy_PinNum);break;
    198c:	e3 e3       	ldi	r30, 0x33	; 51
    198e:	f0 e0       	ldi	r31, 0x00	; 0
    1990:	80 81       	ld	r24, Z
    1992:	28 2f       	mov	r18, r24
    1994:	30 e0       	ldi	r19, 0x00	; 0
    1996:	8b 81       	ldd	r24, Y+3	; 0x03
    1998:	88 2f       	mov	r24, r24
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	a9 01       	movw	r20, r18
    199e:	02 c0       	rjmp	.+4      	; 0x19a4 <DIO_u8GetPinValue+0xda>
    19a0:	55 95       	asr	r21
    19a2:	47 95       	ror	r20
    19a4:	8a 95       	dec	r24
    19a6:	e2 f7       	brpl	.-8      	; 0x19a0 <DIO_u8GetPinValue+0xd6>
    19a8:	ca 01       	movw	r24, r20
    19aa:	81 70       	andi	r24, 0x01	; 1
    19ac:	ec 81       	ldd	r30, Y+4	; 0x04
    19ae:	fd 81       	ldd	r31, Y+5	; 0x05
    19b0:	80 83       	st	Z, r24
    19b2:	1c c0       	rjmp	.+56     	; 0x19ec <DIO_u8GetPinValue+0x122>
			case DIO_PORTD:*copy_pVal=GET_BIT(PIND,copy_PinNum);break;
    19b4:	e0 e3       	ldi	r30, 0x30	; 48
    19b6:	f0 e0       	ldi	r31, 0x00	; 0
    19b8:	80 81       	ld	r24, Z
    19ba:	28 2f       	mov	r18, r24
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	8b 81       	ldd	r24, Y+3	; 0x03
    19c0:	88 2f       	mov	r24, r24
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	a9 01       	movw	r20, r18
    19c6:	02 c0       	rjmp	.+4      	; 0x19cc <DIO_u8GetPinValue+0x102>
    19c8:	55 95       	asr	r21
    19ca:	47 95       	ror	r20
    19cc:	8a 95       	dec	r24
    19ce:	e2 f7       	brpl	.-8      	; 0x19c8 <DIO_u8GetPinValue+0xfe>
    19d0:	ca 01       	movw	r24, r20
    19d2:	81 70       	andi	r24, 0x01	; 1
    19d4:	ec 81       	ldd	r30, Y+4	; 0x04
    19d6:	fd 81       	ldd	r31, Y+5	; 0x05
    19d8:	80 83       	st	Z, r24
    19da:	08 c0       	rjmp	.+16     	; 0x19ec <DIO_u8GetPinValue+0x122>
			default :Local_u8ErrorState=NOK;break;
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	89 83       	std	Y+1, r24	; 0x01
    19e0:	05 c0       	rjmp	.+10     	; 0x19ec <DIO_u8GetPinValue+0x122>
			}

		}
		else
		{
			Local_u8ErrorState=NOK;
    19e2:	81 e0       	ldi	r24, 0x01	; 1
    19e4:	89 83       	std	Y+1, r24	; 0x01
    19e6:	02 c0       	rjmp	.+4      	; 0x19ec <DIO_u8GetPinValue+0x122>
		}
	}
	else
	{
		Local_u8ErrorState=NULL_PTR;
    19e8:	82 e0       	ldi	r24, 0x02	; 2
    19ea:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    19ec:	89 81       	ldd	r24, Y+1	; 0x01

}	
    19ee:	27 96       	adiw	r28, 0x07	; 7
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	f8 94       	cli
    19f4:	de bf       	out	0x3e, r29	; 62
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	cd bf       	out	0x3d, r28	; 61
    19fa:	cf 91       	pop	r28
    19fc:	df 91       	pop	r29
    19fe:	08 95       	ret

00001a00 <PORT_voidInit>:
#include "PORT_prv.h"
#include "PORT_reg.h"
#include "PORT_interface.h"

void PORT_voidInit (void)
{
    1a00:	df 93       	push	r29
    1a02:	cf 93       	push	r28
    1a04:	cd b7       	in	r28, 0x3d	; 61
    1a06:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
    1a08:	ea e3       	ldi	r30, 0x3A	; 58
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	8e e7       	ldi	r24, 0x7E	; 126
    1a0e:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    1a10:	e7 e3       	ldi	r30, 0x37	; 55
    1a12:	f0 e0       	ldi	r31, 0x00	; 0
    1a14:	10 82       	st	Z, r1
	DDRC=PORTC_DIR;
    1a16:	e4 e3       	ldi	r30, 0x34	; 52
    1a18:	f0 e0       	ldi	r31, 0x00	; 0
    1a1a:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
    1a1c:	e1 e3       	ldi	r30, 0x31	; 49
    1a1e:	f0 e0       	ldi	r31, 0x00	; 0
    1a20:	10 82       	st	Z, r1
	
	
	PORTA=PORTA_INITVAL;
    1a22:	eb e3       	ldi	r30, 0x3B	; 59
    1a24:	f0 e0       	ldi	r31, 0x00	; 0
    1a26:	10 82       	st	Z, r1
	PORTB=PORTB_INITVAL;
    1a28:	e8 e3       	ldi	r30, 0x38	; 56
    1a2a:	f0 e0       	ldi	r31, 0x00	; 0
    1a2c:	87 e0       	ldi	r24, 0x07	; 7
    1a2e:	80 83       	st	Z, r24
    PORTC=PORTC_INITVAL;
    1a30:	e5 e3       	ldi	r30, 0x35	; 53
    1a32:	f0 e0       	ldi	r31, 0x00	; 0
    1a34:	10 82       	st	Z, r1
    PORTD=PORTD_INITVAL;
    1a36:	e2 e3       	ldi	r30, 0x32	; 50
    1a38:	f0 e0       	ldi	r31, 0x00	; 0
    1a3a:	10 82       	st	Z, r1
	
	
	
    1a3c:	cf 91       	pop	r28
    1a3e:	df 91       	pop	r29
    1a40:	08 95       	ret

00001a42 <main>:
 sint8 Local_s8Iterator1;
char ch_Operation[4]={'+','-','*','/'};


void main(void)
{
    1a42:	0f 93       	push	r16
    1a44:	1f 93       	push	r17
    1a46:	df 93       	push	r29
    1a48:	cf 93       	push	r28
    1a4a:	cd b7       	in	r28, 0x3d	; 61
    1a4c:	de b7       	in	r29, 0x3e	; 62
    1a4e:	c6 51       	subi	r28, 0x16	; 22
    1a50:	d1 40       	sbci	r29, 0x01	; 1
    1a52:	0f b6       	in	r0, 0x3f	; 63
    1a54:	f8 94       	cli
    1a56:	de bf       	out	0x3e, r29	; 62
    1a58:	0f be       	out	0x3f, r0	; 63
    1a5a:	cd bf       	out	0x3d, r28	; 61
	uint8  Local_u8MyPattern[8] ={0b100,0b1110,0b11111,0b100,0b100,0b100,0b100,0};
    1a5c:	ce 01       	movw	r24, r28
    1a5e:	8f 5f       	subi	r24, 0xFF	; 255
    1a60:	9e 4f       	sbci	r25, 0xFE	; 254
    1a62:	ce 5e       	subi	r28, 0xEE	; 238
    1a64:	de 4f       	sbci	r29, 0xFE	; 254
    1a66:	99 83       	std	Y+1, r25	; 0x01
    1a68:	88 83       	st	Y, r24
    1a6a:	c2 51       	subi	r28, 0x12	; 18
    1a6c:	d1 40       	sbci	r29, 0x01	; 1
    1a6e:	2e e9       	ldi	r18, 0x9E	; 158
    1a70:	30 e0       	ldi	r19, 0x00	; 0
    1a72:	cc 5e       	subi	r28, 0xEC	; 236
    1a74:	de 4f       	sbci	r29, 0xFE	; 254
    1a76:	39 83       	std	Y+1, r19	; 0x01
    1a78:	28 83       	st	Y, r18
    1a7a:	c4 51       	subi	r28, 0x14	; 20
    1a7c:	d1 40       	sbci	r29, 0x01	; 1
    1a7e:	38 e0       	ldi	r19, 0x08	; 8
    1a80:	ca 5e       	subi	r28, 0xEA	; 234
    1a82:	de 4f       	sbci	r29, 0xFE	; 254
    1a84:	38 83       	st	Y, r19
    1a86:	c6 51       	subi	r28, 0x16	; 22
    1a88:	d1 40       	sbci	r29, 0x01	; 1
    1a8a:	cc 5e       	subi	r28, 0xEC	; 236
    1a8c:	de 4f       	sbci	r29, 0xFE	; 254
    1a8e:	e8 81       	ld	r30, Y
    1a90:	f9 81       	ldd	r31, Y+1	; 0x01
    1a92:	c4 51       	subi	r28, 0x14	; 20
    1a94:	d1 40       	sbci	r29, 0x01	; 1
    1a96:	00 80       	ld	r0, Z
    1a98:	cc 5e       	subi	r28, 0xEC	; 236
    1a9a:	de 4f       	sbci	r29, 0xFE	; 254
    1a9c:	28 81       	ld	r18, Y
    1a9e:	39 81       	ldd	r19, Y+1	; 0x01
    1aa0:	c4 51       	subi	r28, 0x14	; 20
    1aa2:	d1 40       	sbci	r29, 0x01	; 1
    1aa4:	2f 5f       	subi	r18, 0xFF	; 255
    1aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa8:	cc 5e       	subi	r28, 0xEC	; 236
    1aaa:	de 4f       	sbci	r29, 0xFE	; 254
    1aac:	39 83       	std	Y+1, r19	; 0x01
    1aae:	28 83       	st	Y, r18
    1ab0:	c4 51       	subi	r28, 0x14	; 20
    1ab2:	d1 40       	sbci	r29, 0x01	; 1
    1ab4:	ce 5e       	subi	r28, 0xEE	; 238
    1ab6:	de 4f       	sbci	r29, 0xFE	; 254
    1ab8:	e8 81       	ld	r30, Y
    1aba:	f9 81       	ldd	r31, Y+1	; 0x01
    1abc:	c2 51       	subi	r28, 0x12	; 18
    1abe:	d1 40       	sbci	r29, 0x01	; 1
    1ac0:	00 82       	st	Z, r0
    1ac2:	ce 5e       	subi	r28, 0xEE	; 238
    1ac4:	de 4f       	sbci	r29, 0xFE	; 254
    1ac6:	28 81       	ld	r18, Y
    1ac8:	39 81       	ldd	r19, Y+1	; 0x01
    1aca:	c2 51       	subi	r28, 0x12	; 18
    1acc:	d1 40       	sbci	r29, 0x01	; 1
    1ace:	2f 5f       	subi	r18, 0xFF	; 255
    1ad0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad2:	ce 5e       	subi	r28, 0xEE	; 238
    1ad4:	de 4f       	sbci	r29, 0xFE	; 254
    1ad6:	39 83       	std	Y+1, r19	; 0x01
    1ad8:	28 83       	st	Y, r18
    1ada:	c2 51       	subi	r28, 0x12	; 18
    1adc:	d1 40       	sbci	r29, 0x01	; 1
    1ade:	ca 5e       	subi	r28, 0xEA	; 234
    1ae0:	de 4f       	sbci	r29, 0xFE	; 254
    1ae2:	38 81       	ld	r19, Y
    1ae4:	c6 51       	subi	r28, 0x16	; 22
    1ae6:	d1 40       	sbci	r29, 0x01	; 1
    1ae8:	31 50       	subi	r19, 0x01	; 1
    1aea:	ca 5e       	subi	r28, 0xEA	; 234
    1aec:	de 4f       	sbci	r29, 0xFE	; 254
    1aee:	38 83       	st	Y, r19
    1af0:	c6 51       	subi	r28, 0x16	; 22
    1af2:	d1 40       	sbci	r29, 0x01	; 1
    1af4:	ca 5e       	subi	r28, 0xEA	; 234
    1af6:	de 4f       	sbci	r29, 0xFE	; 254
    1af8:	88 81       	ld	r24, Y
    1afa:	c6 51       	subi	r28, 0x16	; 22
    1afc:	d1 40       	sbci	r29, 0x01	; 1
    1afe:	88 23       	and	r24, r24
    1b00:	21 f6       	brne	.-120    	; 0x1a8a <main+0x48>
	uint8 Local_u8Xpos=0;
    1b02:	fe 01       	movw	r30, r28
    1b04:	e0 50       	subi	r30, 0x00	; 0
    1b06:	ff 4f       	sbci	r31, 0xFF	; 255
    1b08:	10 82       	st	Z, r1
	uint8 Local_u8Ypos=1;
    1b0a:	fe 01       	movw	r30, r28
    1b0c:	e1 50       	subi	r30, 0x01	; 1
    1b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	80 83       	st	Z, r24
	uint8 Local_DDRAMXPos=0;
    1b14:	fe 01       	movw	r30, r28
    1b16:	e2 50       	subi	r30, 0x02	; 2
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	10 82       	st	Z, r1
	uint8 Local_u8DDRAMYPos=0;
    1b1c:	fe 01       	movw	r30, r28
    1b1e:	e3 50       	subi	r30, 0x03	; 3
    1b20:	ff 4f       	sbci	r31, 0xFF	; 255
    1b22:	10 82       	st	Z, r1
	uint8 Local_u8PinDownRead;
	uint8 Local_u8PinEnterRead;

	/*set CLCD pins as output */

	PORT_voidInit();
    1b24:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <PORT_voidInit>
	CLCD_voidInit ();
    1b28:	0e 94 98 06 	call	0xd30	; 0xd30 <CLCD_voidInit>



	while(1)
	{
		CLCD_voidSendNumber(Local_s32Num1);
    1b2c:	80 91 92 00 	lds	r24, 0x0092
    1b30:	90 91 93 00 	lds	r25, 0x0093
    1b34:	a0 91 94 00 	lds	r26, 0x0094
    1b38:	b0 91 95 00 	lds	r27, 0x0095
    1b3c:	bc 01       	movw	r22, r24
    1b3e:	cd 01       	movw	r24, r26
    1b40:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
		CLCD_voidSendData ('+');
    1b44:	8b e2       	ldi	r24, 0x2B	; 43
    1b46:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
		CLCD_voidSendNumber(Local_s32Num2);
    1b4a:	80 91 96 00 	lds	r24, 0x0096
    1b4e:	90 91 97 00 	lds	r25, 0x0097
    1b52:	a0 91 98 00 	lds	r26, 0x0098
    1b56:	b0 91 99 00 	lds	r27, 0x0099
    1b5a:	bc 01       	movw	r22, r24
    1b5c:	cd 01       	movw	r24, r26
    1b5e:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>

		CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    1b62:	9e 01       	movw	r18, r28
    1b64:	2f 5f       	subi	r18, 0xFF	; 255
    1b66:	3e 4f       	sbci	r19, 0xFE	; 254
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e0 50       	subi	r30, 0x00	; 0
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	de 01       	movw	r26, r28
    1b70:	a1 50       	subi	r26, 0x01	; 1
    1b72:	bf 4f       	sbci	r27, 0xFF	; 255
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	b9 01       	movw	r22, r18
    1b78:	40 81       	ld	r20, Z
    1b7a:	2c 91       	ld	r18, X
    1b7c:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_u8WriteSpecialCharacter>
    1b80:	0c 94 92 1c 	jmp	0x3924	; 0x3924 <main+0x1ee2>



		while(Local_u8Xpos<=4)
		{
			DIO_u8GetPinValue(CLCD_u8Cal_PORT, CLCD_u8UP_PIN ,&Local_u8PinUPRead);
    1b84:	9e 01       	movw	r18, r28
    1b86:	27 5f       	subi	r18, 0xF7	; 247
    1b88:	3e 4f       	sbci	r19, 0xFE	; 254
    1b8a:	81 e0       	ldi	r24, 0x01	; 1
    1b8c:	60 e0       	ldi	r22, 0x00	; 0
    1b8e:	a9 01       	movw	r20, r18
    1b90:	0e 94 65 0c 	call	0x18ca	; 0x18ca <DIO_u8GetPinValue>
			DIO_u8GetPinValue(CLCD_u8Cal_PORT, CLCD_u8DOWN_PIN ,&Local_u8PinDownRead);
    1b94:	9e 01       	movw	r18, r28
    1b96:	26 5f       	subi	r18, 0xF6	; 246
    1b98:	3e 4f       	sbci	r19, 0xFE	; 254
    1b9a:	81 e0       	ldi	r24, 0x01	; 1
    1b9c:	61 e0       	ldi	r22, 0x01	; 1
    1b9e:	a9 01       	movw	r20, r18
    1ba0:	0e 94 65 0c 	call	0x18ca	; 0x18ca <DIO_u8GetPinValue>
			DIO_u8GetPinValue(CLCD_u8Cal_PORT, CLCD_u8ENTER_PIN ,&Local_u8PinEnterRead);
    1ba4:	9e 01       	movw	r18, r28
    1ba6:	25 5f       	subi	r18, 0xF5	; 245
    1ba8:	3e 4f       	sbci	r19, 0xFE	; 254
    1baa:	81 e0       	ldi	r24, 0x01	; 1
    1bac:	62 e0       	ldi	r22, 0x02	; 2
    1bae:	a9 01       	movw	r20, r18
    1bb0:	0e 94 65 0c 	call	0x18ca	; 0x18ca <DIO_u8GetPinValue>


			if(Local_u8PinUPRead ==DIO_PIN_LOW)
    1bb4:	fe 01       	movw	r30, r28
    1bb6:	e7 5f       	subi	r30, 0xF7	; 247
    1bb8:	fe 4f       	sbci	r31, 0xFE	; 254
    1bba:	80 81       	ld	r24, Z
    1bbc:	88 23       	and	r24, r24
    1bbe:	09 f0       	breq	.+2      	; 0x1bc2 <main+0x180>
    1bc0:	2e c5       	rjmp	.+2652   	; 0x261e <main+0xbdc>
			{
				switch (Local_u8Xpos)
    1bc2:	fe 01       	movw	r30, r28
    1bc4:	e0 50       	subi	r30, 0x00	; 0
    1bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc8:	80 81       	ld	r24, Z
    1bca:	e8 2f       	mov	r30, r24
    1bcc:	f0 e0       	ldi	r31, 0x00	; 0
    1bce:	c0 5f       	subi	r28, 0xF0	; 240
    1bd0:	de 4f       	sbci	r29, 0xFE	; 254
    1bd2:	f9 83       	std	Y+1, r31	; 0x01
    1bd4:	e8 83       	st	Y, r30
    1bd6:	c0 51       	subi	r28, 0x10	; 16
    1bd8:	d1 40       	sbci	r29, 0x01	; 1
    1bda:	c0 5f       	subi	r28, 0xF0	; 240
    1bdc:	de 4f       	sbci	r29, 0xFE	; 254
    1bde:	28 81       	ld	r18, Y
    1be0:	39 81       	ldd	r19, Y+1	; 0x01
    1be2:	c0 51       	subi	r28, 0x10	; 16
    1be4:	d1 40       	sbci	r29, 0x01	; 1
    1be6:	21 30       	cpi	r18, 0x01	; 1
    1be8:	31 05       	cpc	r19, r1
    1bea:	09 f4       	brne	.+2      	; 0x1bee <main+0x1ac>
    1bec:	c9 c1       	rjmp	.+914    	; 0x1f80 <main+0x53e>
    1bee:	c0 5f       	subi	r28, 0xF0	; 240
    1bf0:	de 4f       	sbci	r29, 0xFE	; 254
    1bf2:	88 81       	ld	r24, Y
    1bf4:	99 81       	ldd	r25, Y+1	; 0x01
    1bf6:	c0 51       	subi	r28, 0x10	; 16
    1bf8:	d1 40       	sbci	r29, 0x01	; 1
    1bfa:	82 30       	cpi	r24, 0x02	; 2
    1bfc:	91 05       	cpc	r25, r1
    1bfe:	09 f4       	brne	.+2      	; 0x1c02 <main+0x1c0>
    1c00:	94 c2       	rjmp	.+1320   	; 0x212a <main+0x6e8>
    1c02:	c0 5f       	subi	r28, 0xF0	; 240
    1c04:	de 4f       	sbci	r29, 0xFE	; 254
    1c06:	e8 81       	ld	r30, Y
    1c08:	f9 81       	ldd	r31, Y+1	; 0x01
    1c0a:	c0 51       	subi	r28, 0x10	; 16
    1c0c:	d1 40       	sbci	r29, 0x01	; 1
    1c0e:	30 97       	sbiw	r30, 0x00	; 0
    1c10:	09 f0       	breq	.+2      	; 0x1c14 <main+0x1d2>
    1c12:	05 c5       	rjmp	.+2570   	; 0x261e <main+0xbdc>
				{
				case 0:CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    1c14:	fe 01       	movw	r30, r28
    1c16:	e0 50       	subi	r30, 0x00	; 0
    1c18:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1a:	de 01       	movw	r26, r28
    1c1c:	a3 50       	subi	r26, 0x03	; 3
    1c1e:	bf 4f       	sbci	r27, 0xFF	; 255
    1c20:	80 81       	ld	r24, Z
    1c22:	6c 91       	ld	r22, X
    1c24:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>

				Local_s32Num1++;
    1c28:	80 91 92 00 	lds	r24, 0x0092
    1c2c:	90 91 93 00 	lds	r25, 0x0093
    1c30:	a0 91 94 00 	lds	r26, 0x0094
    1c34:	b0 91 95 00 	lds	r27, 0x0095
    1c38:	01 96       	adiw	r24, 0x01	; 1
    1c3a:	a1 1d       	adc	r26, r1
    1c3c:	b1 1d       	adc	r27, r1
    1c3e:	80 93 92 00 	sts	0x0092, r24
    1c42:	90 93 93 00 	sts	0x0093, r25
    1c46:	a0 93 94 00 	sts	0x0094, r26
    1c4a:	b0 93 95 00 	sts	0x0095, r27
				if(Local_s32Num1==10)
    1c4e:	80 91 92 00 	lds	r24, 0x0092
    1c52:	90 91 93 00 	lds	r25, 0x0093
    1c56:	a0 91 94 00 	lds	r26, 0x0094
    1c5a:	b0 91 95 00 	lds	r27, 0x0095
    1c5e:	8a 30       	cpi	r24, 0x0A	; 10
    1c60:	91 05       	cpc	r25, r1
    1c62:	a1 05       	cpc	r26, r1
    1c64:	b1 05       	cpc	r27, r1
    1c66:	41 f4       	brne	.+16     	; 0x1c78 <main+0x236>
				{
					Local_s32Num1=0;
    1c68:	10 92 92 00 	sts	0x0092, r1
    1c6c:	10 92 93 00 	sts	0x0093, r1
    1c70:	10 92 94 00 	sts	0x0094, r1
    1c74:	10 92 95 00 	sts	0x0095, r1
				}
				CLCD_voidSendNumber(Local_s32Num1);
    1c78:	80 91 92 00 	lds	r24, 0x0092
    1c7c:	90 91 93 00 	lds	r25, 0x0093
    1c80:	a0 91 94 00 	lds	r26, 0x0094
    1c84:	b0 91 95 00 	lds	r27, 0x0095
    1c88:	bc 01       	movw	r22, r24
    1c8a:	cd 01       	movw	r24, r26
    1c8c:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
				CLCD_voidGoToXY (8u,1u);
    1c90:	88 e0       	ldi	r24, 0x08	; 8
    1c92:	61 e0       	ldi	r22, 0x01	; 1
    1c94:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("UP");
    1c98:	87 e6       	ldi	r24, 0x67	; 103
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    1ca0:	fe 01       	movw	r30, r28
    1ca2:	e7 50       	subi	r30, 0x07	; 7
    1ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca6:	80 e0       	ldi	r24, 0x00	; 0
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	aa e7       	ldi	r26, 0x7A	; 122
    1cac:	b3 e4       	ldi	r27, 0x43	; 67
    1cae:	80 83       	st	Z, r24
    1cb0:	91 83       	std	Z+1, r25	; 0x01
    1cb2:	a2 83       	std	Z+2, r26	; 0x02
    1cb4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cb6:	8e 01       	movw	r16, r28
    1cb8:	0b 50       	subi	r16, 0x0B	; 11
    1cba:	1f 4f       	sbci	r17, 0xFF	; 255
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	e7 50       	subi	r30, 0x07	; 7
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	60 81       	ld	r22, Z
    1cc4:	71 81       	ldd	r23, Z+1	; 0x01
    1cc6:	82 81       	ldd	r24, Z+2	; 0x02
    1cc8:	93 81       	ldd	r25, Z+3	; 0x03
    1cca:	20 e0       	ldi	r18, 0x00	; 0
    1ccc:	30 e0       	ldi	r19, 0x00	; 0
    1cce:	4a ef       	ldi	r20, 0xFA	; 250
    1cd0:	54 e4       	ldi	r21, 0x44	; 68
    1cd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cd6:	dc 01       	movw	r26, r24
    1cd8:	cb 01       	movw	r24, r22
    1cda:	f8 01       	movw	r30, r16
    1cdc:	80 83       	st	Z, r24
    1cde:	91 83       	std	Z+1, r25	; 0x01
    1ce0:	a2 83       	std	Z+2, r26	; 0x02
    1ce2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ce4:	fe 01       	movw	r30, r28
    1ce6:	eb 50       	subi	r30, 0x0B	; 11
    1ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cea:	60 81       	ld	r22, Z
    1cec:	71 81       	ldd	r23, Z+1	; 0x01
    1cee:	82 81       	ldd	r24, Z+2	; 0x02
    1cf0:	93 81       	ldd	r25, Z+3	; 0x03
    1cf2:	20 e0       	ldi	r18, 0x00	; 0
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	40 e8       	ldi	r20, 0x80	; 128
    1cf8:	5f e3       	ldi	r21, 0x3F	; 63
    1cfa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1cfe:	88 23       	and	r24, r24
    1d00:	44 f4       	brge	.+16     	; 0x1d12 <main+0x2d0>
		__ticks = 1;
    1d02:	fe 01       	movw	r30, r28
    1d04:	ed 50       	subi	r30, 0x0D	; 13
    1d06:	ff 4f       	sbci	r31, 0xFF	; 255
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	91 83       	std	Z+1, r25	; 0x01
    1d0e:	80 83       	st	Z, r24
    1d10:	64 c0       	rjmp	.+200    	; 0x1dda <main+0x398>
	else if (__tmp > 65535)
    1d12:	fe 01       	movw	r30, r28
    1d14:	eb 50       	subi	r30, 0x0B	; 11
    1d16:	ff 4f       	sbci	r31, 0xFF	; 255
    1d18:	60 81       	ld	r22, Z
    1d1a:	71 81       	ldd	r23, Z+1	; 0x01
    1d1c:	82 81       	ldd	r24, Z+2	; 0x02
    1d1e:	93 81       	ldd	r25, Z+3	; 0x03
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	3f ef       	ldi	r19, 0xFF	; 255
    1d24:	4f e7       	ldi	r20, 0x7F	; 127
    1d26:	57 e4       	ldi	r21, 0x47	; 71
    1d28:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d2c:	18 16       	cp	r1, r24
    1d2e:	0c f0       	brlt	.+2      	; 0x1d32 <main+0x2f0>
    1d30:	43 c0       	rjmp	.+134    	; 0x1db8 <main+0x376>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d32:	fe 01       	movw	r30, r28
    1d34:	e7 50       	subi	r30, 0x07	; 7
    1d36:	ff 4f       	sbci	r31, 0xFF	; 255
    1d38:	60 81       	ld	r22, Z
    1d3a:	71 81       	ldd	r23, Z+1	; 0x01
    1d3c:	82 81       	ldd	r24, Z+2	; 0x02
    1d3e:	93 81       	ldd	r25, Z+3	; 0x03
    1d40:	20 e0       	ldi	r18, 0x00	; 0
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	40 e2       	ldi	r20, 0x20	; 32
    1d46:	51 e4       	ldi	r21, 0x41	; 65
    1d48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d4c:	dc 01       	movw	r26, r24
    1d4e:	cb 01       	movw	r24, r22
    1d50:	8e 01       	movw	r16, r28
    1d52:	0d 50       	subi	r16, 0x0D	; 13
    1d54:	1f 4f       	sbci	r17, 0xFF	; 255
    1d56:	bc 01       	movw	r22, r24
    1d58:	cd 01       	movw	r24, r26
    1d5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d5e:	dc 01       	movw	r26, r24
    1d60:	cb 01       	movw	r24, r22
    1d62:	f8 01       	movw	r30, r16
    1d64:	91 83       	std	Z+1, r25	; 0x01
    1d66:	80 83       	st	Z, r24
    1d68:	1f c0       	rjmp	.+62     	; 0x1da8 <main+0x366>
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	ef 50       	subi	r30, 0x0F	; 15
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	88 ec       	ldi	r24, 0xC8	; 200
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	80 83       	st	Z, r24
    1d78:	fe 01       	movw	r30, r28
    1d7a:	ef 50       	subi	r30, 0x0F	; 15
    1d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7e:	80 81       	ld	r24, Z
    1d80:	91 81       	ldd	r25, Z+1	; 0x01
    1d82:	01 97       	sbiw	r24, 0x01	; 1
    1d84:	f1 f7       	brne	.-4      	; 0x1d82 <main+0x340>
    1d86:	fe 01       	movw	r30, r28
    1d88:	ef 50       	subi	r30, 0x0F	; 15
    1d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8c:	91 83       	std	Z+1, r25	; 0x01
    1d8e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d90:	de 01       	movw	r26, r28
    1d92:	ad 50       	subi	r26, 0x0D	; 13
    1d94:	bf 4f       	sbci	r27, 0xFF	; 255
    1d96:	fe 01       	movw	r30, r28
    1d98:	ed 50       	subi	r30, 0x0D	; 13
    1d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9c:	80 81       	ld	r24, Z
    1d9e:	91 81       	ldd	r25, Z+1	; 0x01
    1da0:	01 97       	sbiw	r24, 0x01	; 1
    1da2:	11 96       	adiw	r26, 0x01	; 1
    1da4:	9c 93       	st	X, r25
    1da6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1da8:	fe 01       	movw	r30, r28
    1daa:	ed 50       	subi	r30, 0x0D	; 13
    1dac:	ff 4f       	sbci	r31, 0xFF	; 255
    1dae:	80 81       	ld	r24, Z
    1db0:	91 81       	ldd	r25, Z+1	; 0x01
    1db2:	00 97       	sbiw	r24, 0x00	; 0
    1db4:	d1 f6       	brne	.-76     	; 0x1d6a <main+0x328>
    1db6:	27 c0       	rjmp	.+78     	; 0x1e06 <main+0x3c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1db8:	8e 01       	movw	r16, r28
    1dba:	0d 50       	subi	r16, 0x0D	; 13
    1dbc:	1f 4f       	sbci	r17, 0xFF	; 255
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	eb 50       	subi	r30, 0x0B	; 11
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	60 81       	ld	r22, Z
    1dc6:	71 81       	ldd	r23, Z+1	; 0x01
    1dc8:	82 81       	ldd	r24, Z+2	; 0x02
    1dca:	93 81       	ldd	r25, Z+3	; 0x03
    1dcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dd0:	dc 01       	movw	r26, r24
    1dd2:	cb 01       	movw	r24, r22
    1dd4:	f8 01       	movw	r30, r16
    1dd6:	91 83       	std	Z+1, r25	; 0x01
    1dd8:	80 83       	st	Z, r24
    1dda:	de 01       	movw	r26, r28
    1ddc:	a1 51       	subi	r26, 0x11	; 17
    1dde:	bf 4f       	sbci	r27, 0xFF	; 255
    1de0:	fe 01       	movw	r30, r28
    1de2:	ed 50       	subi	r30, 0x0D	; 13
    1de4:	ff 4f       	sbci	r31, 0xFF	; 255
    1de6:	80 81       	ld	r24, Z
    1de8:	91 81       	ldd	r25, Z+1	; 0x01
    1dea:	8d 93       	st	X+, r24
    1dec:	9c 93       	st	X, r25
    1dee:	fe 01       	movw	r30, r28
    1df0:	e1 51       	subi	r30, 0x11	; 17
    1df2:	ff 4f       	sbci	r31, 0xFF	; 255
    1df4:	80 81       	ld	r24, Z
    1df6:	91 81       	ldd	r25, Z+1	; 0x01
    1df8:	01 97       	sbiw	r24, 0x01	; 1
    1dfa:	f1 f7       	brne	.-4      	; 0x1df8 <main+0x3b6>
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e1 51       	subi	r30, 0x11	; 17
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	91 83       	std	Z+1, r25	; 0x01
    1e04:	80 83       	st	Z, r24
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    1e06:	88 e0       	ldi	r24, 0x08	; 8
    1e08:	61 e0       	ldi	r22, 0x01	; 1
    1e0a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("  ");
    1e0e:	8a e6       	ldi	r24, 0x6A	; 106
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    1e16:	fe 01       	movw	r30, r28
    1e18:	e5 51       	subi	r30, 0x15	; 21
    1e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1c:	80 e0       	ldi	r24, 0x00	; 0
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	aa e7       	ldi	r26, 0x7A	; 122
    1e22:	b3 e4       	ldi	r27, 0x43	; 67
    1e24:	80 83       	st	Z, r24
    1e26:	91 83       	std	Z+1, r25	; 0x01
    1e28:	a2 83       	std	Z+2, r26	; 0x02
    1e2a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e2c:	8e 01       	movw	r16, r28
    1e2e:	09 51       	subi	r16, 0x19	; 25
    1e30:	1f 4f       	sbci	r17, 0xFF	; 255
    1e32:	fe 01       	movw	r30, r28
    1e34:	e5 51       	subi	r30, 0x15	; 21
    1e36:	ff 4f       	sbci	r31, 0xFF	; 255
    1e38:	60 81       	ld	r22, Z
    1e3a:	71 81       	ldd	r23, Z+1	; 0x01
    1e3c:	82 81       	ldd	r24, Z+2	; 0x02
    1e3e:	93 81       	ldd	r25, Z+3	; 0x03
    1e40:	20 e0       	ldi	r18, 0x00	; 0
    1e42:	30 e0       	ldi	r19, 0x00	; 0
    1e44:	4a ef       	ldi	r20, 0xFA	; 250
    1e46:	54 e4       	ldi	r21, 0x44	; 68
    1e48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e4c:	dc 01       	movw	r26, r24
    1e4e:	cb 01       	movw	r24, r22
    1e50:	f8 01       	movw	r30, r16
    1e52:	80 83       	st	Z, r24
    1e54:	91 83       	std	Z+1, r25	; 0x01
    1e56:	a2 83       	std	Z+2, r26	; 0x02
    1e58:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e5a:	fe 01       	movw	r30, r28
    1e5c:	e9 51       	subi	r30, 0x19	; 25
    1e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e60:	60 81       	ld	r22, Z
    1e62:	71 81       	ldd	r23, Z+1	; 0x01
    1e64:	82 81       	ldd	r24, Z+2	; 0x02
    1e66:	93 81       	ldd	r25, Z+3	; 0x03
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	40 e8       	ldi	r20, 0x80	; 128
    1e6e:	5f e3       	ldi	r21, 0x3F	; 63
    1e70:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e74:	88 23       	and	r24, r24
    1e76:	44 f4       	brge	.+16     	; 0x1e88 <main+0x446>
		__ticks = 1;
    1e78:	fe 01       	movw	r30, r28
    1e7a:	eb 51       	subi	r30, 0x1B	; 27
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	80 83       	st	Z, r24
    1e86:	64 c0       	rjmp	.+200    	; 0x1f50 <main+0x50e>
	else if (__tmp > 65535)
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e9 51       	subi	r30, 0x19	; 25
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	60 81       	ld	r22, Z
    1e90:	71 81       	ldd	r23, Z+1	; 0x01
    1e92:	82 81       	ldd	r24, Z+2	; 0x02
    1e94:	93 81       	ldd	r25, Z+3	; 0x03
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	3f ef       	ldi	r19, 0xFF	; 255
    1e9a:	4f e7       	ldi	r20, 0x7F	; 127
    1e9c:	57 e4       	ldi	r21, 0x47	; 71
    1e9e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ea2:	18 16       	cp	r1, r24
    1ea4:	0c f0       	brlt	.+2      	; 0x1ea8 <main+0x466>
    1ea6:	43 c0       	rjmp	.+134    	; 0x1f2e <main+0x4ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ea8:	fe 01       	movw	r30, r28
    1eaa:	e5 51       	subi	r30, 0x15	; 21
    1eac:	ff 4f       	sbci	r31, 0xFF	; 255
    1eae:	60 81       	ld	r22, Z
    1eb0:	71 81       	ldd	r23, Z+1	; 0x01
    1eb2:	82 81       	ldd	r24, Z+2	; 0x02
    1eb4:	93 81       	ldd	r25, Z+3	; 0x03
    1eb6:	20 e0       	ldi	r18, 0x00	; 0
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	40 e2       	ldi	r20, 0x20	; 32
    1ebc:	51 e4       	ldi	r21, 0x41	; 65
    1ebe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	8e 01       	movw	r16, r28
    1ec8:	0b 51       	subi	r16, 0x1B	; 27
    1eca:	1f 4f       	sbci	r17, 0xFF	; 255
    1ecc:	bc 01       	movw	r22, r24
    1ece:	cd 01       	movw	r24, r26
    1ed0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ed4:	dc 01       	movw	r26, r24
    1ed6:	cb 01       	movw	r24, r22
    1ed8:	f8 01       	movw	r30, r16
    1eda:	91 83       	std	Z+1, r25	; 0x01
    1edc:	80 83       	st	Z, r24
    1ede:	1f c0       	rjmp	.+62     	; 0x1f1e <main+0x4dc>
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	ed 51       	subi	r30, 0x1D	; 29
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	88 ec       	ldi	r24, 0xC8	; 200
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	91 83       	std	Z+1, r25	; 0x01
    1eec:	80 83       	st	Z, r24
    1eee:	fe 01       	movw	r30, r28
    1ef0:	ed 51       	subi	r30, 0x1D	; 29
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	80 81       	ld	r24, Z
    1ef6:	91 81       	ldd	r25, Z+1	; 0x01
    1ef8:	01 97       	sbiw	r24, 0x01	; 1
    1efa:	f1 f7       	brne	.-4      	; 0x1ef8 <main+0x4b6>
    1efc:	fe 01       	movw	r30, r28
    1efe:	ed 51       	subi	r30, 0x1D	; 29
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	91 83       	std	Z+1, r25	; 0x01
    1f04:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f06:	de 01       	movw	r26, r28
    1f08:	ab 51       	subi	r26, 0x1B	; 27
    1f0a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f0c:	fe 01       	movw	r30, r28
    1f0e:	eb 51       	subi	r30, 0x1B	; 27
    1f10:	ff 4f       	sbci	r31, 0xFF	; 255
    1f12:	80 81       	ld	r24, Z
    1f14:	91 81       	ldd	r25, Z+1	; 0x01
    1f16:	01 97       	sbiw	r24, 0x01	; 1
    1f18:	11 96       	adiw	r26, 0x01	; 1
    1f1a:	9c 93       	st	X, r25
    1f1c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f1e:	fe 01       	movw	r30, r28
    1f20:	eb 51       	subi	r30, 0x1B	; 27
    1f22:	ff 4f       	sbci	r31, 0xFF	; 255
    1f24:	80 81       	ld	r24, Z
    1f26:	91 81       	ldd	r25, Z+1	; 0x01
    1f28:	00 97       	sbiw	r24, 0x00	; 0
    1f2a:	d1 f6       	brne	.-76     	; 0x1ee0 <main+0x49e>
    1f2c:	78 c3       	rjmp	.+1776   	; 0x261e <main+0xbdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f2e:	8e 01       	movw	r16, r28
    1f30:	0b 51       	subi	r16, 0x1B	; 27
    1f32:	1f 4f       	sbci	r17, 0xFF	; 255
    1f34:	fe 01       	movw	r30, r28
    1f36:	e9 51       	subi	r30, 0x19	; 25
    1f38:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3a:	60 81       	ld	r22, Z
    1f3c:	71 81       	ldd	r23, Z+1	; 0x01
    1f3e:	82 81       	ldd	r24, Z+2	; 0x02
    1f40:	93 81       	ldd	r25, Z+3	; 0x03
    1f42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	80 83       	st	Z, r24
    1f50:	de 01       	movw	r26, r28
    1f52:	af 51       	subi	r26, 0x1F	; 31
    1f54:	bf 4f       	sbci	r27, 0xFF	; 255
    1f56:	fe 01       	movw	r30, r28
    1f58:	eb 51       	subi	r30, 0x1B	; 27
    1f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5c:	80 81       	ld	r24, Z
    1f5e:	91 81       	ldd	r25, Z+1	; 0x01
    1f60:	11 96       	adiw	r26, 0x01	; 1
    1f62:	9c 93       	st	X, r25
    1f64:	8e 93       	st	-X, r24
    1f66:	fe 01       	movw	r30, r28
    1f68:	ef 51       	subi	r30, 0x1F	; 31
    1f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6c:	80 81       	ld	r24, Z
    1f6e:	91 81       	ldd	r25, Z+1	; 0x01
    1f70:	01 97       	sbiw	r24, 0x01	; 1
    1f72:	f1 f7       	brne	.-4      	; 0x1f70 <main+0x52e>
    1f74:	fe 01       	movw	r30, r28
    1f76:	ef 51       	subi	r30, 0x1F	; 31
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	91 83       	std	Z+1, r25	; 0x01
    1f7c:	80 83       	st	Z, r24
    1f7e:	4f c3       	rjmp	.+1694   	; 0x261e <main+0xbdc>
				_delay_ms(250);break;

				case 1:
					CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    1f80:	fe 01       	movw	r30, r28
    1f82:	e0 50       	subi	r30, 0x00	; 0
    1f84:	ff 4f       	sbci	r31, 0xFF	; 255
    1f86:	de 01       	movw	r26, r28
    1f88:	a3 50       	subi	r26, 0x03	; 3
    1f8a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f8c:	80 81       	ld	r24, Z
    1f8e:	6c 91       	ld	r22, X
    1f90:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
					Local_s8Iterator1++;
    1f94:	80 91 aa 00 	lds	r24, 0x00AA
    1f98:	8f 5f       	subi	r24, 0xFF	; 255
    1f9a:	80 93 aa 00 	sts	0x00AA, r24

					if(Local_s8Iterator1==4)
    1f9e:	80 91 aa 00 	lds	r24, 0x00AA
    1fa2:	84 30       	cpi	r24, 0x04	; 4
    1fa4:	11 f4       	brne	.+4      	; 0x1faa <main+0x568>
					{
						Local_s8Iterator1=0;
    1fa6:	10 92 aa 00 	sts	0x00AA, r1

					}

					CLCD_voidSendData(ch_Operation[Local_s8Iterator1]);
    1faa:	80 91 aa 00 	lds	r24, 0x00AA
    1fae:	99 27       	eor	r25, r25
    1fb0:	87 fd       	sbrc	r24, 7
    1fb2:	90 95       	com	r25
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	e6 56       	subi	r30, 0x66	; 102
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	80 81       	ld	r24, Z
    1fbc:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e3 52       	subi	r30, 0x23	; 35
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	80 e0       	ldi	r24, 0x00	; 0
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	aa e7       	ldi	r26, 0x7A	; 122
    1fcc:	b3 e4       	ldi	r27, 0x43	; 67
    1fce:	80 83       	st	Z, r24
    1fd0:	91 83       	std	Z+1, r25	; 0x01
    1fd2:	a2 83       	std	Z+2, r26	; 0x02
    1fd4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fd6:	8e 01       	movw	r16, r28
    1fd8:	07 52       	subi	r16, 0x27	; 39
    1fda:	1f 4f       	sbci	r17, 0xFF	; 255
    1fdc:	fe 01       	movw	r30, r28
    1fde:	e3 52       	subi	r30, 0x23	; 35
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	60 81       	ld	r22, Z
    1fe4:	71 81       	ldd	r23, Z+1	; 0x01
    1fe6:	82 81       	ldd	r24, Z+2	; 0x02
    1fe8:	93 81       	ldd	r25, Z+3	; 0x03
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	4a ef       	ldi	r20, 0xFA	; 250
    1ff0:	54 e4       	ldi	r21, 0x44	; 68
    1ff2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ff6:	dc 01       	movw	r26, r24
    1ff8:	cb 01       	movw	r24, r22
    1ffa:	f8 01       	movw	r30, r16
    1ffc:	80 83       	st	Z, r24
    1ffe:	91 83       	std	Z+1, r25	; 0x01
    2000:	a2 83       	std	Z+2, r26	; 0x02
    2002:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2004:	fe 01       	movw	r30, r28
    2006:	e7 52       	subi	r30, 0x27	; 39
    2008:	ff 4f       	sbci	r31, 0xFF	; 255
    200a:	60 81       	ld	r22, Z
    200c:	71 81       	ldd	r23, Z+1	; 0x01
    200e:	82 81       	ldd	r24, Z+2	; 0x02
    2010:	93 81       	ldd	r25, Z+3	; 0x03
    2012:	20 e0       	ldi	r18, 0x00	; 0
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	40 e8       	ldi	r20, 0x80	; 128
    2018:	5f e3       	ldi	r21, 0x3F	; 63
    201a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    201e:	88 23       	and	r24, r24
    2020:	44 f4       	brge	.+16     	; 0x2032 <main+0x5f0>
		__ticks = 1;
    2022:	fe 01       	movw	r30, r28
    2024:	e9 52       	subi	r30, 0x29	; 41
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	91 83       	std	Z+1, r25	; 0x01
    202e:	80 83       	st	Z, r24
    2030:	64 c0       	rjmp	.+200    	; 0x20fa <main+0x6b8>
	else if (__tmp > 65535)
    2032:	fe 01       	movw	r30, r28
    2034:	e7 52       	subi	r30, 0x27	; 39
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	60 81       	ld	r22, Z
    203a:	71 81       	ldd	r23, Z+1	; 0x01
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	93 81       	ldd	r25, Z+3	; 0x03
    2040:	20 e0       	ldi	r18, 0x00	; 0
    2042:	3f ef       	ldi	r19, 0xFF	; 255
    2044:	4f e7       	ldi	r20, 0x7F	; 127
    2046:	57 e4       	ldi	r21, 0x47	; 71
    2048:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    204c:	18 16       	cp	r1, r24
    204e:	0c f0       	brlt	.+2      	; 0x2052 <main+0x610>
    2050:	43 c0       	rjmp	.+134    	; 0x20d8 <main+0x696>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2052:	fe 01       	movw	r30, r28
    2054:	e3 52       	subi	r30, 0x23	; 35
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	60 81       	ld	r22, Z
    205a:	71 81       	ldd	r23, Z+1	; 0x01
    205c:	82 81       	ldd	r24, Z+2	; 0x02
    205e:	93 81       	ldd	r25, Z+3	; 0x03
    2060:	20 e0       	ldi	r18, 0x00	; 0
    2062:	30 e0       	ldi	r19, 0x00	; 0
    2064:	40 e2       	ldi	r20, 0x20	; 32
    2066:	51 e4       	ldi	r21, 0x41	; 65
    2068:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    206c:	dc 01       	movw	r26, r24
    206e:	cb 01       	movw	r24, r22
    2070:	8e 01       	movw	r16, r28
    2072:	09 52       	subi	r16, 0x29	; 41
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
    2076:	bc 01       	movw	r22, r24
    2078:	cd 01       	movw	r24, r26
    207a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    207e:	dc 01       	movw	r26, r24
    2080:	cb 01       	movw	r24, r22
    2082:	f8 01       	movw	r30, r16
    2084:	91 83       	std	Z+1, r25	; 0x01
    2086:	80 83       	st	Z, r24
    2088:	1f c0       	rjmp	.+62     	; 0x20c8 <main+0x686>
    208a:	fe 01       	movw	r30, r28
    208c:	eb 52       	subi	r30, 0x2B	; 43
    208e:	ff 4f       	sbci	r31, 0xFF	; 255
    2090:	88 ec       	ldi	r24, 0xC8	; 200
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	91 83       	std	Z+1, r25	; 0x01
    2096:	80 83       	st	Z, r24
    2098:	fe 01       	movw	r30, r28
    209a:	eb 52       	subi	r30, 0x2B	; 43
    209c:	ff 4f       	sbci	r31, 0xFF	; 255
    209e:	80 81       	ld	r24, Z
    20a0:	91 81       	ldd	r25, Z+1	; 0x01
    20a2:	01 97       	sbiw	r24, 0x01	; 1
    20a4:	f1 f7       	brne	.-4      	; 0x20a2 <main+0x660>
    20a6:	fe 01       	movw	r30, r28
    20a8:	eb 52       	subi	r30, 0x2B	; 43
    20aa:	ff 4f       	sbci	r31, 0xFF	; 255
    20ac:	91 83       	std	Z+1, r25	; 0x01
    20ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20b0:	de 01       	movw	r26, r28
    20b2:	a9 52       	subi	r26, 0x29	; 41
    20b4:	bf 4f       	sbci	r27, 0xFF	; 255
    20b6:	fe 01       	movw	r30, r28
    20b8:	e9 52       	subi	r30, 0x29	; 41
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	80 81       	ld	r24, Z
    20be:	91 81       	ldd	r25, Z+1	; 0x01
    20c0:	01 97       	sbiw	r24, 0x01	; 1
    20c2:	11 96       	adiw	r26, 0x01	; 1
    20c4:	9c 93       	st	X, r25
    20c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20c8:	fe 01       	movw	r30, r28
    20ca:	e9 52       	subi	r30, 0x29	; 41
    20cc:	ff 4f       	sbci	r31, 0xFF	; 255
    20ce:	80 81       	ld	r24, Z
    20d0:	91 81       	ldd	r25, Z+1	; 0x01
    20d2:	00 97       	sbiw	r24, 0x00	; 0
    20d4:	d1 f6       	brne	.-76     	; 0x208a <main+0x648>
    20d6:	a3 c2       	rjmp	.+1350   	; 0x261e <main+0xbdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20d8:	8e 01       	movw	r16, r28
    20da:	09 52       	subi	r16, 0x29	; 41
    20dc:	1f 4f       	sbci	r17, 0xFF	; 255
    20de:	fe 01       	movw	r30, r28
    20e0:	e7 52       	subi	r30, 0x27	; 39
    20e2:	ff 4f       	sbci	r31, 0xFF	; 255
    20e4:	60 81       	ld	r22, Z
    20e6:	71 81       	ldd	r23, Z+1	; 0x01
    20e8:	82 81       	ldd	r24, Z+2	; 0x02
    20ea:	93 81       	ldd	r25, Z+3	; 0x03
    20ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20f0:	dc 01       	movw	r26, r24
    20f2:	cb 01       	movw	r24, r22
    20f4:	f8 01       	movw	r30, r16
    20f6:	91 83       	std	Z+1, r25	; 0x01
    20f8:	80 83       	st	Z, r24
    20fa:	de 01       	movw	r26, r28
    20fc:	ad 52       	subi	r26, 0x2D	; 45
    20fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2100:	fe 01       	movw	r30, r28
    2102:	e9 52       	subi	r30, 0x29	; 41
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	80 81       	ld	r24, Z
    2108:	91 81       	ldd	r25, Z+1	; 0x01
    210a:	11 96       	adiw	r26, 0x01	; 1
    210c:	9c 93       	st	X, r25
    210e:	8e 93       	st	-X, r24
    2110:	fe 01       	movw	r30, r28
    2112:	ed 52       	subi	r30, 0x2D	; 45
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	80 81       	ld	r24, Z
    2118:	91 81       	ldd	r25, Z+1	; 0x01
    211a:	01 97       	sbiw	r24, 0x01	; 1
    211c:	f1 f7       	brne	.-4      	; 0x211a <main+0x6d8>
    211e:	fe 01       	movw	r30, r28
    2120:	ed 52       	subi	r30, 0x2D	; 45
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	91 83       	std	Z+1, r25	; 0x01
    2126:	80 83       	st	Z, r24
    2128:	7a c2       	rjmp	.+1268   	; 0x261e <main+0xbdc>

					_delay_ms(250);break;

				case 2:
					CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    212a:	fe 01       	movw	r30, r28
    212c:	e0 50       	subi	r30, 0x00	; 0
    212e:	ff 4f       	sbci	r31, 0xFF	; 255
    2130:	de 01       	movw	r26, r28
    2132:	a3 50       	subi	r26, 0x03	; 3
    2134:	bf 4f       	sbci	r27, 0xFF	; 255
    2136:	80 81       	ld	r24, Z
    2138:	6c 91       	ld	r22, X
    213a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>

					Local_s32Num2++;
    213e:	80 91 96 00 	lds	r24, 0x0096
    2142:	90 91 97 00 	lds	r25, 0x0097
    2146:	a0 91 98 00 	lds	r26, 0x0098
    214a:	b0 91 99 00 	lds	r27, 0x0099
    214e:	01 96       	adiw	r24, 0x01	; 1
    2150:	a1 1d       	adc	r26, r1
    2152:	b1 1d       	adc	r27, r1
    2154:	80 93 96 00 	sts	0x0096, r24
    2158:	90 93 97 00 	sts	0x0097, r25
    215c:	a0 93 98 00 	sts	0x0098, r26
    2160:	b0 93 99 00 	sts	0x0099, r27
					if(Local_s32Num2==10)
    2164:	80 91 96 00 	lds	r24, 0x0096
    2168:	90 91 97 00 	lds	r25, 0x0097
    216c:	a0 91 98 00 	lds	r26, 0x0098
    2170:	b0 91 99 00 	lds	r27, 0x0099
    2174:	8a 30       	cpi	r24, 0x0A	; 10
    2176:	91 05       	cpc	r25, r1
    2178:	a1 05       	cpc	r26, r1
    217a:	b1 05       	cpc	r27, r1
    217c:	41 f4       	brne	.+16     	; 0x218e <main+0x74c>
					{
						Local_s32Num2=0;
    217e:	10 92 96 00 	sts	0x0096, r1
    2182:	10 92 97 00 	sts	0x0097, r1
    2186:	10 92 98 00 	sts	0x0098, r1
    218a:	10 92 99 00 	sts	0x0099, r1
					}
					CLCD_voidSendNumber(Local_s32Num2);
    218e:	80 91 96 00 	lds	r24, 0x0096
    2192:	90 91 97 00 	lds	r25, 0x0097
    2196:	a0 91 98 00 	lds	r26, 0x0098
    219a:	b0 91 99 00 	lds	r27, 0x0099
    219e:	bc 01       	movw	r22, r24
    21a0:	cd 01       	movw	r24, r26
    21a2:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
					if((Local_s8Iterator1==3)&&(Local_s32Num2==0))
    21a6:	80 91 aa 00 	lds	r24, 0x00AA
    21aa:	83 30       	cpi	r24, 0x03	; 3
    21ac:	71 f4       	brne	.+28     	; 0x21ca <main+0x788>
    21ae:	80 91 96 00 	lds	r24, 0x0096
    21b2:	90 91 97 00 	lds	r25, 0x0097
    21b6:	a0 91 98 00 	lds	r26, 0x0098
    21ba:	b0 91 99 00 	lds	r27, 0x0099
    21be:	00 97       	sbiw	r24, 0x00	; 0
    21c0:	a1 05       	cpc	r26, r1
    21c2:	b1 05       	cpc	r27, r1
    21c4:	11 f4       	brne	.+4      	; 0x21ca <main+0x788>
    21c6:	0c 94 92 1c 	jmp	0x3924	; 0x3924 <main+0x1ee2>
										continue;
					CLCD_voidGoToXY (8u,1u);
    21ca:	88 e0       	ldi	r24, 0x08	; 8
    21cc:	61 e0       	ldi	r22, 0x01	; 1
    21ce:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
					CLCD_u8SendString ("UP");
    21d2:	87 e6       	ldi	r24, 0x67	; 103
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    21da:	fe 01       	movw	r30, r28
    21dc:	e1 53       	subi	r30, 0x31	; 49
    21de:	ff 4f       	sbci	r31, 0xFF	; 255
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	aa e7       	ldi	r26, 0x7A	; 122
    21e6:	b3 e4       	ldi	r27, 0x43	; 67
    21e8:	80 83       	st	Z, r24
    21ea:	91 83       	std	Z+1, r25	; 0x01
    21ec:	a2 83       	std	Z+2, r26	; 0x02
    21ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f0:	8e 01       	movw	r16, r28
    21f2:	05 53       	subi	r16, 0x35	; 53
    21f4:	1f 4f       	sbci	r17, 0xFF	; 255
    21f6:	fe 01       	movw	r30, r28
    21f8:	e1 53       	subi	r30, 0x31	; 49
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	60 81       	ld	r22, Z
    21fe:	71 81       	ldd	r23, Z+1	; 0x01
    2200:	82 81       	ldd	r24, Z+2	; 0x02
    2202:	93 81       	ldd	r25, Z+3	; 0x03
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	4a ef       	ldi	r20, 0xFA	; 250
    220a:	54 e4       	ldi	r21, 0x44	; 68
    220c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	f8 01       	movw	r30, r16
    2216:	80 83       	st	Z, r24
    2218:	91 83       	std	Z+1, r25	; 0x01
    221a:	a2 83       	std	Z+2, r26	; 0x02
    221c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    221e:	fe 01       	movw	r30, r28
    2220:	e5 53       	subi	r30, 0x35	; 53
    2222:	ff 4f       	sbci	r31, 0xFF	; 255
    2224:	60 81       	ld	r22, Z
    2226:	71 81       	ldd	r23, Z+1	; 0x01
    2228:	82 81       	ldd	r24, Z+2	; 0x02
    222a:	93 81       	ldd	r25, Z+3	; 0x03
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	40 e8       	ldi	r20, 0x80	; 128
    2232:	5f e3       	ldi	r21, 0x3F	; 63
    2234:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2238:	88 23       	and	r24, r24
    223a:	44 f4       	brge	.+16     	; 0x224c <main+0x80a>
		__ticks = 1;
    223c:	fe 01       	movw	r30, r28
    223e:	e7 53       	subi	r30, 0x37	; 55
    2240:	ff 4f       	sbci	r31, 0xFF	; 255
    2242:	81 e0       	ldi	r24, 0x01	; 1
    2244:	90 e0       	ldi	r25, 0x00	; 0
    2246:	91 83       	std	Z+1, r25	; 0x01
    2248:	80 83       	st	Z, r24
    224a:	64 c0       	rjmp	.+200    	; 0x2314 <main+0x8d2>
	else if (__tmp > 65535)
    224c:	fe 01       	movw	r30, r28
    224e:	e5 53       	subi	r30, 0x35	; 53
    2250:	ff 4f       	sbci	r31, 0xFF	; 255
    2252:	60 81       	ld	r22, Z
    2254:	71 81       	ldd	r23, Z+1	; 0x01
    2256:	82 81       	ldd	r24, Z+2	; 0x02
    2258:	93 81       	ldd	r25, Z+3	; 0x03
    225a:	20 e0       	ldi	r18, 0x00	; 0
    225c:	3f ef       	ldi	r19, 0xFF	; 255
    225e:	4f e7       	ldi	r20, 0x7F	; 127
    2260:	57 e4       	ldi	r21, 0x47	; 71
    2262:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2266:	18 16       	cp	r1, r24
    2268:	0c f0       	brlt	.+2      	; 0x226c <main+0x82a>
    226a:	43 c0       	rjmp	.+134    	; 0x22f2 <main+0x8b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    226c:	fe 01       	movw	r30, r28
    226e:	e1 53       	subi	r30, 0x31	; 49
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	60 81       	ld	r22, Z
    2274:	71 81       	ldd	r23, Z+1	; 0x01
    2276:	82 81       	ldd	r24, Z+2	; 0x02
    2278:	93 81       	ldd	r25, Z+3	; 0x03
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	30 e0       	ldi	r19, 0x00	; 0
    227e:	40 e2       	ldi	r20, 0x20	; 32
    2280:	51 e4       	ldi	r21, 0x41	; 65
    2282:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2286:	dc 01       	movw	r26, r24
    2288:	cb 01       	movw	r24, r22
    228a:	8e 01       	movw	r16, r28
    228c:	07 53       	subi	r16, 0x37	; 55
    228e:	1f 4f       	sbci	r17, 0xFF	; 255
    2290:	bc 01       	movw	r22, r24
    2292:	cd 01       	movw	r24, r26
    2294:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2298:	dc 01       	movw	r26, r24
    229a:	cb 01       	movw	r24, r22
    229c:	f8 01       	movw	r30, r16
    229e:	91 83       	std	Z+1, r25	; 0x01
    22a0:	80 83       	st	Z, r24
    22a2:	1f c0       	rjmp	.+62     	; 0x22e2 <main+0x8a0>
    22a4:	fe 01       	movw	r30, r28
    22a6:	e9 53       	subi	r30, 0x39	; 57
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	88 ec       	ldi	r24, 0xC8	; 200
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	91 83       	std	Z+1, r25	; 0x01
    22b0:	80 83       	st	Z, r24
    22b2:	fe 01       	movw	r30, r28
    22b4:	e9 53       	subi	r30, 0x39	; 57
    22b6:	ff 4f       	sbci	r31, 0xFF	; 255
    22b8:	80 81       	ld	r24, Z
    22ba:	91 81       	ldd	r25, Z+1	; 0x01
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <main+0x87a>
    22c0:	fe 01       	movw	r30, r28
    22c2:	e9 53       	subi	r30, 0x39	; 57
    22c4:	ff 4f       	sbci	r31, 0xFF	; 255
    22c6:	91 83       	std	Z+1, r25	; 0x01
    22c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22ca:	de 01       	movw	r26, r28
    22cc:	a7 53       	subi	r26, 0x37	; 55
    22ce:	bf 4f       	sbci	r27, 0xFF	; 255
    22d0:	fe 01       	movw	r30, r28
    22d2:	e7 53       	subi	r30, 0x37	; 55
    22d4:	ff 4f       	sbci	r31, 0xFF	; 255
    22d6:	80 81       	ld	r24, Z
    22d8:	91 81       	ldd	r25, Z+1	; 0x01
    22da:	01 97       	sbiw	r24, 0x01	; 1
    22dc:	11 96       	adiw	r26, 0x01	; 1
    22de:	9c 93       	st	X, r25
    22e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22e2:	fe 01       	movw	r30, r28
    22e4:	e7 53       	subi	r30, 0x37	; 55
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	80 81       	ld	r24, Z
    22ea:	91 81       	ldd	r25, Z+1	; 0x01
    22ec:	00 97       	sbiw	r24, 0x00	; 0
    22ee:	d1 f6       	brne	.-76     	; 0x22a4 <main+0x862>
    22f0:	27 c0       	rjmp	.+78     	; 0x2340 <main+0x8fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22f2:	8e 01       	movw	r16, r28
    22f4:	07 53       	subi	r16, 0x37	; 55
    22f6:	1f 4f       	sbci	r17, 0xFF	; 255
    22f8:	fe 01       	movw	r30, r28
    22fa:	e5 53       	subi	r30, 0x35	; 53
    22fc:	ff 4f       	sbci	r31, 0xFF	; 255
    22fe:	60 81       	ld	r22, Z
    2300:	71 81       	ldd	r23, Z+1	; 0x01
    2302:	82 81       	ldd	r24, Z+2	; 0x02
    2304:	93 81       	ldd	r25, Z+3	; 0x03
    2306:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    230a:	dc 01       	movw	r26, r24
    230c:	cb 01       	movw	r24, r22
    230e:	f8 01       	movw	r30, r16
    2310:	91 83       	std	Z+1, r25	; 0x01
    2312:	80 83       	st	Z, r24
    2314:	de 01       	movw	r26, r28
    2316:	ab 53       	subi	r26, 0x3B	; 59
    2318:	bf 4f       	sbci	r27, 0xFF	; 255
    231a:	fe 01       	movw	r30, r28
    231c:	e7 53       	subi	r30, 0x37	; 55
    231e:	ff 4f       	sbci	r31, 0xFF	; 255
    2320:	80 81       	ld	r24, Z
    2322:	91 81       	ldd	r25, Z+1	; 0x01
    2324:	8d 93       	st	X+, r24
    2326:	9c 93       	st	X, r25
    2328:	fe 01       	movw	r30, r28
    232a:	eb 53       	subi	r30, 0x3B	; 59
    232c:	ff 4f       	sbci	r31, 0xFF	; 255
    232e:	80 81       	ld	r24, Z
    2330:	91 81       	ldd	r25, Z+1	; 0x01
    2332:	01 97       	sbiw	r24, 0x01	; 1
    2334:	f1 f7       	brne	.-4      	; 0x2332 <main+0x8f0>
    2336:	fe 01       	movw	r30, r28
    2338:	eb 53       	subi	r30, 0x3B	; 59
    233a:	ff 4f       	sbci	r31, 0xFF	; 255
    233c:	91 83       	std	Z+1, r25	; 0x01
    233e:	80 83       	st	Z, r24
					_delay_ms(250);
					CLCD_voidGoToXY (8u,1u);
    2340:	88 e0       	ldi	r24, 0x08	; 8
    2342:	61 e0       	ldi	r22, 0x01	; 1
    2344:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
					CLCD_u8SendString ("  ");
    2348:	8a e6       	ldi	r24, 0x6A	; 106
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    2350:	fe 01       	movw	r30, r28
    2352:	ef 53       	subi	r30, 0x3F	; 63
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	80 e0       	ldi	r24, 0x00	; 0
    2358:	90 e0       	ldi	r25, 0x00	; 0
    235a:	aa e7       	ldi	r26, 0x7A	; 122
    235c:	b3 e4       	ldi	r27, 0x43	; 67
    235e:	80 83       	st	Z, r24
    2360:	91 83       	std	Z+1, r25	; 0x01
    2362:	a2 83       	std	Z+2, r26	; 0x02
    2364:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2366:	8e 01       	movw	r16, r28
    2368:	03 54       	subi	r16, 0x43	; 67
    236a:	1f 4f       	sbci	r17, 0xFF	; 255
    236c:	fe 01       	movw	r30, r28
    236e:	ef 53       	subi	r30, 0x3F	; 63
    2370:	ff 4f       	sbci	r31, 0xFF	; 255
    2372:	60 81       	ld	r22, Z
    2374:	71 81       	ldd	r23, Z+1	; 0x01
    2376:	82 81       	ldd	r24, Z+2	; 0x02
    2378:	93 81       	ldd	r25, Z+3	; 0x03
    237a:	20 e0       	ldi	r18, 0x00	; 0
    237c:	30 e0       	ldi	r19, 0x00	; 0
    237e:	4a ef       	ldi	r20, 0xFA	; 250
    2380:	54 e4       	ldi	r21, 0x44	; 68
    2382:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2386:	dc 01       	movw	r26, r24
    2388:	cb 01       	movw	r24, r22
    238a:	f8 01       	movw	r30, r16
    238c:	80 83       	st	Z, r24
    238e:	91 83       	std	Z+1, r25	; 0x01
    2390:	a2 83       	std	Z+2, r26	; 0x02
    2392:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2394:	fe 01       	movw	r30, r28
    2396:	e3 54       	subi	r30, 0x43	; 67
    2398:	ff 4f       	sbci	r31, 0xFF	; 255
    239a:	60 81       	ld	r22, Z
    239c:	71 81       	ldd	r23, Z+1	; 0x01
    239e:	82 81       	ldd	r24, Z+2	; 0x02
    23a0:	93 81       	ldd	r25, Z+3	; 0x03
    23a2:	20 e0       	ldi	r18, 0x00	; 0
    23a4:	30 e0       	ldi	r19, 0x00	; 0
    23a6:	40 e8       	ldi	r20, 0x80	; 128
    23a8:	5f e3       	ldi	r21, 0x3F	; 63
    23aa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    23ae:	88 23       	and	r24, r24
    23b0:	44 f4       	brge	.+16     	; 0x23c2 <main+0x980>
		__ticks = 1;
    23b2:	fe 01       	movw	r30, r28
    23b4:	e5 54       	subi	r30, 0x45	; 69
    23b6:	ff 4f       	sbci	r31, 0xFF	; 255
    23b8:	81 e0       	ldi	r24, 0x01	; 1
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	91 83       	std	Z+1, r25	; 0x01
    23be:	80 83       	st	Z, r24
    23c0:	64 c0       	rjmp	.+200    	; 0x248a <main+0xa48>
	else if (__tmp > 65535)
    23c2:	fe 01       	movw	r30, r28
    23c4:	e3 54       	subi	r30, 0x43	; 67
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	60 81       	ld	r22, Z
    23ca:	71 81       	ldd	r23, Z+1	; 0x01
    23cc:	82 81       	ldd	r24, Z+2	; 0x02
    23ce:	93 81       	ldd	r25, Z+3	; 0x03
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	3f ef       	ldi	r19, 0xFF	; 255
    23d4:	4f e7       	ldi	r20, 0x7F	; 127
    23d6:	57 e4       	ldi	r21, 0x47	; 71
    23d8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    23dc:	18 16       	cp	r1, r24
    23de:	0c f0       	brlt	.+2      	; 0x23e2 <main+0x9a0>
    23e0:	43 c0       	rjmp	.+134    	; 0x2468 <main+0xa26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e2:	fe 01       	movw	r30, r28
    23e4:	ef 53       	subi	r30, 0x3F	; 63
    23e6:	ff 4f       	sbci	r31, 0xFF	; 255
    23e8:	60 81       	ld	r22, Z
    23ea:	71 81       	ldd	r23, Z+1	; 0x01
    23ec:	82 81       	ldd	r24, Z+2	; 0x02
    23ee:	93 81       	ldd	r25, Z+3	; 0x03
    23f0:	20 e0       	ldi	r18, 0x00	; 0
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	40 e2       	ldi	r20, 0x20	; 32
    23f6:	51 e4       	ldi	r21, 0x41	; 65
    23f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	8e 01       	movw	r16, r28
    2402:	05 54       	subi	r16, 0x45	; 69
    2404:	1f 4f       	sbci	r17, 0xFF	; 255
    2406:	bc 01       	movw	r22, r24
    2408:	cd 01       	movw	r24, r26
    240a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    240e:	dc 01       	movw	r26, r24
    2410:	cb 01       	movw	r24, r22
    2412:	f8 01       	movw	r30, r16
    2414:	91 83       	std	Z+1, r25	; 0x01
    2416:	80 83       	st	Z, r24
    2418:	1f c0       	rjmp	.+62     	; 0x2458 <main+0xa16>
    241a:	fe 01       	movw	r30, r28
    241c:	e7 54       	subi	r30, 0x47	; 71
    241e:	ff 4f       	sbci	r31, 0xFF	; 255
    2420:	88 ec       	ldi	r24, 0xC8	; 200
    2422:	90 e0       	ldi	r25, 0x00	; 0
    2424:	91 83       	std	Z+1, r25	; 0x01
    2426:	80 83       	st	Z, r24
    2428:	fe 01       	movw	r30, r28
    242a:	e7 54       	subi	r30, 0x47	; 71
    242c:	ff 4f       	sbci	r31, 0xFF	; 255
    242e:	80 81       	ld	r24, Z
    2430:	91 81       	ldd	r25, Z+1	; 0x01
    2432:	01 97       	sbiw	r24, 0x01	; 1
    2434:	f1 f7       	brne	.-4      	; 0x2432 <main+0x9f0>
    2436:	fe 01       	movw	r30, r28
    2438:	e7 54       	subi	r30, 0x47	; 71
    243a:	ff 4f       	sbci	r31, 0xFF	; 255
    243c:	91 83       	std	Z+1, r25	; 0x01
    243e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2440:	de 01       	movw	r26, r28
    2442:	a5 54       	subi	r26, 0x45	; 69
    2444:	bf 4f       	sbci	r27, 0xFF	; 255
    2446:	fe 01       	movw	r30, r28
    2448:	e5 54       	subi	r30, 0x45	; 69
    244a:	ff 4f       	sbci	r31, 0xFF	; 255
    244c:	80 81       	ld	r24, Z
    244e:	91 81       	ldd	r25, Z+1	; 0x01
    2450:	01 97       	sbiw	r24, 0x01	; 1
    2452:	11 96       	adiw	r26, 0x01	; 1
    2454:	9c 93       	st	X, r25
    2456:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2458:	fe 01       	movw	r30, r28
    245a:	e5 54       	subi	r30, 0x45	; 69
    245c:	ff 4f       	sbci	r31, 0xFF	; 255
    245e:	80 81       	ld	r24, Z
    2460:	91 81       	ldd	r25, Z+1	; 0x01
    2462:	00 97       	sbiw	r24, 0x00	; 0
    2464:	d1 f6       	brne	.-76     	; 0x241a <main+0x9d8>
    2466:	27 c0       	rjmp	.+78     	; 0x24b6 <main+0xa74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2468:	8e 01       	movw	r16, r28
    246a:	05 54       	subi	r16, 0x45	; 69
    246c:	1f 4f       	sbci	r17, 0xFF	; 255
    246e:	fe 01       	movw	r30, r28
    2470:	e3 54       	subi	r30, 0x43	; 67
    2472:	ff 4f       	sbci	r31, 0xFF	; 255
    2474:	60 81       	ld	r22, Z
    2476:	71 81       	ldd	r23, Z+1	; 0x01
    2478:	82 81       	ldd	r24, Z+2	; 0x02
    247a:	93 81       	ldd	r25, Z+3	; 0x03
    247c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2480:	dc 01       	movw	r26, r24
    2482:	cb 01       	movw	r24, r22
    2484:	f8 01       	movw	r30, r16
    2486:	91 83       	std	Z+1, r25	; 0x01
    2488:	80 83       	st	Z, r24
    248a:	de 01       	movw	r26, r28
    248c:	a9 54       	subi	r26, 0x49	; 73
    248e:	bf 4f       	sbci	r27, 0xFF	; 255
    2490:	fe 01       	movw	r30, r28
    2492:	e5 54       	subi	r30, 0x45	; 69
    2494:	ff 4f       	sbci	r31, 0xFF	; 255
    2496:	80 81       	ld	r24, Z
    2498:	91 81       	ldd	r25, Z+1	; 0x01
    249a:	8d 93       	st	X+, r24
    249c:	9c 93       	st	X, r25
    249e:	fe 01       	movw	r30, r28
    24a0:	e9 54       	subi	r30, 0x49	; 73
    24a2:	ff 4f       	sbci	r31, 0xFF	; 255
    24a4:	80 81       	ld	r24, Z
    24a6:	91 81       	ldd	r25, Z+1	; 0x01
    24a8:	01 97       	sbiw	r24, 0x01	; 1
    24aa:	f1 f7       	brne	.-4      	; 0x24a8 <main+0xa66>
    24ac:	fe 01       	movw	r30, r28
    24ae:	e9 54       	subi	r30, 0x49	; 73
    24b0:	ff 4f       	sbci	r31, 0xFF	; 255
    24b2:	91 83       	std	Z+1, r25	; 0x01
    24b4:	80 83       	st	Z, r24
    24b6:	fe 01       	movw	r30, r28
    24b8:	ed 54       	subi	r30, 0x4D	; 77
    24ba:	ff 4f       	sbci	r31, 0xFF	; 255
    24bc:	80 e0       	ldi	r24, 0x00	; 0
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	aa e7       	ldi	r26, 0x7A	; 122
    24c2:	b3 e4       	ldi	r27, 0x43	; 67
    24c4:	80 83       	st	Z, r24
    24c6:	91 83       	std	Z+1, r25	; 0x01
    24c8:	a2 83       	std	Z+2, r26	; 0x02
    24ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24cc:	8e 01       	movw	r16, r28
    24ce:	01 55       	subi	r16, 0x51	; 81
    24d0:	1f 4f       	sbci	r17, 0xFF	; 255
    24d2:	fe 01       	movw	r30, r28
    24d4:	ed 54       	subi	r30, 0x4D	; 77
    24d6:	ff 4f       	sbci	r31, 0xFF	; 255
    24d8:	60 81       	ld	r22, Z
    24da:	71 81       	ldd	r23, Z+1	; 0x01
    24dc:	82 81       	ldd	r24, Z+2	; 0x02
    24de:	93 81       	ldd	r25, Z+3	; 0x03
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	4a ef       	ldi	r20, 0xFA	; 250
    24e6:	54 e4       	ldi	r21, 0x44	; 68
    24e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24ec:	dc 01       	movw	r26, r24
    24ee:	cb 01       	movw	r24, r22
    24f0:	f8 01       	movw	r30, r16
    24f2:	80 83       	st	Z, r24
    24f4:	91 83       	std	Z+1, r25	; 0x01
    24f6:	a2 83       	std	Z+2, r26	; 0x02
    24f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24fa:	fe 01       	movw	r30, r28
    24fc:	e1 55       	subi	r30, 0x51	; 81
    24fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2500:	60 81       	ld	r22, Z
    2502:	71 81       	ldd	r23, Z+1	; 0x01
    2504:	82 81       	ldd	r24, Z+2	; 0x02
    2506:	93 81       	ldd	r25, Z+3	; 0x03
    2508:	20 e0       	ldi	r18, 0x00	; 0
    250a:	30 e0       	ldi	r19, 0x00	; 0
    250c:	40 e8       	ldi	r20, 0x80	; 128
    250e:	5f e3       	ldi	r21, 0x3F	; 63
    2510:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2514:	88 23       	and	r24, r24
    2516:	44 f4       	brge	.+16     	; 0x2528 <main+0xae6>
		__ticks = 1;
    2518:	fe 01       	movw	r30, r28
    251a:	e3 55       	subi	r30, 0x53	; 83
    251c:	ff 4f       	sbci	r31, 0xFF	; 255
    251e:	81 e0       	ldi	r24, 0x01	; 1
    2520:	90 e0       	ldi	r25, 0x00	; 0
    2522:	91 83       	std	Z+1, r25	; 0x01
    2524:	80 83       	st	Z, r24
    2526:	64 c0       	rjmp	.+200    	; 0x25f0 <main+0xbae>
	else if (__tmp > 65535)
    2528:	fe 01       	movw	r30, r28
    252a:	e1 55       	subi	r30, 0x51	; 81
    252c:	ff 4f       	sbci	r31, 0xFF	; 255
    252e:	60 81       	ld	r22, Z
    2530:	71 81       	ldd	r23, Z+1	; 0x01
    2532:	82 81       	ldd	r24, Z+2	; 0x02
    2534:	93 81       	ldd	r25, Z+3	; 0x03
    2536:	20 e0       	ldi	r18, 0x00	; 0
    2538:	3f ef       	ldi	r19, 0xFF	; 255
    253a:	4f e7       	ldi	r20, 0x7F	; 127
    253c:	57 e4       	ldi	r21, 0x47	; 71
    253e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2542:	18 16       	cp	r1, r24
    2544:	0c f0       	brlt	.+2      	; 0x2548 <main+0xb06>
    2546:	43 c0       	rjmp	.+134    	; 0x25ce <main+0xb8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2548:	fe 01       	movw	r30, r28
    254a:	ed 54       	subi	r30, 0x4D	; 77
    254c:	ff 4f       	sbci	r31, 0xFF	; 255
    254e:	60 81       	ld	r22, Z
    2550:	71 81       	ldd	r23, Z+1	; 0x01
    2552:	82 81       	ldd	r24, Z+2	; 0x02
    2554:	93 81       	ldd	r25, Z+3	; 0x03
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e2       	ldi	r20, 0x20	; 32
    255c:	51 e4       	ldi	r21, 0x41	; 65
    255e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2562:	dc 01       	movw	r26, r24
    2564:	cb 01       	movw	r24, r22
    2566:	8e 01       	movw	r16, r28
    2568:	03 55       	subi	r16, 0x53	; 83
    256a:	1f 4f       	sbci	r17, 0xFF	; 255
    256c:	bc 01       	movw	r22, r24
    256e:	cd 01       	movw	r24, r26
    2570:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2574:	dc 01       	movw	r26, r24
    2576:	cb 01       	movw	r24, r22
    2578:	f8 01       	movw	r30, r16
    257a:	91 83       	std	Z+1, r25	; 0x01
    257c:	80 83       	st	Z, r24
    257e:	1f c0       	rjmp	.+62     	; 0x25be <main+0xb7c>
    2580:	fe 01       	movw	r30, r28
    2582:	e5 55       	subi	r30, 0x55	; 85
    2584:	ff 4f       	sbci	r31, 0xFF	; 255
    2586:	88 ec       	ldi	r24, 0xC8	; 200
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	91 83       	std	Z+1, r25	; 0x01
    258c:	80 83       	st	Z, r24
    258e:	fe 01       	movw	r30, r28
    2590:	e5 55       	subi	r30, 0x55	; 85
    2592:	ff 4f       	sbci	r31, 0xFF	; 255
    2594:	80 81       	ld	r24, Z
    2596:	91 81       	ldd	r25, Z+1	; 0x01
    2598:	01 97       	sbiw	r24, 0x01	; 1
    259a:	f1 f7       	brne	.-4      	; 0x2598 <main+0xb56>
    259c:	fe 01       	movw	r30, r28
    259e:	e5 55       	subi	r30, 0x55	; 85
    25a0:	ff 4f       	sbci	r31, 0xFF	; 255
    25a2:	91 83       	std	Z+1, r25	; 0x01
    25a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25a6:	de 01       	movw	r26, r28
    25a8:	a3 55       	subi	r26, 0x53	; 83
    25aa:	bf 4f       	sbci	r27, 0xFF	; 255
    25ac:	fe 01       	movw	r30, r28
    25ae:	e3 55       	subi	r30, 0x53	; 83
    25b0:	ff 4f       	sbci	r31, 0xFF	; 255
    25b2:	80 81       	ld	r24, Z
    25b4:	91 81       	ldd	r25, Z+1	; 0x01
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	11 96       	adiw	r26, 0x01	; 1
    25ba:	9c 93       	st	X, r25
    25bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25be:	fe 01       	movw	r30, r28
    25c0:	e3 55       	subi	r30, 0x53	; 83
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	80 81       	ld	r24, Z
    25c6:	91 81       	ldd	r25, Z+1	; 0x01
    25c8:	00 97       	sbiw	r24, 0x00	; 0
    25ca:	d1 f6       	brne	.-76     	; 0x2580 <main+0xb3e>
    25cc:	28 c0       	rjmp	.+80     	; 0x261e <main+0xbdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25ce:	8e 01       	movw	r16, r28
    25d0:	03 55       	subi	r16, 0x53	; 83
    25d2:	1f 4f       	sbci	r17, 0xFF	; 255
    25d4:	fe 01       	movw	r30, r28
    25d6:	e1 55       	subi	r30, 0x51	; 81
    25d8:	ff 4f       	sbci	r31, 0xFF	; 255
    25da:	60 81       	ld	r22, Z
    25dc:	71 81       	ldd	r23, Z+1	; 0x01
    25de:	82 81       	ldd	r24, Z+2	; 0x02
    25e0:	93 81       	ldd	r25, Z+3	; 0x03
    25e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	f8 01       	movw	r30, r16
    25ec:	91 83       	std	Z+1, r25	; 0x01
    25ee:	80 83       	st	Z, r24
    25f0:	de 01       	movw	r26, r28
    25f2:	a7 55       	subi	r26, 0x57	; 87
    25f4:	bf 4f       	sbci	r27, 0xFF	; 255
    25f6:	fe 01       	movw	r30, r28
    25f8:	e3 55       	subi	r30, 0x53	; 83
    25fa:	ff 4f       	sbci	r31, 0xFF	; 255
    25fc:	80 81       	ld	r24, Z
    25fe:	91 81       	ldd	r25, Z+1	; 0x01
    2600:	11 96       	adiw	r26, 0x01	; 1
    2602:	9c 93       	st	X, r25
    2604:	8e 93       	st	-X, r24
    2606:	fe 01       	movw	r30, r28
    2608:	e7 55       	subi	r30, 0x57	; 87
    260a:	ff 4f       	sbci	r31, 0xFF	; 255
    260c:	80 81       	ld	r24, Z
    260e:	91 81       	ldd	r25, Z+1	; 0x01
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	f1 f7       	brne	.-4      	; 0x2610 <main+0xbce>
    2614:	fe 01       	movw	r30, r28
    2616:	e7 55       	subi	r30, 0x57	; 87
    2618:	ff 4f       	sbci	r31, 0xFF	; 255
    261a:	91 83       	std	Z+1, r25	; 0x01
    261c:	80 83       	st	Z, r24


				}
			}

			if(Local_u8PinDownRead ==DIO_PIN_LOW)
    261e:	fe 01       	movw	r30, r28
    2620:	e6 5f       	subi	r30, 0xF6	; 246
    2622:	fe 4f       	sbci	r31, 0xFE	; 254
    2624:	80 81       	ld	r24, Z
    2626:	88 23       	and	r24, r24
    2628:	09 f0       	breq	.+2      	; 0x262c <main+0xbea>
    262a:	9c c4       	rjmp	.+2360   	; 0x2f64 <main+0x1522>
			{
				switch (Local_u8Xpos)
    262c:	fe 01       	movw	r30, r28
    262e:	e0 50       	subi	r30, 0x00	; 0
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	80 81       	ld	r24, Z
    2634:	28 2f       	mov	r18, r24
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	c2 5f       	subi	r28, 0xF2	; 242
    263a:	de 4f       	sbci	r29, 0xFE	; 254
    263c:	39 83       	std	Y+1, r19	; 0x01
    263e:	28 83       	st	Y, r18
    2640:	ce 50       	subi	r28, 0x0E	; 14
    2642:	d1 40       	sbci	r29, 0x01	; 1
    2644:	c2 5f       	subi	r28, 0xF2	; 242
    2646:	de 4f       	sbci	r29, 0xFE	; 254
    2648:	88 81       	ld	r24, Y
    264a:	99 81       	ldd	r25, Y+1	; 0x01
    264c:	ce 50       	subi	r28, 0x0E	; 14
    264e:	d1 40       	sbci	r29, 0x01	; 1
    2650:	81 30       	cpi	r24, 0x01	; 1
    2652:	91 05       	cpc	r25, r1
    2654:	09 f4       	brne	.+2      	; 0x2658 <main+0xc16>
    2656:	e3 c1       	rjmp	.+966    	; 0x2a1e <main+0xfdc>
    2658:	c2 5f       	subi	r28, 0xF2	; 242
    265a:	de 4f       	sbci	r29, 0xFE	; 254
    265c:	e8 81       	ld	r30, Y
    265e:	f9 81       	ldd	r31, Y+1	; 0x01
    2660:	ce 50       	subi	r28, 0x0E	; 14
    2662:	d1 40       	sbci	r29, 0x01	; 1
    2664:	e2 30       	cpi	r30, 0x02	; 2
    2666:	f1 05       	cpc	r31, r1
    2668:	09 f4       	brne	.+2      	; 0x266c <main+0xc2a>
    266a:	af c2       	rjmp	.+1374   	; 0x2bca <main+0x1188>
    266c:	c2 5f       	subi	r28, 0xF2	; 242
    266e:	de 4f       	sbci	r29, 0xFE	; 254
    2670:	28 81       	ld	r18, Y
    2672:	39 81       	ldd	r19, Y+1	; 0x01
    2674:	ce 50       	subi	r28, 0x0E	; 14
    2676:	d1 40       	sbci	r29, 0x01	; 1
    2678:	21 15       	cp	r18, r1
    267a:	31 05       	cpc	r19, r1
    267c:	09 f0       	breq	.+2      	; 0x2680 <main+0xc3e>
    267e:	72 c4       	rjmp	.+2276   	; 0x2f64 <main+0x1522>
				{
				case 0:CLCD_voidGoToXY (Local_DDRAMXPos,Local_u8DDRAMYPos);
    2680:	fe 01       	movw	r30, r28
    2682:	e2 50       	subi	r30, 0x02	; 2
    2684:	ff 4f       	sbci	r31, 0xFF	; 255
    2686:	de 01       	movw	r26, r28
    2688:	a3 50       	subi	r26, 0x03	; 3
    268a:	bf 4f       	sbci	r27, 0xFF	; 255
    268c:	80 81       	ld	r24, Z
    268e:	6c 91       	ld	r22, X
    2690:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>

				Local_s32Num1--;
    2694:	80 91 92 00 	lds	r24, 0x0092
    2698:	90 91 93 00 	lds	r25, 0x0093
    269c:	a0 91 94 00 	lds	r26, 0x0094
    26a0:	b0 91 95 00 	lds	r27, 0x0095
    26a4:	01 97       	sbiw	r24, 0x01	; 1
    26a6:	a1 09       	sbc	r26, r1
    26a8:	b1 09       	sbc	r27, r1
    26aa:	80 93 92 00 	sts	0x0092, r24
    26ae:	90 93 93 00 	sts	0x0093, r25
    26b2:	a0 93 94 00 	sts	0x0094, r26
    26b6:	b0 93 95 00 	sts	0x0095, r27
				if(Local_s32Num1==-1)
    26ba:	80 91 92 00 	lds	r24, 0x0092
    26be:	90 91 93 00 	lds	r25, 0x0093
    26c2:	a0 91 94 00 	lds	r26, 0x0094
    26c6:	b0 91 95 00 	lds	r27, 0x0095
    26ca:	8f 3f       	cpi	r24, 0xFF	; 255
    26cc:	3f ef       	ldi	r19, 0xFF	; 255
    26ce:	93 07       	cpc	r25, r19
    26d0:	3f ef       	ldi	r19, 0xFF	; 255
    26d2:	a3 07       	cpc	r26, r19
    26d4:	3f ef       	ldi	r19, 0xFF	; 255
    26d6:	b3 07       	cpc	r27, r19
    26d8:	61 f4       	brne	.+24     	; 0x26f2 <main+0xcb0>
				{
					Local_s32Num1=9;
    26da:	89 e0       	ldi	r24, 0x09	; 9
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	a0 e0       	ldi	r26, 0x00	; 0
    26e0:	b0 e0       	ldi	r27, 0x00	; 0
    26e2:	80 93 92 00 	sts	0x0092, r24
    26e6:	90 93 93 00 	sts	0x0093, r25
    26ea:	a0 93 94 00 	sts	0x0094, r26
    26ee:	b0 93 95 00 	sts	0x0095, r27
				}
				CLCD_voidSendNumber(Local_s32Num1);
    26f2:	80 91 92 00 	lds	r24, 0x0092
    26f6:	90 91 93 00 	lds	r25, 0x0093
    26fa:	a0 91 94 00 	lds	r26, 0x0094
    26fe:	b0 91 95 00 	lds	r27, 0x0095
    2702:	bc 01       	movw	r22, r24
    2704:	cd 01       	movw	r24, r26
    2706:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
				if((Local_s8Iterator1==3)&&(Local_s32Num2==0))
    270a:	80 91 aa 00 	lds	r24, 0x00AA
    270e:	83 30       	cpi	r24, 0x03	; 3
    2710:	71 f4       	brne	.+28     	; 0x272e <main+0xcec>
    2712:	80 91 96 00 	lds	r24, 0x0096
    2716:	90 91 97 00 	lds	r25, 0x0097
    271a:	a0 91 98 00 	lds	r26, 0x0098
    271e:	b0 91 99 00 	lds	r27, 0x0099
    2722:	00 97       	sbiw	r24, 0x00	; 0
    2724:	a1 05       	cpc	r26, r1
    2726:	b1 05       	cpc	r27, r1
    2728:	11 f4       	brne	.+4      	; 0x272e <main+0xcec>
    272a:	0c 94 92 1c 	jmp	0x3924	; 0x3924 <main+0x1ee2>
					continue;
				CLCD_voidGoToXY (8u,1u);
    272e:	88 e0       	ldi	r24, 0x08	; 8
    2730:	61 e0       	ldi	r22, 0x01	; 1
    2732:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("DOWN");
    2736:	8d e6       	ldi	r24, 0x6D	; 109
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    273e:	fe 01       	movw	r30, r28
    2740:	eb 55       	subi	r30, 0x5B	; 91
    2742:	ff 4f       	sbci	r31, 0xFF	; 255
    2744:	80 e0       	ldi	r24, 0x00	; 0
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	aa e7       	ldi	r26, 0x7A	; 122
    274a:	b3 e4       	ldi	r27, 0x43	; 67
    274c:	80 83       	st	Z, r24
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	a2 83       	std	Z+2, r26	; 0x02
    2752:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2754:	8e 01       	movw	r16, r28
    2756:	0f 55       	subi	r16, 0x5F	; 95
    2758:	1f 4f       	sbci	r17, 0xFF	; 255
    275a:	fe 01       	movw	r30, r28
    275c:	eb 55       	subi	r30, 0x5B	; 91
    275e:	ff 4f       	sbci	r31, 0xFF	; 255
    2760:	60 81       	ld	r22, Z
    2762:	71 81       	ldd	r23, Z+1	; 0x01
    2764:	82 81       	ldd	r24, Z+2	; 0x02
    2766:	93 81       	ldd	r25, Z+3	; 0x03
    2768:	20 e0       	ldi	r18, 0x00	; 0
    276a:	30 e0       	ldi	r19, 0x00	; 0
    276c:	4a ef       	ldi	r20, 0xFA	; 250
    276e:	54 e4       	ldi	r21, 0x44	; 68
    2770:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2774:	dc 01       	movw	r26, r24
    2776:	cb 01       	movw	r24, r22
    2778:	f8 01       	movw	r30, r16
    277a:	80 83       	st	Z, r24
    277c:	91 83       	std	Z+1, r25	; 0x01
    277e:	a2 83       	std	Z+2, r26	; 0x02
    2780:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2782:	fe 01       	movw	r30, r28
    2784:	ef 55       	subi	r30, 0x5F	; 95
    2786:	ff 4f       	sbci	r31, 0xFF	; 255
    2788:	60 81       	ld	r22, Z
    278a:	71 81       	ldd	r23, Z+1	; 0x01
    278c:	82 81       	ldd	r24, Z+2	; 0x02
    278e:	93 81       	ldd	r25, Z+3	; 0x03
    2790:	20 e0       	ldi	r18, 0x00	; 0
    2792:	30 e0       	ldi	r19, 0x00	; 0
    2794:	40 e8       	ldi	r20, 0x80	; 128
    2796:	5f e3       	ldi	r21, 0x3F	; 63
    2798:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    279c:	88 23       	and	r24, r24
    279e:	44 f4       	brge	.+16     	; 0x27b0 <main+0xd6e>
		__ticks = 1;
    27a0:	fe 01       	movw	r30, r28
    27a2:	e1 56       	subi	r30, 0x61	; 97
    27a4:	ff 4f       	sbci	r31, 0xFF	; 255
    27a6:	81 e0       	ldi	r24, 0x01	; 1
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	91 83       	std	Z+1, r25	; 0x01
    27ac:	80 83       	st	Z, r24
    27ae:	64 c0       	rjmp	.+200    	; 0x2878 <main+0xe36>
	else if (__tmp > 65535)
    27b0:	fe 01       	movw	r30, r28
    27b2:	ef 55       	subi	r30, 0x5F	; 95
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	60 81       	ld	r22, Z
    27b8:	71 81       	ldd	r23, Z+1	; 0x01
    27ba:	82 81       	ldd	r24, Z+2	; 0x02
    27bc:	93 81       	ldd	r25, Z+3	; 0x03
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	3f ef       	ldi	r19, 0xFF	; 255
    27c2:	4f e7       	ldi	r20, 0x7F	; 127
    27c4:	57 e4       	ldi	r21, 0x47	; 71
    27c6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    27ca:	18 16       	cp	r1, r24
    27cc:	0c f0       	brlt	.+2      	; 0x27d0 <main+0xd8e>
    27ce:	43 c0       	rjmp	.+134    	; 0x2856 <main+0xe14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27d0:	fe 01       	movw	r30, r28
    27d2:	eb 55       	subi	r30, 0x5B	; 91
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	60 81       	ld	r22, Z
    27d8:	71 81       	ldd	r23, Z+1	; 0x01
    27da:	82 81       	ldd	r24, Z+2	; 0x02
    27dc:	93 81       	ldd	r25, Z+3	; 0x03
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	30 e0       	ldi	r19, 0x00	; 0
    27e2:	40 e2       	ldi	r20, 0x20	; 32
    27e4:	51 e4       	ldi	r21, 0x41	; 65
    27e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	8e 01       	movw	r16, r28
    27f0:	01 56       	subi	r16, 0x61	; 97
    27f2:	1f 4f       	sbci	r17, 0xFF	; 255
    27f4:	bc 01       	movw	r22, r24
    27f6:	cd 01       	movw	r24, r26
    27f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27fc:	dc 01       	movw	r26, r24
    27fe:	cb 01       	movw	r24, r22
    2800:	f8 01       	movw	r30, r16
    2802:	91 83       	std	Z+1, r25	; 0x01
    2804:	80 83       	st	Z, r24
    2806:	1f c0       	rjmp	.+62     	; 0x2846 <main+0xe04>
    2808:	fe 01       	movw	r30, r28
    280a:	e3 56       	subi	r30, 0x63	; 99
    280c:	ff 4f       	sbci	r31, 0xFF	; 255
    280e:	88 ec       	ldi	r24, 0xC8	; 200
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	91 83       	std	Z+1, r25	; 0x01
    2814:	80 83       	st	Z, r24
    2816:	fe 01       	movw	r30, r28
    2818:	e3 56       	subi	r30, 0x63	; 99
    281a:	ff 4f       	sbci	r31, 0xFF	; 255
    281c:	80 81       	ld	r24, Z
    281e:	91 81       	ldd	r25, Z+1	; 0x01
    2820:	01 97       	sbiw	r24, 0x01	; 1
    2822:	f1 f7       	brne	.-4      	; 0x2820 <main+0xdde>
    2824:	fe 01       	movw	r30, r28
    2826:	e3 56       	subi	r30, 0x63	; 99
    2828:	ff 4f       	sbci	r31, 0xFF	; 255
    282a:	91 83       	std	Z+1, r25	; 0x01
    282c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    282e:	de 01       	movw	r26, r28
    2830:	a1 56       	subi	r26, 0x61	; 97
    2832:	bf 4f       	sbci	r27, 0xFF	; 255
    2834:	fe 01       	movw	r30, r28
    2836:	e1 56       	subi	r30, 0x61	; 97
    2838:	ff 4f       	sbci	r31, 0xFF	; 255
    283a:	80 81       	ld	r24, Z
    283c:	91 81       	ldd	r25, Z+1	; 0x01
    283e:	01 97       	sbiw	r24, 0x01	; 1
    2840:	11 96       	adiw	r26, 0x01	; 1
    2842:	9c 93       	st	X, r25
    2844:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2846:	fe 01       	movw	r30, r28
    2848:	e1 56       	subi	r30, 0x61	; 97
    284a:	ff 4f       	sbci	r31, 0xFF	; 255
    284c:	80 81       	ld	r24, Z
    284e:	91 81       	ldd	r25, Z+1	; 0x01
    2850:	00 97       	sbiw	r24, 0x00	; 0
    2852:	d1 f6       	brne	.-76     	; 0x2808 <main+0xdc6>
    2854:	27 c0       	rjmp	.+78     	; 0x28a4 <main+0xe62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2856:	8e 01       	movw	r16, r28
    2858:	01 56       	subi	r16, 0x61	; 97
    285a:	1f 4f       	sbci	r17, 0xFF	; 255
    285c:	fe 01       	movw	r30, r28
    285e:	ef 55       	subi	r30, 0x5F	; 95
    2860:	ff 4f       	sbci	r31, 0xFF	; 255
    2862:	60 81       	ld	r22, Z
    2864:	71 81       	ldd	r23, Z+1	; 0x01
    2866:	82 81       	ldd	r24, Z+2	; 0x02
    2868:	93 81       	ldd	r25, Z+3	; 0x03
    286a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    286e:	dc 01       	movw	r26, r24
    2870:	cb 01       	movw	r24, r22
    2872:	f8 01       	movw	r30, r16
    2874:	91 83       	std	Z+1, r25	; 0x01
    2876:	80 83       	st	Z, r24
    2878:	de 01       	movw	r26, r28
    287a:	a5 56       	subi	r26, 0x65	; 101
    287c:	bf 4f       	sbci	r27, 0xFF	; 255
    287e:	fe 01       	movw	r30, r28
    2880:	e1 56       	subi	r30, 0x61	; 97
    2882:	ff 4f       	sbci	r31, 0xFF	; 255
    2884:	80 81       	ld	r24, Z
    2886:	91 81       	ldd	r25, Z+1	; 0x01
    2888:	8d 93       	st	X+, r24
    288a:	9c 93       	st	X, r25
    288c:	fe 01       	movw	r30, r28
    288e:	e5 56       	subi	r30, 0x65	; 101
    2890:	ff 4f       	sbci	r31, 0xFF	; 255
    2892:	80 81       	ld	r24, Z
    2894:	91 81       	ldd	r25, Z+1	; 0x01
    2896:	01 97       	sbiw	r24, 0x01	; 1
    2898:	f1 f7       	brne	.-4      	; 0x2896 <main+0xe54>
    289a:	fe 01       	movw	r30, r28
    289c:	e5 56       	subi	r30, 0x65	; 101
    289e:	ff 4f       	sbci	r31, 0xFF	; 255
    28a0:	91 83       	std	Z+1, r25	; 0x01
    28a2:	80 83       	st	Z, r24
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    28a4:	88 e0       	ldi	r24, 0x08	; 8
    28a6:	61 e0       	ldi	r22, 0x01	; 1
    28a8:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("     ");
    28ac:	82 e7       	ldi	r24, 0x72	; 114
    28ae:	90 e0       	ldi	r25, 0x00	; 0
    28b0:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    28b4:	fe 01       	movw	r30, r28
    28b6:	e9 56       	subi	r30, 0x69	; 105
    28b8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	aa e7       	ldi	r26, 0x7A	; 122
    28c0:	b3 e4       	ldi	r27, 0x43	; 67
    28c2:	80 83       	st	Z, r24
    28c4:	91 83       	std	Z+1, r25	; 0x01
    28c6:	a2 83       	std	Z+2, r26	; 0x02
    28c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28ca:	8e 01       	movw	r16, r28
    28cc:	0d 56       	subi	r16, 0x6D	; 109
    28ce:	1f 4f       	sbci	r17, 0xFF	; 255
    28d0:	fe 01       	movw	r30, r28
    28d2:	e9 56       	subi	r30, 0x69	; 105
    28d4:	ff 4f       	sbci	r31, 0xFF	; 255
    28d6:	60 81       	ld	r22, Z
    28d8:	71 81       	ldd	r23, Z+1	; 0x01
    28da:	82 81       	ldd	r24, Z+2	; 0x02
    28dc:	93 81       	ldd	r25, Z+3	; 0x03
    28de:	20 e0       	ldi	r18, 0x00	; 0
    28e0:	30 e0       	ldi	r19, 0x00	; 0
    28e2:	4a ef       	ldi	r20, 0xFA	; 250
    28e4:	54 e4       	ldi	r21, 0x44	; 68
    28e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28ea:	dc 01       	movw	r26, r24
    28ec:	cb 01       	movw	r24, r22
    28ee:	f8 01       	movw	r30, r16
    28f0:	80 83       	st	Z, r24
    28f2:	91 83       	std	Z+1, r25	; 0x01
    28f4:	a2 83       	std	Z+2, r26	; 0x02
    28f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28f8:	fe 01       	movw	r30, r28
    28fa:	ed 56       	subi	r30, 0x6D	; 109
    28fc:	ff 4f       	sbci	r31, 0xFF	; 255
    28fe:	60 81       	ld	r22, Z
    2900:	71 81       	ldd	r23, Z+1	; 0x01
    2902:	82 81       	ldd	r24, Z+2	; 0x02
    2904:	93 81       	ldd	r25, Z+3	; 0x03
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	40 e8       	ldi	r20, 0x80	; 128
    290c:	5f e3       	ldi	r21, 0x3F	; 63
    290e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2912:	88 23       	and	r24, r24
    2914:	44 f4       	brge	.+16     	; 0x2926 <main+0xee4>
		__ticks = 1;
    2916:	fe 01       	movw	r30, r28
    2918:	ef 56       	subi	r30, 0x6F	; 111
    291a:	ff 4f       	sbci	r31, 0xFF	; 255
    291c:	81 e0       	ldi	r24, 0x01	; 1
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	91 83       	std	Z+1, r25	; 0x01
    2922:	80 83       	st	Z, r24
    2924:	64 c0       	rjmp	.+200    	; 0x29ee <main+0xfac>
	else if (__tmp > 65535)
    2926:	fe 01       	movw	r30, r28
    2928:	ed 56       	subi	r30, 0x6D	; 109
    292a:	ff 4f       	sbci	r31, 0xFF	; 255
    292c:	60 81       	ld	r22, Z
    292e:	71 81       	ldd	r23, Z+1	; 0x01
    2930:	82 81       	ldd	r24, Z+2	; 0x02
    2932:	93 81       	ldd	r25, Z+3	; 0x03
    2934:	20 e0       	ldi	r18, 0x00	; 0
    2936:	3f ef       	ldi	r19, 0xFF	; 255
    2938:	4f e7       	ldi	r20, 0x7F	; 127
    293a:	57 e4       	ldi	r21, 0x47	; 71
    293c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2940:	18 16       	cp	r1, r24
    2942:	0c f0       	brlt	.+2      	; 0x2946 <main+0xf04>
    2944:	43 c0       	rjmp	.+134    	; 0x29cc <main+0xf8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2946:	fe 01       	movw	r30, r28
    2948:	e9 56       	subi	r30, 0x69	; 105
    294a:	ff 4f       	sbci	r31, 0xFF	; 255
    294c:	60 81       	ld	r22, Z
    294e:	71 81       	ldd	r23, Z+1	; 0x01
    2950:	82 81       	ldd	r24, Z+2	; 0x02
    2952:	93 81       	ldd	r25, Z+3	; 0x03
    2954:	20 e0       	ldi	r18, 0x00	; 0
    2956:	30 e0       	ldi	r19, 0x00	; 0
    2958:	40 e2       	ldi	r20, 0x20	; 32
    295a:	51 e4       	ldi	r21, 0x41	; 65
    295c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2960:	dc 01       	movw	r26, r24
    2962:	cb 01       	movw	r24, r22
    2964:	8e 01       	movw	r16, r28
    2966:	0f 56       	subi	r16, 0x6F	; 111
    2968:	1f 4f       	sbci	r17, 0xFF	; 255
    296a:	bc 01       	movw	r22, r24
    296c:	cd 01       	movw	r24, r26
    296e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	f8 01       	movw	r30, r16
    2978:	91 83       	std	Z+1, r25	; 0x01
    297a:	80 83       	st	Z, r24
    297c:	1f c0       	rjmp	.+62     	; 0x29bc <main+0xf7a>
    297e:	fe 01       	movw	r30, r28
    2980:	e1 57       	subi	r30, 0x71	; 113
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	88 ec       	ldi	r24, 0xC8	; 200
    2986:	90 e0       	ldi	r25, 0x00	; 0
    2988:	91 83       	std	Z+1, r25	; 0x01
    298a:	80 83       	st	Z, r24
    298c:	fe 01       	movw	r30, r28
    298e:	e1 57       	subi	r30, 0x71	; 113
    2990:	ff 4f       	sbci	r31, 0xFF	; 255
    2992:	80 81       	ld	r24, Z
    2994:	91 81       	ldd	r25, Z+1	; 0x01
    2996:	01 97       	sbiw	r24, 0x01	; 1
    2998:	f1 f7       	brne	.-4      	; 0x2996 <main+0xf54>
    299a:	fe 01       	movw	r30, r28
    299c:	e1 57       	subi	r30, 0x71	; 113
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	91 83       	std	Z+1, r25	; 0x01
    29a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29a4:	de 01       	movw	r26, r28
    29a6:	af 56       	subi	r26, 0x6F	; 111
    29a8:	bf 4f       	sbci	r27, 0xFF	; 255
    29aa:	fe 01       	movw	r30, r28
    29ac:	ef 56       	subi	r30, 0x6F	; 111
    29ae:	ff 4f       	sbci	r31, 0xFF	; 255
    29b0:	80 81       	ld	r24, Z
    29b2:	91 81       	ldd	r25, Z+1	; 0x01
    29b4:	01 97       	sbiw	r24, 0x01	; 1
    29b6:	11 96       	adiw	r26, 0x01	; 1
    29b8:	9c 93       	st	X, r25
    29ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29bc:	fe 01       	movw	r30, r28
    29be:	ef 56       	subi	r30, 0x6F	; 111
    29c0:	ff 4f       	sbci	r31, 0xFF	; 255
    29c2:	80 81       	ld	r24, Z
    29c4:	91 81       	ldd	r25, Z+1	; 0x01
    29c6:	00 97       	sbiw	r24, 0x00	; 0
    29c8:	d1 f6       	brne	.-76     	; 0x297e <main+0xf3c>
    29ca:	cc c2       	rjmp	.+1432   	; 0x2f64 <main+0x1522>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29cc:	8e 01       	movw	r16, r28
    29ce:	0f 56       	subi	r16, 0x6F	; 111
    29d0:	1f 4f       	sbci	r17, 0xFF	; 255
    29d2:	fe 01       	movw	r30, r28
    29d4:	ed 56       	subi	r30, 0x6D	; 109
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	60 81       	ld	r22, Z
    29da:	71 81       	ldd	r23, Z+1	; 0x01
    29dc:	82 81       	ldd	r24, Z+2	; 0x02
    29de:	93 81       	ldd	r25, Z+3	; 0x03
    29e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	f8 01       	movw	r30, r16
    29ea:	91 83       	std	Z+1, r25	; 0x01
    29ec:	80 83       	st	Z, r24
    29ee:	de 01       	movw	r26, r28
    29f0:	a3 57       	subi	r26, 0x73	; 115
    29f2:	bf 4f       	sbci	r27, 0xFF	; 255
    29f4:	fe 01       	movw	r30, r28
    29f6:	ef 56       	subi	r30, 0x6F	; 111
    29f8:	ff 4f       	sbci	r31, 0xFF	; 255
    29fa:	80 81       	ld	r24, Z
    29fc:	91 81       	ldd	r25, Z+1	; 0x01
    29fe:	11 96       	adiw	r26, 0x01	; 1
    2a00:	9c 93       	st	X, r25
    2a02:	8e 93       	st	-X, r24
    2a04:	fe 01       	movw	r30, r28
    2a06:	e3 57       	subi	r30, 0x73	; 115
    2a08:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0a:	80 81       	ld	r24, Z
    2a0c:	91 81       	ldd	r25, Z+1	; 0x01
    2a0e:	01 97       	sbiw	r24, 0x01	; 1
    2a10:	f1 f7       	brne	.-4      	; 0x2a0e <main+0xfcc>
    2a12:	fe 01       	movw	r30, r28
    2a14:	e3 57       	subi	r30, 0x73	; 115
    2a16:	ff 4f       	sbci	r31, 0xFF	; 255
    2a18:	91 83       	std	Z+1, r25	; 0x01
    2a1a:	80 83       	st	Z, r24
    2a1c:	a3 c2       	rjmp	.+1350   	; 0x2f64 <main+0x1522>
				_delay_ms(250);break;
				case 1://Local_DDRAMXPos++;
					CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    2a1e:	fe 01       	movw	r30, r28
    2a20:	e0 50       	subi	r30, 0x00	; 0
    2a22:	ff 4f       	sbci	r31, 0xFF	; 255
    2a24:	de 01       	movw	r26, r28
    2a26:	a3 50       	subi	r26, 0x03	; 3
    2a28:	bf 4f       	sbci	r27, 0xFF	; 255
    2a2a:	80 81       	ld	r24, Z
    2a2c:	6c 91       	ld	r22, X
    2a2e:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
					Local_s8Iterator1--;
    2a32:	80 91 aa 00 	lds	r24, 0x00AA
    2a36:	81 50       	subi	r24, 0x01	; 1
    2a38:	80 93 aa 00 	sts	0x00AA, r24

					if(Local_s8Iterator1==-1)
    2a3c:	80 91 aa 00 	lds	r24, 0x00AA
    2a40:	8f 3f       	cpi	r24, 0xFF	; 255
    2a42:	19 f4       	brne	.+6      	; 0x2a4a <main+0x1008>
					{
						Local_s8Iterator1=3;
    2a44:	83 e0       	ldi	r24, 0x03	; 3
    2a46:	80 93 aa 00 	sts	0x00AA, r24

					}
					CLCD_voidSendData(ch_Operation[Local_s8Iterator1]);
    2a4a:	80 91 aa 00 	lds	r24, 0x00AA
    2a4e:	99 27       	eor	r25, r25
    2a50:	87 fd       	sbrc	r24, 7
    2a52:	90 95       	com	r25
    2a54:	fc 01       	movw	r30, r24
    2a56:	e6 56       	subi	r30, 0x66	; 102
    2a58:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5a:	80 81       	ld	r24, Z
    2a5c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>
    2a60:	fe 01       	movw	r30, r28
    2a62:	e7 57       	subi	r30, 0x77	; 119
    2a64:	ff 4f       	sbci	r31, 0xFF	; 255
    2a66:	80 e0       	ldi	r24, 0x00	; 0
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	aa e7       	ldi	r26, 0x7A	; 122
    2a6c:	b3 e4       	ldi	r27, 0x43	; 67
    2a6e:	80 83       	st	Z, r24
    2a70:	91 83       	std	Z+1, r25	; 0x01
    2a72:	a2 83       	std	Z+2, r26	; 0x02
    2a74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a76:	8e 01       	movw	r16, r28
    2a78:	0b 57       	subi	r16, 0x7B	; 123
    2a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a7c:	fe 01       	movw	r30, r28
    2a7e:	e7 57       	subi	r30, 0x77	; 119
    2a80:	ff 4f       	sbci	r31, 0xFF	; 255
    2a82:	60 81       	ld	r22, Z
    2a84:	71 81       	ldd	r23, Z+1	; 0x01
    2a86:	82 81       	ldd	r24, Z+2	; 0x02
    2a88:	93 81       	ldd	r25, Z+3	; 0x03
    2a8a:	20 e0       	ldi	r18, 0x00	; 0
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	4a ef       	ldi	r20, 0xFA	; 250
    2a90:	54 e4       	ldi	r21, 0x44	; 68
    2a92:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a96:	dc 01       	movw	r26, r24
    2a98:	cb 01       	movw	r24, r22
    2a9a:	f8 01       	movw	r30, r16
    2a9c:	80 83       	st	Z, r24
    2a9e:	91 83       	std	Z+1, r25	; 0x01
    2aa0:	a2 83       	std	Z+2, r26	; 0x02
    2aa2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aa4:	fe 01       	movw	r30, r28
    2aa6:	eb 57       	subi	r30, 0x7B	; 123
    2aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aaa:	60 81       	ld	r22, Z
    2aac:	71 81       	ldd	r23, Z+1	; 0x01
    2aae:	82 81       	ldd	r24, Z+2	; 0x02
    2ab0:	93 81       	ldd	r25, Z+3	; 0x03
    2ab2:	20 e0       	ldi	r18, 0x00	; 0
    2ab4:	30 e0       	ldi	r19, 0x00	; 0
    2ab6:	40 e8       	ldi	r20, 0x80	; 128
    2ab8:	5f e3       	ldi	r21, 0x3F	; 63
    2aba:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2abe:	88 23       	and	r24, r24
    2ac0:	44 f4       	brge	.+16     	; 0x2ad2 <main+0x1090>
		__ticks = 1;
    2ac2:	fe 01       	movw	r30, r28
    2ac4:	ed 57       	subi	r30, 0x7D	; 125
    2ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac8:	81 e0       	ldi	r24, 0x01	; 1
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	80 83       	st	Z, r24
    2ad0:	64 c0       	rjmp	.+200    	; 0x2b9a <main+0x1158>
	else if (__tmp > 65535)
    2ad2:	fe 01       	movw	r30, r28
    2ad4:	eb 57       	subi	r30, 0x7B	; 123
    2ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad8:	60 81       	ld	r22, Z
    2ada:	71 81       	ldd	r23, Z+1	; 0x01
    2adc:	82 81       	ldd	r24, Z+2	; 0x02
    2ade:	93 81       	ldd	r25, Z+3	; 0x03
    2ae0:	20 e0       	ldi	r18, 0x00	; 0
    2ae2:	3f ef       	ldi	r19, 0xFF	; 255
    2ae4:	4f e7       	ldi	r20, 0x7F	; 127
    2ae6:	57 e4       	ldi	r21, 0x47	; 71
    2ae8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2aec:	18 16       	cp	r1, r24
    2aee:	0c f0       	brlt	.+2      	; 0x2af2 <main+0x10b0>
    2af0:	43 c0       	rjmp	.+134    	; 0x2b78 <main+0x1136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2af2:	fe 01       	movw	r30, r28
    2af4:	e7 57       	subi	r30, 0x77	; 119
    2af6:	ff 4f       	sbci	r31, 0xFF	; 255
    2af8:	60 81       	ld	r22, Z
    2afa:	71 81       	ldd	r23, Z+1	; 0x01
    2afc:	82 81       	ldd	r24, Z+2	; 0x02
    2afe:	93 81       	ldd	r25, Z+3	; 0x03
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	30 e0       	ldi	r19, 0x00	; 0
    2b04:	40 e2       	ldi	r20, 0x20	; 32
    2b06:	51 e4       	ldi	r21, 0x41	; 65
    2b08:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b0c:	dc 01       	movw	r26, r24
    2b0e:	cb 01       	movw	r24, r22
    2b10:	8e 01       	movw	r16, r28
    2b12:	0d 57       	subi	r16, 0x7D	; 125
    2b14:	1f 4f       	sbci	r17, 0xFF	; 255
    2b16:	bc 01       	movw	r22, r24
    2b18:	cd 01       	movw	r24, r26
    2b1a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b1e:	dc 01       	movw	r26, r24
    2b20:	cb 01       	movw	r24, r22
    2b22:	f8 01       	movw	r30, r16
    2b24:	91 83       	std	Z+1, r25	; 0x01
    2b26:	80 83       	st	Z, r24
    2b28:	1f c0       	rjmp	.+62     	; 0x2b68 <main+0x1126>
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	ef 57       	subi	r30, 0x7F	; 127
    2b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b30:	88 ec       	ldi	r24, 0xC8	; 200
    2b32:	90 e0       	ldi	r25, 0x00	; 0
    2b34:	91 83       	std	Z+1, r25	; 0x01
    2b36:	80 83       	st	Z, r24
    2b38:	fe 01       	movw	r30, r28
    2b3a:	ef 57       	subi	r30, 0x7F	; 127
    2b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3e:	80 81       	ld	r24, Z
    2b40:	91 81       	ldd	r25, Z+1	; 0x01
    2b42:	01 97       	sbiw	r24, 0x01	; 1
    2b44:	f1 f7       	brne	.-4      	; 0x2b42 <main+0x1100>
    2b46:	fe 01       	movw	r30, r28
    2b48:	ef 57       	subi	r30, 0x7F	; 127
    2b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4c:	91 83       	std	Z+1, r25	; 0x01
    2b4e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b50:	de 01       	movw	r26, r28
    2b52:	ad 57       	subi	r26, 0x7D	; 125
    2b54:	bf 4f       	sbci	r27, 0xFF	; 255
    2b56:	fe 01       	movw	r30, r28
    2b58:	ed 57       	subi	r30, 0x7D	; 125
    2b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b5c:	80 81       	ld	r24, Z
    2b5e:	91 81       	ldd	r25, Z+1	; 0x01
    2b60:	01 97       	sbiw	r24, 0x01	; 1
    2b62:	11 96       	adiw	r26, 0x01	; 1
    2b64:	9c 93       	st	X, r25
    2b66:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b68:	fe 01       	movw	r30, r28
    2b6a:	ed 57       	subi	r30, 0x7D	; 125
    2b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6e:	80 81       	ld	r24, Z
    2b70:	91 81       	ldd	r25, Z+1	; 0x01
    2b72:	00 97       	sbiw	r24, 0x00	; 0
    2b74:	d1 f6       	brne	.-76     	; 0x2b2a <main+0x10e8>
    2b76:	f6 c1       	rjmp	.+1004   	; 0x2f64 <main+0x1522>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b78:	8e 01       	movw	r16, r28
    2b7a:	0d 57       	subi	r16, 0x7D	; 125
    2b7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b7e:	fe 01       	movw	r30, r28
    2b80:	eb 57       	subi	r30, 0x7B	; 123
    2b82:	ff 4f       	sbci	r31, 0xFF	; 255
    2b84:	60 81       	ld	r22, Z
    2b86:	71 81       	ldd	r23, Z+1	; 0x01
    2b88:	82 81       	ldd	r24, Z+2	; 0x02
    2b8a:	93 81       	ldd	r25, Z+3	; 0x03
    2b8c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b90:	dc 01       	movw	r26, r24
    2b92:	cb 01       	movw	r24, r22
    2b94:	f8 01       	movw	r30, r16
    2b96:	91 83       	std	Z+1, r25	; 0x01
    2b98:	80 83       	st	Z, r24
    2b9a:	de 01       	movw	r26, r28
    2b9c:	a1 58       	subi	r26, 0x81	; 129
    2b9e:	bf 4f       	sbci	r27, 0xFF	; 255
    2ba0:	fe 01       	movw	r30, r28
    2ba2:	ed 57       	subi	r30, 0x7D	; 125
    2ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba6:	80 81       	ld	r24, Z
    2ba8:	91 81       	ldd	r25, Z+1	; 0x01
    2baa:	11 96       	adiw	r26, 0x01	; 1
    2bac:	9c 93       	st	X, r25
    2bae:	8e 93       	st	-X, r24
    2bb0:	fe 01       	movw	r30, r28
    2bb2:	e1 58       	subi	r30, 0x81	; 129
    2bb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb6:	80 81       	ld	r24, Z
    2bb8:	91 81       	ldd	r25, Z+1	; 0x01
    2bba:	01 97       	sbiw	r24, 0x01	; 1
    2bbc:	f1 f7       	brne	.-4      	; 0x2bba <main+0x1178>
    2bbe:	fe 01       	movw	r30, r28
    2bc0:	e1 58       	subi	r30, 0x81	; 129
    2bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc4:	91 83       	std	Z+1, r25	; 0x01
    2bc6:	80 83       	st	Z, r24
    2bc8:	cd c1       	rjmp	.+922    	; 0x2f64 <main+0x1522>
					_delay_ms(250);break;


				case 2:CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    2bca:	fe 01       	movw	r30, r28
    2bcc:	e0 50       	subi	r30, 0x00	; 0
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	de 01       	movw	r26, r28
    2bd2:	a3 50       	subi	r26, 0x03	; 3
    2bd4:	bf 4f       	sbci	r27, 0xFF	; 255
    2bd6:	80 81       	ld	r24, Z
    2bd8:	6c 91       	ld	r22, X
    2bda:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>

				Local_s32Num2--;
    2bde:	80 91 96 00 	lds	r24, 0x0096
    2be2:	90 91 97 00 	lds	r25, 0x0097
    2be6:	a0 91 98 00 	lds	r26, 0x0098
    2bea:	b0 91 99 00 	lds	r27, 0x0099
    2bee:	01 97       	sbiw	r24, 0x01	; 1
    2bf0:	a1 09       	sbc	r26, r1
    2bf2:	b1 09       	sbc	r27, r1
    2bf4:	80 93 96 00 	sts	0x0096, r24
    2bf8:	90 93 97 00 	sts	0x0097, r25
    2bfc:	a0 93 98 00 	sts	0x0098, r26
    2c00:	b0 93 99 00 	sts	0x0099, r27
				if(Local_s32Num2==-1)
    2c04:	80 91 96 00 	lds	r24, 0x0096
    2c08:	90 91 97 00 	lds	r25, 0x0097
    2c0c:	a0 91 98 00 	lds	r26, 0x0098
    2c10:	b0 91 99 00 	lds	r27, 0x0099
    2c14:	8f 3f       	cpi	r24, 0xFF	; 255
    2c16:	ff ef       	ldi	r31, 0xFF	; 255
    2c18:	9f 07       	cpc	r25, r31
    2c1a:	ff ef       	ldi	r31, 0xFF	; 255
    2c1c:	af 07       	cpc	r26, r31
    2c1e:	ff ef       	ldi	r31, 0xFF	; 255
    2c20:	bf 07       	cpc	r27, r31
    2c22:	61 f4       	brne	.+24     	; 0x2c3c <main+0x11fa>
				{
					Local_s32Num2=9;
    2c24:	89 e0       	ldi	r24, 0x09	; 9
    2c26:	90 e0       	ldi	r25, 0x00	; 0
    2c28:	a0 e0       	ldi	r26, 0x00	; 0
    2c2a:	b0 e0       	ldi	r27, 0x00	; 0
    2c2c:	80 93 96 00 	sts	0x0096, r24
    2c30:	90 93 97 00 	sts	0x0097, r25
    2c34:	a0 93 98 00 	sts	0x0098, r26
    2c38:	b0 93 99 00 	sts	0x0099, r27
				}
				CLCD_voidSendNumber(Local_s32Num2);
    2c3c:	80 91 96 00 	lds	r24, 0x0096
    2c40:	90 91 97 00 	lds	r25, 0x0097
    2c44:	a0 91 98 00 	lds	r26, 0x0098
    2c48:	b0 91 99 00 	lds	r27, 0x0099
    2c4c:	bc 01       	movw	r22, r24
    2c4e:	cd 01       	movw	r24, r26
    2c50:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
				if((Local_s8Iterator1==3)&&(Local_s32Num2==0))
    2c54:	80 91 aa 00 	lds	r24, 0x00AA
    2c58:	83 30       	cpi	r24, 0x03	; 3
    2c5a:	69 f4       	brne	.+26     	; 0x2c76 <main+0x1234>
    2c5c:	80 91 96 00 	lds	r24, 0x0096
    2c60:	90 91 97 00 	lds	r25, 0x0097
    2c64:	a0 91 98 00 	lds	r26, 0x0098
    2c68:	b0 91 99 00 	lds	r27, 0x0099
    2c6c:	00 97       	sbiw	r24, 0x00	; 0
    2c6e:	a1 05       	cpc	r26, r1
    2c70:	b1 05       	cpc	r27, r1
    2c72:	09 f4       	brne	.+2      	; 0x2c76 <main+0x1234>
    2c74:	57 c6       	rjmp	.+3246   	; 0x3924 <main+0x1ee2>
					continue;
				CLCD_voidGoToXY (8u,1u);
    2c76:	88 e0       	ldi	r24, 0x08	; 8
    2c78:	61 e0       	ldi	r22, 0x01	; 1
    2c7a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("DOWN");
    2c7e:	8d e6       	ldi	r24, 0x6D	; 109
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    2c86:	fe 01       	movw	r30, r28
    2c88:	e5 58       	subi	r30, 0x85	; 133
    2c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8c:	80 e0       	ldi	r24, 0x00	; 0
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	aa e7       	ldi	r26, 0x7A	; 122
    2c92:	b3 e4       	ldi	r27, 0x43	; 67
    2c94:	80 83       	st	Z, r24
    2c96:	91 83       	std	Z+1, r25	; 0x01
    2c98:	a2 83       	std	Z+2, r26	; 0x02
    2c9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c9c:	8e 01       	movw	r16, r28
    2c9e:	09 58       	subi	r16, 0x89	; 137
    2ca0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e5 58       	subi	r30, 0x85	; 133
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	60 81       	ld	r22, Z
    2caa:	71 81       	ldd	r23, Z+1	; 0x01
    2cac:	82 81       	ldd	r24, Z+2	; 0x02
    2cae:	93 81       	ldd	r25, Z+3	; 0x03
    2cb0:	20 e0       	ldi	r18, 0x00	; 0
    2cb2:	30 e0       	ldi	r19, 0x00	; 0
    2cb4:	4a ef       	ldi	r20, 0xFA	; 250
    2cb6:	54 e4       	ldi	r21, 0x44	; 68
    2cb8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cbc:	dc 01       	movw	r26, r24
    2cbe:	cb 01       	movw	r24, r22
    2cc0:	f8 01       	movw	r30, r16
    2cc2:	80 83       	st	Z, r24
    2cc4:	91 83       	std	Z+1, r25	; 0x01
    2cc6:	a2 83       	std	Z+2, r26	; 0x02
    2cc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e9 58       	subi	r30, 0x89	; 137
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	20 e0       	ldi	r18, 0x00	; 0
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	40 e8       	ldi	r20, 0x80	; 128
    2cde:	5f e3       	ldi	r21, 0x3F	; 63
    2ce0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2ce4:	88 23       	and	r24, r24
    2ce6:	44 f4       	brge	.+16     	; 0x2cf8 <main+0x12b6>
		__ticks = 1;
    2ce8:	fe 01       	movw	r30, r28
    2cea:	eb 58       	subi	r30, 0x8B	; 139
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	91 83       	std	Z+1, r25	; 0x01
    2cf4:	80 83       	st	Z, r24
    2cf6:	64 c0       	rjmp	.+200    	; 0x2dc0 <main+0x137e>
	else if (__tmp > 65535)
    2cf8:	fe 01       	movw	r30, r28
    2cfa:	e9 58       	subi	r30, 0x89	; 137
    2cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfe:	60 81       	ld	r22, Z
    2d00:	71 81       	ldd	r23, Z+1	; 0x01
    2d02:	82 81       	ldd	r24, Z+2	; 0x02
    2d04:	93 81       	ldd	r25, Z+3	; 0x03
    2d06:	20 e0       	ldi	r18, 0x00	; 0
    2d08:	3f ef       	ldi	r19, 0xFF	; 255
    2d0a:	4f e7       	ldi	r20, 0x7F	; 127
    2d0c:	57 e4       	ldi	r21, 0x47	; 71
    2d0e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d12:	18 16       	cp	r1, r24
    2d14:	0c f0       	brlt	.+2      	; 0x2d18 <main+0x12d6>
    2d16:	43 c0       	rjmp	.+134    	; 0x2d9e <main+0x135c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d18:	fe 01       	movw	r30, r28
    2d1a:	e5 58       	subi	r30, 0x85	; 133
    2d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1e:	60 81       	ld	r22, Z
    2d20:	71 81       	ldd	r23, Z+1	; 0x01
    2d22:	82 81       	ldd	r24, Z+2	; 0x02
    2d24:	93 81       	ldd	r25, Z+3	; 0x03
    2d26:	20 e0       	ldi	r18, 0x00	; 0
    2d28:	30 e0       	ldi	r19, 0x00	; 0
    2d2a:	40 e2       	ldi	r20, 0x20	; 32
    2d2c:	51 e4       	ldi	r21, 0x41	; 65
    2d2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d32:	dc 01       	movw	r26, r24
    2d34:	cb 01       	movw	r24, r22
    2d36:	8e 01       	movw	r16, r28
    2d38:	0b 58       	subi	r16, 0x8B	; 139
    2d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d3c:	bc 01       	movw	r22, r24
    2d3e:	cd 01       	movw	r24, r26
    2d40:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d44:	dc 01       	movw	r26, r24
    2d46:	cb 01       	movw	r24, r22
    2d48:	f8 01       	movw	r30, r16
    2d4a:	91 83       	std	Z+1, r25	; 0x01
    2d4c:	80 83       	st	Z, r24
    2d4e:	1f c0       	rjmp	.+62     	; 0x2d8e <main+0x134c>
    2d50:	fe 01       	movw	r30, r28
    2d52:	ed 58       	subi	r30, 0x8D	; 141
    2d54:	ff 4f       	sbci	r31, 0xFF	; 255
    2d56:	88 ec       	ldi	r24, 0xC8	; 200
    2d58:	90 e0       	ldi	r25, 0x00	; 0
    2d5a:	91 83       	std	Z+1, r25	; 0x01
    2d5c:	80 83       	st	Z, r24
    2d5e:	fe 01       	movw	r30, r28
    2d60:	ed 58       	subi	r30, 0x8D	; 141
    2d62:	ff 4f       	sbci	r31, 0xFF	; 255
    2d64:	80 81       	ld	r24, Z
    2d66:	91 81       	ldd	r25, Z+1	; 0x01
    2d68:	01 97       	sbiw	r24, 0x01	; 1
    2d6a:	f1 f7       	brne	.-4      	; 0x2d68 <main+0x1326>
    2d6c:	fe 01       	movw	r30, r28
    2d6e:	ed 58       	subi	r30, 0x8D	; 141
    2d70:	ff 4f       	sbci	r31, 0xFF	; 255
    2d72:	91 83       	std	Z+1, r25	; 0x01
    2d74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d76:	de 01       	movw	r26, r28
    2d78:	ab 58       	subi	r26, 0x8B	; 139
    2d7a:	bf 4f       	sbci	r27, 0xFF	; 255
    2d7c:	fe 01       	movw	r30, r28
    2d7e:	eb 58       	subi	r30, 0x8B	; 139
    2d80:	ff 4f       	sbci	r31, 0xFF	; 255
    2d82:	80 81       	ld	r24, Z
    2d84:	91 81       	ldd	r25, Z+1	; 0x01
    2d86:	01 97       	sbiw	r24, 0x01	; 1
    2d88:	11 96       	adiw	r26, 0x01	; 1
    2d8a:	9c 93       	st	X, r25
    2d8c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d8e:	fe 01       	movw	r30, r28
    2d90:	eb 58       	subi	r30, 0x8B	; 139
    2d92:	ff 4f       	sbci	r31, 0xFF	; 255
    2d94:	80 81       	ld	r24, Z
    2d96:	91 81       	ldd	r25, Z+1	; 0x01
    2d98:	00 97       	sbiw	r24, 0x00	; 0
    2d9a:	d1 f6       	brne	.-76     	; 0x2d50 <main+0x130e>
    2d9c:	27 c0       	rjmp	.+78     	; 0x2dec <main+0x13aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d9e:	8e 01       	movw	r16, r28
    2da0:	0b 58       	subi	r16, 0x8B	; 139
    2da2:	1f 4f       	sbci	r17, 0xFF	; 255
    2da4:	fe 01       	movw	r30, r28
    2da6:	e9 58       	subi	r30, 0x89	; 137
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	60 81       	ld	r22, Z
    2dac:	71 81       	ldd	r23, Z+1	; 0x01
    2dae:	82 81       	ldd	r24, Z+2	; 0x02
    2db0:	93 81       	ldd	r25, Z+3	; 0x03
    2db2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2db6:	dc 01       	movw	r26, r24
    2db8:	cb 01       	movw	r24, r22
    2dba:	f8 01       	movw	r30, r16
    2dbc:	91 83       	std	Z+1, r25	; 0x01
    2dbe:	80 83       	st	Z, r24
    2dc0:	de 01       	movw	r26, r28
    2dc2:	af 58       	subi	r26, 0x8F	; 143
    2dc4:	bf 4f       	sbci	r27, 0xFF	; 255
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	eb 58       	subi	r30, 0x8B	; 139
    2dca:	ff 4f       	sbci	r31, 0xFF	; 255
    2dcc:	80 81       	ld	r24, Z
    2dce:	91 81       	ldd	r25, Z+1	; 0x01
    2dd0:	8d 93       	st	X+, r24
    2dd2:	9c 93       	st	X, r25
    2dd4:	fe 01       	movw	r30, r28
    2dd6:	ef 58       	subi	r30, 0x8F	; 143
    2dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dda:	80 81       	ld	r24, Z
    2ddc:	91 81       	ldd	r25, Z+1	; 0x01
    2dde:	01 97       	sbiw	r24, 0x01	; 1
    2de0:	f1 f7       	brne	.-4      	; 0x2dde <main+0x139c>
    2de2:	fe 01       	movw	r30, r28
    2de4:	ef 58       	subi	r30, 0x8F	; 143
    2de6:	ff 4f       	sbci	r31, 0xFF	; 255
    2de8:	91 83       	std	Z+1, r25	; 0x01
    2dea:	80 83       	st	Z, r24
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    2dec:	88 e0       	ldi	r24, 0x08	; 8
    2dee:	61 e0       	ldi	r22, 0x01	; 1
    2df0:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("     ");
    2df4:	82 e7       	ldi	r24, 0x72	; 114
    2df6:	90 e0       	ldi	r25, 0x00	; 0
    2df8:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    2dfc:	fe 01       	movw	r30, r28
    2dfe:	e3 59       	subi	r30, 0x93	; 147
    2e00:	ff 4f       	sbci	r31, 0xFF	; 255
    2e02:	80 e0       	ldi	r24, 0x00	; 0
    2e04:	90 e0       	ldi	r25, 0x00	; 0
    2e06:	aa e7       	ldi	r26, 0x7A	; 122
    2e08:	b3 e4       	ldi	r27, 0x43	; 67
    2e0a:	80 83       	st	Z, r24
    2e0c:	91 83       	std	Z+1, r25	; 0x01
    2e0e:	a2 83       	std	Z+2, r26	; 0x02
    2e10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e12:	8e 01       	movw	r16, r28
    2e14:	07 59       	subi	r16, 0x97	; 151
    2e16:	1f 4f       	sbci	r17, 0xFF	; 255
    2e18:	fe 01       	movw	r30, r28
    2e1a:	e3 59       	subi	r30, 0x93	; 147
    2e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e1e:	60 81       	ld	r22, Z
    2e20:	71 81       	ldd	r23, Z+1	; 0x01
    2e22:	82 81       	ldd	r24, Z+2	; 0x02
    2e24:	93 81       	ldd	r25, Z+3	; 0x03
    2e26:	20 e0       	ldi	r18, 0x00	; 0
    2e28:	30 e0       	ldi	r19, 0x00	; 0
    2e2a:	4a ef       	ldi	r20, 0xFA	; 250
    2e2c:	54 e4       	ldi	r21, 0x44	; 68
    2e2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e32:	dc 01       	movw	r26, r24
    2e34:	cb 01       	movw	r24, r22
    2e36:	f8 01       	movw	r30, r16
    2e38:	80 83       	st	Z, r24
    2e3a:	91 83       	std	Z+1, r25	; 0x01
    2e3c:	a2 83       	std	Z+2, r26	; 0x02
    2e3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e40:	fe 01       	movw	r30, r28
    2e42:	e7 59       	subi	r30, 0x97	; 151
    2e44:	ff 4f       	sbci	r31, 0xFF	; 255
    2e46:	60 81       	ld	r22, Z
    2e48:	71 81       	ldd	r23, Z+1	; 0x01
    2e4a:	82 81       	ldd	r24, Z+2	; 0x02
    2e4c:	93 81       	ldd	r25, Z+3	; 0x03
    2e4e:	20 e0       	ldi	r18, 0x00	; 0
    2e50:	30 e0       	ldi	r19, 0x00	; 0
    2e52:	40 e8       	ldi	r20, 0x80	; 128
    2e54:	5f e3       	ldi	r21, 0x3F	; 63
    2e56:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2e5a:	88 23       	and	r24, r24
    2e5c:	44 f4       	brge	.+16     	; 0x2e6e <main+0x142c>
		__ticks = 1;
    2e5e:	fe 01       	movw	r30, r28
    2e60:	e9 59       	subi	r30, 0x99	; 153
    2e62:	ff 4f       	sbci	r31, 0xFF	; 255
    2e64:	81 e0       	ldi	r24, 0x01	; 1
    2e66:	90 e0       	ldi	r25, 0x00	; 0
    2e68:	91 83       	std	Z+1, r25	; 0x01
    2e6a:	80 83       	st	Z, r24
    2e6c:	64 c0       	rjmp	.+200    	; 0x2f36 <main+0x14f4>
	else if (__tmp > 65535)
    2e6e:	fe 01       	movw	r30, r28
    2e70:	e7 59       	subi	r30, 0x97	; 151
    2e72:	ff 4f       	sbci	r31, 0xFF	; 255
    2e74:	60 81       	ld	r22, Z
    2e76:	71 81       	ldd	r23, Z+1	; 0x01
    2e78:	82 81       	ldd	r24, Z+2	; 0x02
    2e7a:	93 81       	ldd	r25, Z+3	; 0x03
    2e7c:	20 e0       	ldi	r18, 0x00	; 0
    2e7e:	3f ef       	ldi	r19, 0xFF	; 255
    2e80:	4f e7       	ldi	r20, 0x7F	; 127
    2e82:	57 e4       	ldi	r21, 0x47	; 71
    2e84:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2e88:	18 16       	cp	r1, r24
    2e8a:	0c f0       	brlt	.+2      	; 0x2e8e <main+0x144c>
    2e8c:	43 c0       	rjmp	.+134    	; 0x2f14 <main+0x14d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e8e:	fe 01       	movw	r30, r28
    2e90:	e3 59       	subi	r30, 0x93	; 147
    2e92:	ff 4f       	sbci	r31, 0xFF	; 255
    2e94:	60 81       	ld	r22, Z
    2e96:	71 81       	ldd	r23, Z+1	; 0x01
    2e98:	82 81       	ldd	r24, Z+2	; 0x02
    2e9a:	93 81       	ldd	r25, Z+3	; 0x03
    2e9c:	20 e0       	ldi	r18, 0x00	; 0
    2e9e:	30 e0       	ldi	r19, 0x00	; 0
    2ea0:	40 e2       	ldi	r20, 0x20	; 32
    2ea2:	51 e4       	ldi	r21, 0x41	; 65
    2ea4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ea8:	dc 01       	movw	r26, r24
    2eaa:	cb 01       	movw	r24, r22
    2eac:	8e 01       	movw	r16, r28
    2eae:	09 59       	subi	r16, 0x99	; 153
    2eb0:	1f 4f       	sbci	r17, 0xFF	; 255
    2eb2:	bc 01       	movw	r22, r24
    2eb4:	cd 01       	movw	r24, r26
    2eb6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2eba:	dc 01       	movw	r26, r24
    2ebc:	cb 01       	movw	r24, r22
    2ebe:	f8 01       	movw	r30, r16
    2ec0:	91 83       	std	Z+1, r25	; 0x01
    2ec2:	80 83       	st	Z, r24
    2ec4:	1f c0       	rjmp	.+62     	; 0x2f04 <main+0x14c2>
    2ec6:	fe 01       	movw	r30, r28
    2ec8:	eb 59       	subi	r30, 0x9B	; 155
    2eca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ecc:	88 ec       	ldi	r24, 0xC8	; 200
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	91 83       	std	Z+1, r25	; 0x01
    2ed2:	80 83       	st	Z, r24
    2ed4:	fe 01       	movw	r30, r28
    2ed6:	eb 59       	subi	r30, 0x9B	; 155
    2ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eda:	80 81       	ld	r24, Z
    2edc:	91 81       	ldd	r25, Z+1	; 0x01
    2ede:	01 97       	sbiw	r24, 0x01	; 1
    2ee0:	f1 f7       	brne	.-4      	; 0x2ede <main+0x149c>
    2ee2:	fe 01       	movw	r30, r28
    2ee4:	eb 59       	subi	r30, 0x9B	; 155
    2ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee8:	91 83       	std	Z+1, r25	; 0x01
    2eea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2eec:	de 01       	movw	r26, r28
    2eee:	a9 59       	subi	r26, 0x99	; 153
    2ef0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ef2:	fe 01       	movw	r30, r28
    2ef4:	e9 59       	subi	r30, 0x99	; 153
    2ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef8:	80 81       	ld	r24, Z
    2efa:	91 81       	ldd	r25, Z+1	; 0x01
    2efc:	01 97       	sbiw	r24, 0x01	; 1
    2efe:	11 96       	adiw	r26, 0x01	; 1
    2f00:	9c 93       	st	X, r25
    2f02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f04:	fe 01       	movw	r30, r28
    2f06:	e9 59       	subi	r30, 0x99	; 153
    2f08:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0a:	80 81       	ld	r24, Z
    2f0c:	91 81       	ldd	r25, Z+1	; 0x01
    2f0e:	00 97       	sbiw	r24, 0x00	; 0
    2f10:	d1 f6       	brne	.-76     	; 0x2ec6 <main+0x1484>
    2f12:	28 c0       	rjmp	.+80     	; 0x2f64 <main+0x1522>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f14:	8e 01       	movw	r16, r28
    2f16:	09 59       	subi	r16, 0x99	; 153
    2f18:	1f 4f       	sbci	r17, 0xFF	; 255
    2f1a:	fe 01       	movw	r30, r28
    2f1c:	e7 59       	subi	r30, 0x97	; 151
    2f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f20:	60 81       	ld	r22, Z
    2f22:	71 81       	ldd	r23, Z+1	; 0x01
    2f24:	82 81       	ldd	r24, Z+2	; 0x02
    2f26:	93 81       	ldd	r25, Z+3	; 0x03
    2f28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f2c:	dc 01       	movw	r26, r24
    2f2e:	cb 01       	movw	r24, r22
    2f30:	f8 01       	movw	r30, r16
    2f32:	91 83       	std	Z+1, r25	; 0x01
    2f34:	80 83       	st	Z, r24
    2f36:	de 01       	movw	r26, r28
    2f38:	ad 59       	subi	r26, 0x9D	; 157
    2f3a:	bf 4f       	sbci	r27, 0xFF	; 255
    2f3c:	fe 01       	movw	r30, r28
    2f3e:	e9 59       	subi	r30, 0x99	; 153
    2f40:	ff 4f       	sbci	r31, 0xFF	; 255
    2f42:	80 81       	ld	r24, Z
    2f44:	91 81       	ldd	r25, Z+1	; 0x01
    2f46:	11 96       	adiw	r26, 0x01	; 1
    2f48:	9c 93       	st	X, r25
    2f4a:	8e 93       	st	-X, r24
    2f4c:	fe 01       	movw	r30, r28
    2f4e:	ed 59       	subi	r30, 0x9D	; 157
    2f50:	ff 4f       	sbci	r31, 0xFF	; 255
    2f52:	80 81       	ld	r24, Z
    2f54:	91 81       	ldd	r25, Z+1	; 0x01
    2f56:	01 97       	sbiw	r24, 0x01	; 1
    2f58:	f1 f7       	brne	.-4      	; 0x2f56 <main+0x1514>
    2f5a:	fe 01       	movw	r30, r28
    2f5c:	ed 59       	subi	r30, 0x9D	; 157
    2f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f60:	91 83       	std	Z+1, r25	; 0x01
    2f62:	80 83       	st	Z, r24
				}

			}


			if(Local_u8PinEnterRead ==DIO_PIN_LOW)
    2f64:	fe 01       	movw	r30, r28
    2f66:	e5 5f       	subi	r30, 0xF5	; 245
    2f68:	fe 4f       	sbci	r31, 0xFE	; 254
    2f6a:	80 81       	ld	r24, Z
    2f6c:	88 23       	and	r24, r24
    2f6e:	09 f0       	breq	.+2      	; 0x2f72 <main+0x1530>
    2f70:	d9 c4       	rjmp	.+2482   	; 0x3924 <main+0x1ee2>
			{

				switch (Local_u8Xpos)
    2f72:	fe 01       	movw	r30, r28
    2f74:	e0 50       	subi	r30, 0x00	; 0
    2f76:	ff 4f       	sbci	r31, 0xFF	; 255
    2f78:	80 81       	ld	r24, Z
    2f7a:	28 2f       	mov	r18, r24
    2f7c:	30 e0       	ldi	r19, 0x00	; 0
    2f7e:	c4 5f       	subi	r28, 0xF4	; 244
    2f80:	de 4f       	sbci	r29, 0xFE	; 254
    2f82:	39 83       	std	Y+1, r19	; 0x01
    2f84:	28 83       	st	Y, r18
    2f86:	cc 50       	subi	r28, 0x0C	; 12
    2f88:	d1 40       	sbci	r29, 0x01	; 1
    2f8a:	c4 5f       	subi	r28, 0xF4	; 244
    2f8c:	de 4f       	sbci	r29, 0xFE	; 254
    2f8e:	88 81       	ld	r24, Y
    2f90:	99 81       	ldd	r25, Y+1	; 0x01
    2f92:	cc 50       	subi	r28, 0x0C	; 12
    2f94:	d1 40       	sbci	r29, 0x01	; 1
    2f96:	82 30       	cpi	r24, 0x02	; 2
    2f98:	91 05       	cpc	r25, r1
    2f9a:	09 f4       	brne	.+2      	; 0x2f9e <main+0x155c>
    2f9c:	d5 c3       	rjmp	.+1962   	; 0x3748 <main+0x1d06>
    2f9e:	c4 5f       	subi	r28, 0xF4	; 244
    2fa0:	de 4f       	sbci	r29, 0xFE	; 254
    2fa2:	e8 81       	ld	r30, Y
    2fa4:	f9 81       	ldd	r31, Y+1	; 0x01
    2fa6:	cc 50       	subi	r28, 0x0C	; 12
    2fa8:	d1 40       	sbci	r29, 0x01	; 1
    2faa:	e3 30       	cpi	r30, 0x03	; 3
    2fac:	f1 05       	cpc	r31, r1
    2fae:	a4 f4       	brge	.+40     	; 0x2fd8 <main+0x1596>
    2fb0:	c4 5f       	subi	r28, 0xF4	; 244
    2fb2:	de 4f       	sbci	r29, 0xFE	; 254
    2fb4:	28 81       	ld	r18, Y
    2fb6:	39 81       	ldd	r19, Y+1	; 0x01
    2fb8:	cc 50       	subi	r28, 0x0C	; 12
    2fba:	d1 40       	sbci	r29, 0x01	; 1
    2fbc:	21 15       	cp	r18, r1
    2fbe:	31 05       	cpc	r19, r1
    2fc0:	01 f1       	breq	.+64     	; 0x3002 <main+0x15c0>
    2fc2:	c4 5f       	subi	r28, 0xF4	; 244
    2fc4:	de 4f       	sbci	r29, 0xFE	; 254
    2fc6:	88 81       	ld	r24, Y
    2fc8:	99 81       	ldd	r25, Y+1	; 0x01
    2fca:	cc 50       	subi	r28, 0x0C	; 12
    2fcc:	d1 40       	sbci	r29, 0x01	; 1
    2fce:	81 30       	cpi	r24, 0x01	; 1
    2fd0:	91 05       	cpc	r25, r1
    2fd2:	09 f4       	brne	.+2      	; 0x2fd6 <main+0x1594>
    2fd4:	32 c2       	rjmp	.+1124   	; 0x343a <main+0x19f8>
    2fd6:	a6 c4       	rjmp	.+2380   	; 0x3924 <main+0x1ee2>
    2fd8:	c4 5f       	subi	r28, 0xF4	; 244
    2fda:	de 4f       	sbci	r29, 0xFE	; 254
    2fdc:	e8 81       	ld	r30, Y
    2fde:	f9 81       	ldd	r31, Y+1	; 0x01
    2fe0:	cc 50       	subi	r28, 0x0C	; 12
    2fe2:	d1 40       	sbci	r29, 0x01	; 1
    2fe4:	e3 30       	cpi	r30, 0x03	; 3
    2fe6:	f1 05       	cpc	r31, r1
    2fe8:	09 f4       	brne	.+2      	; 0x2fec <main+0x15aa>
    2fea:	ca c3       	rjmp	.+1940   	; 0x3780 <main+0x1d3e>
    2fec:	c4 5f       	subi	r28, 0xF4	; 244
    2fee:	de 4f       	sbci	r29, 0xFE	; 254
    2ff0:	28 81       	ld	r18, Y
    2ff2:	39 81       	ldd	r19, Y+1	; 0x01
    2ff4:	cc 50       	subi	r28, 0x0C	; 12
    2ff6:	d1 40       	sbci	r29, 0x01	; 1
    2ff8:	24 30       	cpi	r18, 0x04	; 4
    2ffa:	31 05       	cpc	r19, r1
    2ffc:	09 f4       	brne	.+2      	; 0x3000 <main+0x15be>
    2ffe:	dc c3       	rjmp	.+1976   	; 0x37b8 <main+0x1d76>
    3000:	91 c4       	rjmp	.+2338   	; 0x3924 <main+0x1ee2>
				{
				case 0:CLCD_voidGoToXY (0u,1u);
    3002:	80 e0       	ldi	r24, 0x00	; 0
    3004:	61 e0       	ldi	r22, 0x01	; 1
    3006:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString (" ");
    300a:	88 e7       	ldi	r24, 0x78	; 120
    300c:	90 e0       	ldi	r25, 0x00	; 0
    300e:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
				Local_u8Xpos++;
    3012:	de 01       	movw	r26, r28
    3014:	a0 50       	subi	r26, 0x00	; 0
    3016:	bf 4f       	sbci	r27, 0xFF	; 255
    3018:	fe 01       	movw	r30, r28
    301a:	e0 50       	subi	r30, 0x00	; 0
    301c:	ff 4f       	sbci	r31, 0xFF	; 255
    301e:	80 81       	ld	r24, Z
    3020:	8f 5f       	subi	r24, 0xFF	; 255
    3022:	8c 93       	st	X, r24

				CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    3024:	9e 01       	movw	r18, r28
    3026:	2f 5f       	subi	r18, 0xFF	; 255
    3028:	3e 4f       	sbci	r19, 0xFE	; 254
    302a:	fe 01       	movw	r30, r28
    302c:	e0 50       	subi	r30, 0x00	; 0
    302e:	ff 4f       	sbci	r31, 0xFF	; 255
    3030:	de 01       	movw	r26, r28
    3032:	a1 50       	subi	r26, 0x01	; 1
    3034:	bf 4f       	sbci	r27, 0xFF	; 255
    3036:	80 e0       	ldi	r24, 0x00	; 0
    3038:	b9 01       	movw	r22, r18
    303a:	40 81       	ld	r20, Z
    303c:	2c 91       	ld	r18, X
    303e:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_u8WriteSpecialCharacter>
    3042:	fe 01       	movw	r30, r28
    3044:	e1 5a       	subi	r30, 0xA1	; 161
    3046:	ff 4f       	sbci	r31, 0xFF	; 255
    3048:	80 e0       	ldi	r24, 0x00	; 0
    304a:	90 e0       	ldi	r25, 0x00	; 0
    304c:	aa e7       	ldi	r26, 0x7A	; 122
    304e:	b3 e4       	ldi	r27, 0x43	; 67
    3050:	80 83       	st	Z, r24
    3052:	91 83       	std	Z+1, r25	; 0x01
    3054:	a2 83       	std	Z+2, r26	; 0x02
    3056:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3058:	8e 01       	movw	r16, r28
    305a:	05 5a       	subi	r16, 0xA5	; 165
    305c:	1f 4f       	sbci	r17, 0xFF	; 255
    305e:	fe 01       	movw	r30, r28
    3060:	e1 5a       	subi	r30, 0xA1	; 161
    3062:	ff 4f       	sbci	r31, 0xFF	; 255
    3064:	60 81       	ld	r22, Z
    3066:	71 81       	ldd	r23, Z+1	; 0x01
    3068:	82 81       	ldd	r24, Z+2	; 0x02
    306a:	93 81       	ldd	r25, Z+3	; 0x03
    306c:	20 e0       	ldi	r18, 0x00	; 0
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	4a ef       	ldi	r20, 0xFA	; 250
    3072:	54 e4       	ldi	r21, 0x44	; 68
    3074:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3078:	dc 01       	movw	r26, r24
    307a:	cb 01       	movw	r24, r22
    307c:	f8 01       	movw	r30, r16
    307e:	80 83       	st	Z, r24
    3080:	91 83       	std	Z+1, r25	; 0x01
    3082:	a2 83       	std	Z+2, r26	; 0x02
    3084:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3086:	fe 01       	movw	r30, r28
    3088:	e5 5a       	subi	r30, 0xA5	; 165
    308a:	ff 4f       	sbci	r31, 0xFF	; 255
    308c:	60 81       	ld	r22, Z
    308e:	71 81       	ldd	r23, Z+1	; 0x01
    3090:	82 81       	ldd	r24, Z+2	; 0x02
    3092:	93 81       	ldd	r25, Z+3	; 0x03
    3094:	20 e0       	ldi	r18, 0x00	; 0
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	40 e8       	ldi	r20, 0x80	; 128
    309a:	5f e3       	ldi	r21, 0x3F	; 63
    309c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    30a0:	88 23       	and	r24, r24
    30a2:	44 f4       	brge	.+16     	; 0x30b4 <main+0x1672>
		__ticks = 1;
    30a4:	fe 01       	movw	r30, r28
    30a6:	e7 5a       	subi	r30, 0xA7	; 167
    30a8:	ff 4f       	sbci	r31, 0xFF	; 255
    30aa:	81 e0       	ldi	r24, 0x01	; 1
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	91 83       	std	Z+1, r25	; 0x01
    30b0:	80 83       	st	Z, r24
    30b2:	64 c0       	rjmp	.+200    	; 0x317c <main+0x173a>
	else if (__tmp > 65535)
    30b4:	fe 01       	movw	r30, r28
    30b6:	e5 5a       	subi	r30, 0xA5	; 165
    30b8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ba:	60 81       	ld	r22, Z
    30bc:	71 81       	ldd	r23, Z+1	; 0x01
    30be:	82 81       	ldd	r24, Z+2	; 0x02
    30c0:	93 81       	ldd	r25, Z+3	; 0x03
    30c2:	20 e0       	ldi	r18, 0x00	; 0
    30c4:	3f ef       	ldi	r19, 0xFF	; 255
    30c6:	4f e7       	ldi	r20, 0x7F	; 127
    30c8:	57 e4       	ldi	r21, 0x47	; 71
    30ca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    30ce:	18 16       	cp	r1, r24
    30d0:	0c f0       	brlt	.+2      	; 0x30d4 <main+0x1692>
    30d2:	43 c0       	rjmp	.+134    	; 0x315a <main+0x1718>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30d4:	fe 01       	movw	r30, r28
    30d6:	e1 5a       	subi	r30, 0xA1	; 161
    30d8:	ff 4f       	sbci	r31, 0xFF	; 255
    30da:	60 81       	ld	r22, Z
    30dc:	71 81       	ldd	r23, Z+1	; 0x01
    30de:	82 81       	ldd	r24, Z+2	; 0x02
    30e0:	93 81       	ldd	r25, Z+3	; 0x03
    30e2:	20 e0       	ldi	r18, 0x00	; 0
    30e4:	30 e0       	ldi	r19, 0x00	; 0
    30e6:	40 e2       	ldi	r20, 0x20	; 32
    30e8:	51 e4       	ldi	r21, 0x41	; 65
    30ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    30ee:	dc 01       	movw	r26, r24
    30f0:	cb 01       	movw	r24, r22
    30f2:	8e 01       	movw	r16, r28
    30f4:	07 5a       	subi	r16, 0xA7	; 167
    30f6:	1f 4f       	sbci	r17, 0xFF	; 255
    30f8:	bc 01       	movw	r22, r24
    30fa:	cd 01       	movw	r24, r26
    30fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3100:	dc 01       	movw	r26, r24
    3102:	cb 01       	movw	r24, r22
    3104:	f8 01       	movw	r30, r16
    3106:	91 83       	std	Z+1, r25	; 0x01
    3108:	80 83       	st	Z, r24
    310a:	1f c0       	rjmp	.+62     	; 0x314a <main+0x1708>
    310c:	fe 01       	movw	r30, r28
    310e:	e9 5a       	subi	r30, 0xA9	; 169
    3110:	ff 4f       	sbci	r31, 0xFF	; 255
    3112:	88 ec       	ldi	r24, 0xC8	; 200
    3114:	90 e0       	ldi	r25, 0x00	; 0
    3116:	91 83       	std	Z+1, r25	; 0x01
    3118:	80 83       	st	Z, r24
    311a:	fe 01       	movw	r30, r28
    311c:	e9 5a       	subi	r30, 0xA9	; 169
    311e:	ff 4f       	sbci	r31, 0xFF	; 255
    3120:	80 81       	ld	r24, Z
    3122:	91 81       	ldd	r25, Z+1	; 0x01
    3124:	01 97       	sbiw	r24, 0x01	; 1
    3126:	f1 f7       	brne	.-4      	; 0x3124 <main+0x16e2>
    3128:	fe 01       	movw	r30, r28
    312a:	e9 5a       	subi	r30, 0xA9	; 169
    312c:	ff 4f       	sbci	r31, 0xFF	; 255
    312e:	91 83       	std	Z+1, r25	; 0x01
    3130:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3132:	de 01       	movw	r26, r28
    3134:	a7 5a       	subi	r26, 0xA7	; 167
    3136:	bf 4f       	sbci	r27, 0xFF	; 255
    3138:	fe 01       	movw	r30, r28
    313a:	e7 5a       	subi	r30, 0xA7	; 167
    313c:	ff 4f       	sbci	r31, 0xFF	; 255
    313e:	80 81       	ld	r24, Z
    3140:	91 81       	ldd	r25, Z+1	; 0x01
    3142:	01 97       	sbiw	r24, 0x01	; 1
    3144:	11 96       	adiw	r26, 0x01	; 1
    3146:	9c 93       	st	X, r25
    3148:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    314a:	fe 01       	movw	r30, r28
    314c:	e7 5a       	subi	r30, 0xA7	; 167
    314e:	ff 4f       	sbci	r31, 0xFF	; 255
    3150:	80 81       	ld	r24, Z
    3152:	91 81       	ldd	r25, Z+1	; 0x01
    3154:	00 97       	sbiw	r24, 0x00	; 0
    3156:	d1 f6       	brne	.-76     	; 0x310c <main+0x16ca>
    3158:	27 c0       	rjmp	.+78     	; 0x31a8 <main+0x1766>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    315a:	8e 01       	movw	r16, r28
    315c:	07 5a       	subi	r16, 0xA7	; 167
    315e:	1f 4f       	sbci	r17, 0xFF	; 255
    3160:	fe 01       	movw	r30, r28
    3162:	e5 5a       	subi	r30, 0xA5	; 165
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	60 81       	ld	r22, Z
    3168:	71 81       	ldd	r23, Z+1	; 0x01
    316a:	82 81       	ldd	r24, Z+2	; 0x02
    316c:	93 81       	ldd	r25, Z+3	; 0x03
    316e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3172:	dc 01       	movw	r26, r24
    3174:	cb 01       	movw	r24, r22
    3176:	f8 01       	movw	r30, r16
    3178:	91 83       	std	Z+1, r25	; 0x01
    317a:	80 83       	st	Z, r24
    317c:	de 01       	movw	r26, r28
    317e:	ab 5a       	subi	r26, 0xAB	; 171
    3180:	bf 4f       	sbci	r27, 0xFF	; 255
    3182:	fe 01       	movw	r30, r28
    3184:	e7 5a       	subi	r30, 0xA7	; 167
    3186:	ff 4f       	sbci	r31, 0xFF	; 255
    3188:	80 81       	ld	r24, Z
    318a:	91 81       	ldd	r25, Z+1	; 0x01
    318c:	8d 93       	st	X+, r24
    318e:	9c 93       	st	X, r25
    3190:	fe 01       	movw	r30, r28
    3192:	eb 5a       	subi	r30, 0xAB	; 171
    3194:	ff 4f       	sbci	r31, 0xFF	; 255
    3196:	80 81       	ld	r24, Z
    3198:	91 81       	ldd	r25, Z+1	; 0x01
    319a:	01 97       	sbiw	r24, 0x01	; 1
    319c:	f1 f7       	brne	.-4      	; 0x319a <main+0x1758>
    319e:	fe 01       	movw	r30, r28
    31a0:	eb 5a       	subi	r30, 0xAB	; 171
    31a2:	ff 4f       	sbci	r31, 0xFF	; 255
    31a4:	91 83       	std	Z+1, r25	; 0x01
    31a6:	80 83       	st	Z, r24
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    31a8:	88 e0       	ldi	r24, 0x08	; 8
    31aa:	61 e0       	ldi	r22, 0x01	; 1
    31ac:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("ENTER");
    31b0:	8a e7       	ldi	r24, 0x7A	; 122
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    31b8:	fe 01       	movw	r30, r28
    31ba:	ef 5a       	subi	r30, 0xAF	; 175
    31bc:	ff 4f       	sbci	r31, 0xFF	; 255
    31be:	80 e0       	ldi	r24, 0x00	; 0
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	aa e7       	ldi	r26, 0x7A	; 122
    31c4:	b3 e4       	ldi	r27, 0x43	; 67
    31c6:	80 83       	st	Z, r24
    31c8:	91 83       	std	Z+1, r25	; 0x01
    31ca:	a2 83       	std	Z+2, r26	; 0x02
    31cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31ce:	8e 01       	movw	r16, r28
    31d0:	03 5b       	subi	r16, 0xB3	; 179
    31d2:	1f 4f       	sbci	r17, 0xFF	; 255
    31d4:	fe 01       	movw	r30, r28
    31d6:	ef 5a       	subi	r30, 0xAF	; 175
    31d8:	ff 4f       	sbci	r31, 0xFF	; 255
    31da:	60 81       	ld	r22, Z
    31dc:	71 81       	ldd	r23, Z+1	; 0x01
    31de:	82 81       	ldd	r24, Z+2	; 0x02
    31e0:	93 81       	ldd	r25, Z+3	; 0x03
    31e2:	20 e0       	ldi	r18, 0x00	; 0
    31e4:	30 e0       	ldi	r19, 0x00	; 0
    31e6:	4a ef       	ldi	r20, 0xFA	; 250
    31e8:	54 e4       	ldi	r21, 0x44	; 68
    31ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31ee:	dc 01       	movw	r26, r24
    31f0:	cb 01       	movw	r24, r22
    31f2:	f8 01       	movw	r30, r16
    31f4:	80 83       	st	Z, r24
    31f6:	91 83       	std	Z+1, r25	; 0x01
    31f8:	a2 83       	std	Z+2, r26	; 0x02
    31fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31fc:	fe 01       	movw	r30, r28
    31fe:	e3 5b       	subi	r30, 0xB3	; 179
    3200:	ff 4f       	sbci	r31, 0xFF	; 255
    3202:	60 81       	ld	r22, Z
    3204:	71 81       	ldd	r23, Z+1	; 0x01
    3206:	82 81       	ldd	r24, Z+2	; 0x02
    3208:	93 81       	ldd	r25, Z+3	; 0x03
    320a:	20 e0       	ldi	r18, 0x00	; 0
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	40 e8       	ldi	r20, 0x80	; 128
    3210:	5f e3       	ldi	r21, 0x3F	; 63
    3212:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3216:	88 23       	and	r24, r24
    3218:	44 f4       	brge	.+16     	; 0x322a <main+0x17e8>
		__ticks = 1;
    321a:	fe 01       	movw	r30, r28
    321c:	e5 5b       	subi	r30, 0xB5	; 181
    321e:	ff 4f       	sbci	r31, 0xFF	; 255
    3220:	81 e0       	ldi	r24, 0x01	; 1
    3222:	90 e0       	ldi	r25, 0x00	; 0
    3224:	91 83       	std	Z+1, r25	; 0x01
    3226:	80 83       	st	Z, r24
    3228:	64 c0       	rjmp	.+200    	; 0x32f2 <main+0x18b0>
	else if (__tmp > 65535)
    322a:	fe 01       	movw	r30, r28
    322c:	e3 5b       	subi	r30, 0xB3	; 179
    322e:	ff 4f       	sbci	r31, 0xFF	; 255
    3230:	60 81       	ld	r22, Z
    3232:	71 81       	ldd	r23, Z+1	; 0x01
    3234:	82 81       	ldd	r24, Z+2	; 0x02
    3236:	93 81       	ldd	r25, Z+3	; 0x03
    3238:	20 e0       	ldi	r18, 0x00	; 0
    323a:	3f ef       	ldi	r19, 0xFF	; 255
    323c:	4f e7       	ldi	r20, 0x7F	; 127
    323e:	57 e4       	ldi	r21, 0x47	; 71
    3240:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3244:	18 16       	cp	r1, r24
    3246:	0c f0       	brlt	.+2      	; 0x324a <main+0x1808>
    3248:	43 c0       	rjmp	.+134    	; 0x32d0 <main+0x188e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    324a:	fe 01       	movw	r30, r28
    324c:	ef 5a       	subi	r30, 0xAF	; 175
    324e:	ff 4f       	sbci	r31, 0xFF	; 255
    3250:	60 81       	ld	r22, Z
    3252:	71 81       	ldd	r23, Z+1	; 0x01
    3254:	82 81       	ldd	r24, Z+2	; 0x02
    3256:	93 81       	ldd	r25, Z+3	; 0x03
    3258:	20 e0       	ldi	r18, 0x00	; 0
    325a:	30 e0       	ldi	r19, 0x00	; 0
    325c:	40 e2       	ldi	r20, 0x20	; 32
    325e:	51 e4       	ldi	r21, 0x41	; 65
    3260:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3264:	dc 01       	movw	r26, r24
    3266:	cb 01       	movw	r24, r22
    3268:	8e 01       	movw	r16, r28
    326a:	05 5b       	subi	r16, 0xB5	; 181
    326c:	1f 4f       	sbci	r17, 0xFF	; 255
    326e:	bc 01       	movw	r22, r24
    3270:	cd 01       	movw	r24, r26
    3272:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3276:	dc 01       	movw	r26, r24
    3278:	cb 01       	movw	r24, r22
    327a:	f8 01       	movw	r30, r16
    327c:	91 83       	std	Z+1, r25	; 0x01
    327e:	80 83       	st	Z, r24
    3280:	1f c0       	rjmp	.+62     	; 0x32c0 <main+0x187e>
    3282:	fe 01       	movw	r30, r28
    3284:	e7 5b       	subi	r30, 0xB7	; 183
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	88 ec       	ldi	r24, 0xC8	; 200
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	91 83       	std	Z+1, r25	; 0x01
    328e:	80 83       	st	Z, r24
    3290:	fe 01       	movw	r30, r28
    3292:	e7 5b       	subi	r30, 0xB7	; 183
    3294:	ff 4f       	sbci	r31, 0xFF	; 255
    3296:	80 81       	ld	r24, Z
    3298:	91 81       	ldd	r25, Z+1	; 0x01
    329a:	01 97       	sbiw	r24, 0x01	; 1
    329c:	f1 f7       	brne	.-4      	; 0x329a <main+0x1858>
    329e:	fe 01       	movw	r30, r28
    32a0:	e7 5b       	subi	r30, 0xB7	; 183
    32a2:	ff 4f       	sbci	r31, 0xFF	; 255
    32a4:	91 83       	std	Z+1, r25	; 0x01
    32a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32a8:	de 01       	movw	r26, r28
    32aa:	a5 5b       	subi	r26, 0xB5	; 181
    32ac:	bf 4f       	sbci	r27, 0xFF	; 255
    32ae:	fe 01       	movw	r30, r28
    32b0:	e5 5b       	subi	r30, 0xB5	; 181
    32b2:	ff 4f       	sbci	r31, 0xFF	; 255
    32b4:	80 81       	ld	r24, Z
    32b6:	91 81       	ldd	r25, Z+1	; 0x01
    32b8:	01 97       	sbiw	r24, 0x01	; 1
    32ba:	11 96       	adiw	r26, 0x01	; 1
    32bc:	9c 93       	st	X, r25
    32be:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32c0:	fe 01       	movw	r30, r28
    32c2:	e5 5b       	subi	r30, 0xB5	; 181
    32c4:	ff 4f       	sbci	r31, 0xFF	; 255
    32c6:	80 81       	ld	r24, Z
    32c8:	91 81       	ldd	r25, Z+1	; 0x01
    32ca:	00 97       	sbiw	r24, 0x00	; 0
    32cc:	d1 f6       	brne	.-76     	; 0x3282 <main+0x1840>
    32ce:	27 c0       	rjmp	.+78     	; 0x331e <main+0x18dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32d0:	8e 01       	movw	r16, r28
    32d2:	05 5b       	subi	r16, 0xB5	; 181
    32d4:	1f 4f       	sbci	r17, 0xFF	; 255
    32d6:	fe 01       	movw	r30, r28
    32d8:	e3 5b       	subi	r30, 0xB3	; 179
    32da:	ff 4f       	sbci	r31, 0xFF	; 255
    32dc:	60 81       	ld	r22, Z
    32de:	71 81       	ldd	r23, Z+1	; 0x01
    32e0:	82 81       	ldd	r24, Z+2	; 0x02
    32e2:	93 81       	ldd	r25, Z+3	; 0x03
    32e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32e8:	dc 01       	movw	r26, r24
    32ea:	cb 01       	movw	r24, r22
    32ec:	f8 01       	movw	r30, r16
    32ee:	91 83       	std	Z+1, r25	; 0x01
    32f0:	80 83       	st	Z, r24
    32f2:	de 01       	movw	r26, r28
    32f4:	a9 5b       	subi	r26, 0xB9	; 185
    32f6:	bf 4f       	sbci	r27, 0xFF	; 255
    32f8:	fe 01       	movw	r30, r28
    32fa:	e5 5b       	subi	r30, 0xB5	; 181
    32fc:	ff 4f       	sbci	r31, 0xFF	; 255
    32fe:	80 81       	ld	r24, Z
    3300:	91 81       	ldd	r25, Z+1	; 0x01
    3302:	8d 93       	st	X+, r24
    3304:	9c 93       	st	X, r25
    3306:	fe 01       	movw	r30, r28
    3308:	e9 5b       	subi	r30, 0xB9	; 185
    330a:	ff 4f       	sbci	r31, 0xFF	; 255
    330c:	80 81       	ld	r24, Z
    330e:	91 81       	ldd	r25, Z+1	; 0x01
    3310:	01 97       	sbiw	r24, 0x01	; 1
    3312:	f1 f7       	brne	.-4      	; 0x3310 <main+0x18ce>
    3314:	fe 01       	movw	r30, r28
    3316:	e9 5b       	subi	r30, 0xB9	; 185
    3318:	ff 4f       	sbci	r31, 0xFF	; 255
    331a:	91 83       	std	Z+1, r25	; 0x01
    331c:	80 83       	st	Z, r24
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    331e:	88 e0       	ldi	r24, 0x08	; 8
    3320:	61 e0       	ldi	r22, 0x01	; 1
    3322:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("     ");
    3326:	82 e7       	ldi	r24, 0x72	; 114
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    332e:	fe 01       	movw	r30, r28
    3330:	ed 5b       	subi	r30, 0xBD	; 189
    3332:	ff 4f       	sbci	r31, 0xFF	; 255
    3334:	80 e0       	ldi	r24, 0x00	; 0
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	aa e7       	ldi	r26, 0x7A	; 122
    333a:	b3 e4       	ldi	r27, 0x43	; 67
    333c:	80 83       	st	Z, r24
    333e:	91 83       	std	Z+1, r25	; 0x01
    3340:	a2 83       	std	Z+2, r26	; 0x02
    3342:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3344:	8e 01       	movw	r16, r28
    3346:	01 5c       	subi	r16, 0xC1	; 193
    3348:	1f 4f       	sbci	r17, 0xFF	; 255
    334a:	fe 01       	movw	r30, r28
    334c:	ed 5b       	subi	r30, 0xBD	; 189
    334e:	ff 4f       	sbci	r31, 0xFF	; 255
    3350:	60 81       	ld	r22, Z
    3352:	71 81       	ldd	r23, Z+1	; 0x01
    3354:	82 81       	ldd	r24, Z+2	; 0x02
    3356:	93 81       	ldd	r25, Z+3	; 0x03
    3358:	20 e0       	ldi	r18, 0x00	; 0
    335a:	30 e0       	ldi	r19, 0x00	; 0
    335c:	4a ef       	ldi	r20, 0xFA	; 250
    335e:	54 e4       	ldi	r21, 0x44	; 68
    3360:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3364:	dc 01       	movw	r26, r24
    3366:	cb 01       	movw	r24, r22
    3368:	f8 01       	movw	r30, r16
    336a:	80 83       	st	Z, r24
    336c:	91 83       	std	Z+1, r25	; 0x01
    336e:	a2 83       	std	Z+2, r26	; 0x02
    3370:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3372:	fe 01       	movw	r30, r28
    3374:	ff 96       	adiw	r30, 0x3f	; 63
    3376:	60 81       	ld	r22, Z
    3378:	71 81       	ldd	r23, Z+1	; 0x01
    337a:	82 81       	ldd	r24, Z+2	; 0x02
    337c:	93 81       	ldd	r25, Z+3	; 0x03
    337e:	20 e0       	ldi	r18, 0x00	; 0
    3380:	30 e0       	ldi	r19, 0x00	; 0
    3382:	40 e8       	ldi	r20, 0x80	; 128
    3384:	5f e3       	ldi	r21, 0x3F	; 63
    3386:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    338a:	88 23       	and	r24, r24
    338c:	2c f4       	brge	.+10     	; 0x3398 <main+0x1956>
		__ticks = 1;
    338e:	81 e0       	ldi	r24, 0x01	; 1
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	9e af       	std	Y+62, r25	; 0x3e
    3394:	8d af       	std	Y+61, r24	; 0x3d
    3396:	46 c0       	rjmp	.+140    	; 0x3424 <main+0x19e2>
	else if (__tmp > 65535)
    3398:	fe 01       	movw	r30, r28
    339a:	ff 96       	adiw	r30, 0x3f	; 63
    339c:	60 81       	ld	r22, Z
    339e:	71 81       	ldd	r23, Z+1	; 0x01
    33a0:	82 81       	ldd	r24, Z+2	; 0x02
    33a2:	93 81       	ldd	r25, Z+3	; 0x03
    33a4:	20 e0       	ldi	r18, 0x00	; 0
    33a6:	3f ef       	ldi	r19, 0xFF	; 255
    33a8:	4f e7       	ldi	r20, 0x7F	; 127
    33aa:	57 e4       	ldi	r21, 0x47	; 71
    33ac:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    33b0:	18 16       	cp	r1, r24
    33b2:	64 f5       	brge	.+88     	; 0x340c <main+0x19ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33b4:	fe 01       	movw	r30, r28
    33b6:	ed 5b       	subi	r30, 0xBD	; 189
    33b8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ba:	60 81       	ld	r22, Z
    33bc:	71 81       	ldd	r23, Z+1	; 0x01
    33be:	82 81       	ldd	r24, Z+2	; 0x02
    33c0:	93 81       	ldd	r25, Z+3	; 0x03
    33c2:	20 e0       	ldi	r18, 0x00	; 0
    33c4:	30 e0       	ldi	r19, 0x00	; 0
    33c6:	40 e2       	ldi	r20, 0x20	; 32
    33c8:	51 e4       	ldi	r21, 0x41	; 65
    33ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    33ce:	dc 01       	movw	r26, r24
    33d0:	cb 01       	movw	r24, r22
    33d2:	bc 01       	movw	r22, r24
    33d4:	cd 01       	movw	r24, r26
    33d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33da:	dc 01       	movw	r26, r24
    33dc:	cb 01       	movw	r24, r22
    33de:	9e af       	std	Y+62, r25	; 0x3e
    33e0:	8d af       	std	Y+61, r24	; 0x3d
    33e2:	0f c0       	rjmp	.+30     	; 0x3402 <main+0x19c0>
    33e4:	88 ec       	ldi	r24, 0xC8	; 200
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	9c af       	std	Y+60, r25	; 0x3c
    33ea:	8b af       	std	Y+59, r24	; 0x3b
    33ec:	8b ad       	ldd	r24, Y+59	; 0x3b
    33ee:	9c ad       	ldd	r25, Y+60	; 0x3c
    33f0:	01 97       	sbiw	r24, 0x01	; 1
    33f2:	f1 f7       	brne	.-4      	; 0x33f0 <main+0x19ae>
    33f4:	9c af       	std	Y+60, r25	; 0x3c
    33f6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33f8:	8d ad       	ldd	r24, Y+61	; 0x3d
    33fa:	9e ad       	ldd	r25, Y+62	; 0x3e
    33fc:	01 97       	sbiw	r24, 0x01	; 1
    33fe:	9e af       	std	Y+62, r25	; 0x3e
    3400:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3402:	8d ad       	ldd	r24, Y+61	; 0x3d
    3404:	9e ad       	ldd	r25, Y+62	; 0x3e
    3406:	00 97       	sbiw	r24, 0x00	; 0
    3408:	69 f7       	brne	.-38     	; 0x33e4 <main+0x19a2>
    340a:	8c c2       	rjmp	.+1304   	; 0x3924 <main+0x1ee2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    340c:	fe 01       	movw	r30, r28
    340e:	ff 96       	adiw	r30, 0x3f	; 63
    3410:	60 81       	ld	r22, Z
    3412:	71 81       	ldd	r23, Z+1	; 0x01
    3414:	82 81       	ldd	r24, Z+2	; 0x02
    3416:	93 81       	ldd	r25, Z+3	; 0x03
    3418:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    341c:	dc 01       	movw	r26, r24
    341e:	cb 01       	movw	r24, r22
    3420:	9e af       	std	Y+62, r25	; 0x3e
    3422:	8d af       	std	Y+61, r24	; 0x3d
    3424:	8d ad       	ldd	r24, Y+61	; 0x3d
    3426:	9e ad       	ldd	r25, Y+62	; 0x3e
    3428:	9a af       	std	Y+58, r25	; 0x3a
    342a:	89 af       	std	Y+57, r24	; 0x39
    342c:	89 ad       	ldd	r24, Y+57	; 0x39
    342e:	9a ad       	ldd	r25, Y+58	; 0x3a
    3430:	01 97       	sbiw	r24, 0x01	; 1
    3432:	f1 f7       	brne	.-4      	; 0x3430 <main+0x19ee>
    3434:	9a af       	std	Y+58, r25	; 0x3a
    3436:	89 af       	std	Y+57, r24	; 0x39
    3438:	75 c2       	rjmp	.+1258   	; 0x3924 <main+0x1ee2>





				case 1:CLCD_voidGoToXY (1u,1u);
    343a:	81 e0       	ldi	r24, 0x01	; 1
    343c:	61 e0       	ldi	r22, 0x01	; 1
    343e:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString (" ");
    3442:	88 e7       	ldi	r24, 0x78	; 120
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
				Local_u8Xpos++;
    344a:	de 01       	movw	r26, r28
    344c:	a0 50       	subi	r26, 0x00	; 0
    344e:	bf 4f       	sbci	r27, 0xFF	; 255
    3450:	fe 01       	movw	r30, r28
    3452:	e0 50       	subi	r30, 0x00	; 0
    3454:	ff 4f       	sbci	r31, 0xFF	; 255
    3456:	80 81       	ld	r24, Z
    3458:	8f 5f       	subi	r24, 0xFF	; 255
    345a:	8c 93       	st	X, r24
				CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    345c:	9e 01       	movw	r18, r28
    345e:	2f 5f       	subi	r18, 0xFF	; 255
    3460:	3e 4f       	sbci	r19, 0xFE	; 254
    3462:	fe 01       	movw	r30, r28
    3464:	e0 50       	subi	r30, 0x00	; 0
    3466:	ff 4f       	sbci	r31, 0xFF	; 255
    3468:	de 01       	movw	r26, r28
    346a:	a1 50       	subi	r26, 0x01	; 1
    346c:	bf 4f       	sbci	r27, 0xFF	; 255
    346e:	80 e0       	ldi	r24, 0x00	; 0
    3470:	b9 01       	movw	r22, r18
    3472:	40 81       	ld	r20, Z
    3474:	2c 91       	ld	r18, X
    3476:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_u8WriteSpecialCharacter>
    347a:	80 e0       	ldi	r24, 0x00	; 0
    347c:	90 e0       	ldi	r25, 0x00	; 0
    347e:	aa e7       	ldi	r26, 0x7A	; 122
    3480:	b3 e4       	ldi	r27, 0x43	; 67
    3482:	8d ab       	std	Y+53, r24	; 0x35
    3484:	9e ab       	std	Y+54, r25	; 0x36
    3486:	af ab       	std	Y+55, r26	; 0x37
    3488:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    348a:	6d a9       	ldd	r22, Y+53	; 0x35
    348c:	7e a9       	ldd	r23, Y+54	; 0x36
    348e:	8f a9       	ldd	r24, Y+55	; 0x37
    3490:	98 ad       	ldd	r25, Y+56	; 0x38
    3492:	20 e0       	ldi	r18, 0x00	; 0
    3494:	30 e0       	ldi	r19, 0x00	; 0
    3496:	4a ef       	ldi	r20, 0xFA	; 250
    3498:	54 e4       	ldi	r21, 0x44	; 68
    349a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    349e:	dc 01       	movw	r26, r24
    34a0:	cb 01       	movw	r24, r22
    34a2:	89 ab       	std	Y+49, r24	; 0x31
    34a4:	9a ab       	std	Y+50, r25	; 0x32
    34a6:	ab ab       	std	Y+51, r26	; 0x33
    34a8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    34aa:	69 a9       	ldd	r22, Y+49	; 0x31
    34ac:	7a a9       	ldd	r23, Y+50	; 0x32
    34ae:	8b a9       	ldd	r24, Y+51	; 0x33
    34b0:	9c a9       	ldd	r25, Y+52	; 0x34
    34b2:	20 e0       	ldi	r18, 0x00	; 0
    34b4:	30 e0       	ldi	r19, 0x00	; 0
    34b6:	40 e8       	ldi	r20, 0x80	; 128
    34b8:	5f e3       	ldi	r21, 0x3F	; 63
    34ba:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    34be:	88 23       	and	r24, r24
    34c0:	2c f4       	brge	.+10     	; 0x34cc <main+0x1a8a>
		__ticks = 1;
    34c2:	81 e0       	ldi	r24, 0x01	; 1
    34c4:	90 e0       	ldi	r25, 0x00	; 0
    34c6:	98 ab       	std	Y+48, r25	; 0x30
    34c8:	8f a7       	std	Y+47, r24	; 0x2f
    34ca:	3f c0       	rjmp	.+126    	; 0x354a <main+0x1b08>
	else if (__tmp > 65535)
    34cc:	69 a9       	ldd	r22, Y+49	; 0x31
    34ce:	7a a9       	ldd	r23, Y+50	; 0x32
    34d0:	8b a9       	ldd	r24, Y+51	; 0x33
    34d2:	9c a9       	ldd	r25, Y+52	; 0x34
    34d4:	20 e0       	ldi	r18, 0x00	; 0
    34d6:	3f ef       	ldi	r19, 0xFF	; 255
    34d8:	4f e7       	ldi	r20, 0x7F	; 127
    34da:	57 e4       	ldi	r21, 0x47	; 71
    34dc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    34e0:	18 16       	cp	r1, r24
    34e2:	4c f5       	brge	.+82     	; 0x3536 <main+0x1af4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34e4:	6d a9       	ldd	r22, Y+53	; 0x35
    34e6:	7e a9       	ldd	r23, Y+54	; 0x36
    34e8:	8f a9       	ldd	r24, Y+55	; 0x37
    34ea:	98 ad       	ldd	r25, Y+56	; 0x38
    34ec:	20 e0       	ldi	r18, 0x00	; 0
    34ee:	30 e0       	ldi	r19, 0x00	; 0
    34f0:	40 e2       	ldi	r20, 0x20	; 32
    34f2:	51 e4       	ldi	r21, 0x41	; 65
    34f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    34f8:	dc 01       	movw	r26, r24
    34fa:	cb 01       	movw	r24, r22
    34fc:	bc 01       	movw	r22, r24
    34fe:	cd 01       	movw	r24, r26
    3500:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3504:	dc 01       	movw	r26, r24
    3506:	cb 01       	movw	r24, r22
    3508:	98 ab       	std	Y+48, r25	; 0x30
    350a:	8f a7       	std	Y+47, r24	; 0x2f
    350c:	0f c0       	rjmp	.+30     	; 0x352c <main+0x1aea>
    350e:	88 ec       	ldi	r24, 0xC8	; 200
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	9e a7       	std	Y+46, r25	; 0x2e
    3514:	8d a7       	std	Y+45, r24	; 0x2d
    3516:	8d a5       	ldd	r24, Y+45	; 0x2d
    3518:	9e a5       	ldd	r25, Y+46	; 0x2e
    351a:	01 97       	sbiw	r24, 0x01	; 1
    351c:	f1 f7       	brne	.-4      	; 0x351a <main+0x1ad8>
    351e:	9e a7       	std	Y+46, r25	; 0x2e
    3520:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3522:	8f a5       	ldd	r24, Y+47	; 0x2f
    3524:	98 a9       	ldd	r25, Y+48	; 0x30
    3526:	01 97       	sbiw	r24, 0x01	; 1
    3528:	98 ab       	std	Y+48, r25	; 0x30
    352a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    352c:	8f a5       	ldd	r24, Y+47	; 0x2f
    352e:	98 a9       	ldd	r25, Y+48	; 0x30
    3530:	00 97       	sbiw	r24, 0x00	; 0
    3532:	69 f7       	brne	.-38     	; 0x350e <main+0x1acc>
    3534:	14 c0       	rjmp	.+40     	; 0x355e <main+0x1b1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3536:	69 a9       	ldd	r22, Y+49	; 0x31
    3538:	7a a9       	ldd	r23, Y+50	; 0x32
    353a:	8b a9       	ldd	r24, Y+51	; 0x33
    353c:	9c a9       	ldd	r25, Y+52	; 0x34
    353e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3542:	dc 01       	movw	r26, r24
    3544:	cb 01       	movw	r24, r22
    3546:	98 ab       	std	Y+48, r25	; 0x30
    3548:	8f a7       	std	Y+47, r24	; 0x2f
    354a:	8f a5       	ldd	r24, Y+47	; 0x2f
    354c:	98 a9       	ldd	r25, Y+48	; 0x30
    354e:	9c a7       	std	Y+44, r25	; 0x2c
    3550:	8b a7       	std	Y+43, r24	; 0x2b
    3552:	8b a5       	ldd	r24, Y+43	; 0x2b
    3554:	9c a5       	ldd	r25, Y+44	; 0x2c
    3556:	01 97       	sbiw	r24, 0x01	; 1
    3558:	f1 f7       	brne	.-4      	; 0x3556 <main+0x1b14>
    355a:	9c a7       	std	Y+44, r25	; 0x2c
    355c:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    355e:	88 e0       	ldi	r24, 0x08	; 8
    3560:	61 e0       	ldi	r22, 0x01	; 1
    3562:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("ENTER");
    3566:	8a e7       	ldi	r24, 0x7A	; 122
    3568:	90 e0       	ldi	r25, 0x00	; 0
    356a:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    356e:	80 e0       	ldi	r24, 0x00	; 0
    3570:	90 e0       	ldi	r25, 0x00	; 0
    3572:	aa e7       	ldi	r26, 0x7A	; 122
    3574:	b3 e4       	ldi	r27, 0x43	; 67
    3576:	8f a3       	std	Y+39, r24	; 0x27
    3578:	98 a7       	std	Y+40, r25	; 0x28
    357a:	a9 a7       	std	Y+41, r26	; 0x29
    357c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    357e:	6f a1       	ldd	r22, Y+39	; 0x27
    3580:	78 a5       	ldd	r23, Y+40	; 0x28
    3582:	89 a5       	ldd	r24, Y+41	; 0x29
    3584:	9a a5       	ldd	r25, Y+42	; 0x2a
    3586:	20 e0       	ldi	r18, 0x00	; 0
    3588:	30 e0       	ldi	r19, 0x00	; 0
    358a:	4a ef       	ldi	r20, 0xFA	; 250
    358c:	54 e4       	ldi	r21, 0x44	; 68
    358e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3592:	dc 01       	movw	r26, r24
    3594:	cb 01       	movw	r24, r22
    3596:	8b a3       	std	Y+35, r24	; 0x23
    3598:	9c a3       	std	Y+36, r25	; 0x24
    359a:	ad a3       	std	Y+37, r26	; 0x25
    359c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    359e:	6b a1       	ldd	r22, Y+35	; 0x23
    35a0:	7c a1       	ldd	r23, Y+36	; 0x24
    35a2:	8d a1       	ldd	r24, Y+37	; 0x25
    35a4:	9e a1       	ldd	r25, Y+38	; 0x26
    35a6:	20 e0       	ldi	r18, 0x00	; 0
    35a8:	30 e0       	ldi	r19, 0x00	; 0
    35aa:	40 e8       	ldi	r20, 0x80	; 128
    35ac:	5f e3       	ldi	r21, 0x3F	; 63
    35ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    35b2:	88 23       	and	r24, r24
    35b4:	2c f4       	brge	.+10     	; 0x35c0 <main+0x1b7e>
		__ticks = 1;
    35b6:	81 e0       	ldi	r24, 0x01	; 1
    35b8:	90 e0       	ldi	r25, 0x00	; 0
    35ba:	9a a3       	std	Y+34, r25	; 0x22
    35bc:	89 a3       	std	Y+33, r24	; 0x21
    35be:	3f c0       	rjmp	.+126    	; 0x363e <main+0x1bfc>
	else if (__tmp > 65535)
    35c0:	6b a1       	ldd	r22, Y+35	; 0x23
    35c2:	7c a1       	ldd	r23, Y+36	; 0x24
    35c4:	8d a1       	ldd	r24, Y+37	; 0x25
    35c6:	9e a1       	ldd	r25, Y+38	; 0x26
    35c8:	20 e0       	ldi	r18, 0x00	; 0
    35ca:	3f ef       	ldi	r19, 0xFF	; 255
    35cc:	4f e7       	ldi	r20, 0x7F	; 127
    35ce:	57 e4       	ldi	r21, 0x47	; 71
    35d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    35d4:	18 16       	cp	r1, r24
    35d6:	4c f5       	brge	.+82     	; 0x362a <main+0x1be8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35d8:	6f a1       	ldd	r22, Y+39	; 0x27
    35da:	78 a5       	ldd	r23, Y+40	; 0x28
    35dc:	89 a5       	ldd	r24, Y+41	; 0x29
    35de:	9a a5       	ldd	r25, Y+42	; 0x2a
    35e0:	20 e0       	ldi	r18, 0x00	; 0
    35e2:	30 e0       	ldi	r19, 0x00	; 0
    35e4:	40 e2       	ldi	r20, 0x20	; 32
    35e6:	51 e4       	ldi	r21, 0x41	; 65
    35e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    35ec:	dc 01       	movw	r26, r24
    35ee:	cb 01       	movw	r24, r22
    35f0:	bc 01       	movw	r22, r24
    35f2:	cd 01       	movw	r24, r26
    35f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    35f8:	dc 01       	movw	r26, r24
    35fa:	cb 01       	movw	r24, r22
    35fc:	9a a3       	std	Y+34, r25	; 0x22
    35fe:	89 a3       	std	Y+33, r24	; 0x21
    3600:	0f c0       	rjmp	.+30     	; 0x3620 <main+0x1bde>
    3602:	88 ec       	ldi	r24, 0xC8	; 200
    3604:	90 e0       	ldi	r25, 0x00	; 0
    3606:	98 a3       	std	Y+32, r25	; 0x20
    3608:	8f 8f       	std	Y+31, r24	; 0x1f
    360a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    360c:	98 a1       	ldd	r25, Y+32	; 0x20
    360e:	01 97       	sbiw	r24, 0x01	; 1
    3610:	f1 f7       	brne	.-4      	; 0x360e <main+0x1bcc>
    3612:	98 a3       	std	Y+32, r25	; 0x20
    3614:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3616:	89 a1       	ldd	r24, Y+33	; 0x21
    3618:	9a a1       	ldd	r25, Y+34	; 0x22
    361a:	01 97       	sbiw	r24, 0x01	; 1
    361c:	9a a3       	std	Y+34, r25	; 0x22
    361e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3620:	89 a1       	ldd	r24, Y+33	; 0x21
    3622:	9a a1       	ldd	r25, Y+34	; 0x22
    3624:	00 97       	sbiw	r24, 0x00	; 0
    3626:	69 f7       	brne	.-38     	; 0x3602 <main+0x1bc0>
    3628:	14 c0       	rjmp	.+40     	; 0x3652 <main+0x1c10>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    362a:	6b a1       	ldd	r22, Y+35	; 0x23
    362c:	7c a1       	ldd	r23, Y+36	; 0x24
    362e:	8d a1       	ldd	r24, Y+37	; 0x25
    3630:	9e a1       	ldd	r25, Y+38	; 0x26
    3632:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3636:	dc 01       	movw	r26, r24
    3638:	cb 01       	movw	r24, r22
    363a:	9a a3       	std	Y+34, r25	; 0x22
    363c:	89 a3       	std	Y+33, r24	; 0x21
    363e:	89 a1       	ldd	r24, Y+33	; 0x21
    3640:	9a a1       	ldd	r25, Y+34	; 0x22
    3642:	9e 8f       	std	Y+30, r25	; 0x1e
    3644:	8d 8f       	std	Y+29, r24	; 0x1d
    3646:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3648:	9e 8d       	ldd	r25, Y+30	; 0x1e
    364a:	01 97       	sbiw	r24, 0x01	; 1
    364c:	f1 f7       	brne	.-4      	; 0x364a <main+0x1c08>
    364e:	9e 8f       	std	Y+30, r25	; 0x1e
    3650:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(250);
				CLCD_voidGoToXY (8u,1u);
    3652:	88 e0       	ldi	r24, 0x08	; 8
    3654:	61 e0       	ldi	r22, 0x01	; 1
    3656:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("     ");
    365a:	82 e7       	ldi	r24, 0x72	; 114
    365c:	90 e0       	ldi	r25, 0x00	; 0
    365e:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
    3662:	80 e0       	ldi	r24, 0x00	; 0
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	aa e7       	ldi	r26, 0x7A	; 122
    3668:	b3 e4       	ldi	r27, 0x43	; 67
    366a:	89 8f       	std	Y+25, r24	; 0x19
    366c:	9a 8f       	std	Y+26, r25	; 0x1a
    366e:	ab 8f       	std	Y+27, r26	; 0x1b
    3670:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3672:	69 8d       	ldd	r22, Y+25	; 0x19
    3674:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3676:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3678:	9c 8d       	ldd	r25, Y+28	; 0x1c
    367a:	20 e0       	ldi	r18, 0x00	; 0
    367c:	30 e0       	ldi	r19, 0x00	; 0
    367e:	4a ef       	ldi	r20, 0xFA	; 250
    3680:	54 e4       	ldi	r21, 0x44	; 68
    3682:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3686:	dc 01       	movw	r26, r24
    3688:	cb 01       	movw	r24, r22
    368a:	8d 8b       	std	Y+21, r24	; 0x15
    368c:	9e 8b       	std	Y+22, r25	; 0x16
    368e:	af 8b       	std	Y+23, r26	; 0x17
    3690:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3692:	6d 89       	ldd	r22, Y+21	; 0x15
    3694:	7e 89       	ldd	r23, Y+22	; 0x16
    3696:	8f 89       	ldd	r24, Y+23	; 0x17
    3698:	98 8d       	ldd	r25, Y+24	; 0x18
    369a:	20 e0       	ldi	r18, 0x00	; 0
    369c:	30 e0       	ldi	r19, 0x00	; 0
    369e:	40 e8       	ldi	r20, 0x80	; 128
    36a0:	5f e3       	ldi	r21, 0x3F	; 63
    36a2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    36a6:	88 23       	and	r24, r24
    36a8:	2c f4       	brge	.+10     	; 0x36b4 <main+0x1c72>
		__ticks = 1;
    36aa:	81 e0       	ldi	r24, 0x01	; 1
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	9c 8b       	std	Y+20, r25	; 0x14
    36b0:	8b 8b       	std	Y+19, r24	; 0x13
    36b2:	3f c0       	rjmp	.+126    	; 0x3732 <main+0x1cf0>
	else if (__tmp > 65535)
    36b4:	6d 89       	ldd	r22, Y+21	; 0x15
    36b6:	7e 89       	ldd	r23, Y+22	; 0x16
    36b8:	8f 89       	ldd	r24, Y+23	; 0x17
    36ba:	98 8d       	ldd	r25, Y+24	; 0x18
    36bc:	20 e0       	ldi	r18, 0x00	; 0
    36be:	3f ef       	ldi	r19, 0xFF	; 255
    36c0:	4f e7       	ldi	r20, 0x7F	; 127
    36c2:	57 e4       	ldi	r21, 0x47	; 71
    36c4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    36c8:	18 16       	cp	r1, r24
    36ca:	4c f5       	brge	.+82     	; 0x371e <main+0x1cdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36cc:	69 8d       	ldd	r22, Y+25	; 0x19
    36ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36d4:	20 e0       	ldi	r18, 0x00	; 0
    36d6:	30 e0       	ldi	r19, 0x00	; 0
    36d8:	40 e2       	ldi	r20, 0x20	; 32
    36da:	51 e4       	ldi	r21, 0x41	; 65
    36dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    36e0:	dc 01       	movw	r26, r24
    36e2:	cb 01       	movw	r24, r22
    36e4:	bc 01       	movw	r22, r24
    36e6:	cd 01       	movw	r24, r26
    36e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    36ec:	dc 01       	movw	r26, r24
    36ee:	cb 01       	movw	r24, r22
    36f0:	9c 8b       	std	Y+20, r25	; 0x14
    36f2:	8b 8b       	std	Y+19, r24	; 0x13
    36f4:	0f c0       	rjmp	.+30     	; 0x3714 <main+0x1cd2>
    36f6:	88 ec       	ldi	r24, 0xC8	; 200
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	9a 8b       	std	Y+18, r25	; 0x12
    36fc:	89 8b       	std	Y+17, r24	; 0x11
    36fe:	89 89       	ldd	r24, Y+17	; 0x11
    3700:	9a 89       	ldd	r25, Y+18	; 0x12
    3702:	01 97       	sbiw	r24, 0x01	; 1
    3704:	f1 f7       	brne	.-4      	; 0x3702 <main+0x1cc0>
    3706:	9a 8b       	std	Y+18, r25	; 0x12
    3708:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    370a:	8b 89       	ldd	r24, Y+19	; 0x13
    370c:	9c 89       	ldd	r25, Y+20	; 0x14
    370e:	01 97       	sbiw	r24, 0x01	; 1
    3710:	9c 8b       	std	Y+20, r25	; 0x14
    3712:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3714:	8b 89       	ldd	r24, Y+19	; 0x13
    3716:	9c 89       	ldd	r25, Y+20	; 0x14
    3718:	00 97       	sbiw	r24, 0x00	; 0
    371a:	69 f7       	brne	.-38     	; 0x36f6 <main+0x1cb4>
    371c:	03 c1       	rjmp	.+518    	; 0x3924 <main+0x1ee2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    371e:	6d 89       	ldd	r22, Y+21	; 0x15
    3720:	7e 89       	ldd	r23, Y+22	; 0x16
    3722:	8f 89       	ldd	r24, Y+23	; 0x17
    3724:	98 8d       	ldd	r25, Y+24	; 0x18
    3726:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    372a:	dc 01       	movw	r26, r24
    372c:	cb 01       	movw	r24, r22
    372e:	9c 8b       	std	Y+20, r25	; 0x14
    3730:	8b 8b       	std	Y+19, r24	; 0x13
    3732:	8b 89       	ldd	r24, Y+19	; 0x13
    3734:	9c 89       	ldd	r25, Y+20	; 0x14
    3736:	98 8b       	std	Y+16, r25	; 0x10
    3738:	8f 87       	std	Y+15, r24	; 0x0f
    373a:	8f 85       	ldd	r24, Y+15	; 0x0f
    373c:	98 89       	ldd	r25, Y+16	; 0x10
    373e:	01 97       	sbiw	r24, 0x01	; 1
    3740:	f1 f7       	brne	.-4      	; 0x373e <main+0x1cfc>
    3742:	98 8b       	std	Y+16, r25	; 0x10
    3744:	8f 87       	std	Y+15, r24	; 0x0f
    3746:	ee c0       	rjmp	.+476    	; 0x3924 <main+0x1ee2>
				_delay_ms(250);
				break;

				case 2:
					CLCD_voidGoToXY (2u,1u);
    3748:	82 e0       	ldi	r24, 0x02	; 2
    374a:	61 e0       	ldi	r22, 0x01	; 1
    374c:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
					CLCD_u8SendString (" ");
    3750:	88 e7       	ldi	r24, 0x78	; 120
    3752:	90 e0       	ldi	r25, 0x00	; 0
    3754:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
					Local_u8Xpos++;
    3758:	de 01       	movw	r26, r28
    375a:	a0 50       	subi	r26, 0x00	; 0
    375c:	bf 4f       	sbci	r27, 0xFF	; 255
    375e:	fe 01       	movw	r30, r28
    3760:	e0 50       	subi	r30, 0x00	; 0
    3762:	ff 4f       	sbci	r31, 0xFF	; 255
    3764:	80 81       	ld	r24, Z
    3766:	8f 5f       	subi	r24, 0xFF	; 255
    3768:	8c 93       	st	X, r24
					CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    376a:	fe 01       	movw	r30, r28
    376c:	e0 50       	subi	r30, 0x00	; 0
    376e:	ff 4f       	sbci	r31, 0xFF	; 255
    3770:	de 01       	movw	r26, r28
    3772:	a3 50       	subi	r26, 0x03	; 3
    3774:	bf 4f       	sbci	r27, 0xFF	; 255
    3776:	80 81       	ld	r24, Z
    3778:	6c 91       	ld	r22, X
    377a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
    377e:	d2 c0       	rjmp	.+420    	; 0x3924 <main+0x1ee2>

					break;
				case 3:
					CLCD_voidSendData ('=');
    3780:	8d e3       	ldi	r24, 0x3D	; 61
    3782:	0e 94 7d 06 	call	0xcfa	; 0xcfa <CLCD_voidSendData>

					Local_u8Xpos++;
    3786:	de 01       	movw	r26, r28
    3788:	a0 50       	subi	r26, 0x00	; 0
    378a:	bf 4f       	sbci	r27, 0xFF	; 255
    378c:	fe 01       	movw	r30, r28
    378e:	e0 50       	subi	r30, 0x00	; 0
    3790:	ff 4f       	sbci	r31, 0xFF	; 255
    3792:	80 81       	ld	r24, Z
    3794:	8f 5f       	subi	r24, 0xFF	; 255
    3796:	8c 93       	st	X, r24
					CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);break;
    3798:	9e 01       	movw	r18, r28
    379a:	2f 5f       	subi	r18, 0xFF	; 255
    379c:	3e 4f       	sbci	r19, 0xFE	; 254
    379e:	fe 01       	movw	r30, r28
    37a0:	e0 50       	subi	r30, 0x00	; 0
    37a2:	ff 4f       	sbci	r31, 0xFF	; 255
    37a4:	de 01       	movw	r26, r28
    37a6:	a1 50       	subi	r26, 0x01	; 1
    37a8:	bf 4f       	sbci	r27, 0xFF	; 255
    37aa:	80 e0       	ldi	r24, 0x00	; 0
    37ac:	b9 01       	movw	r22, r18
    37ae:	40 81       	ld	r20, Z
    37b0:	2c 91       	ld	r18, X
    37b2:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_u8WriteSpecialCharacter>
    37b6:	b6 c0       	rjmp	.+364    	; 0x3924 <main+0x1ee2>
				case 4:CLCD_voidGoToXY (4u,0u);
    37b8:	84 e0       	ldi	r24, 0x04	; 4
    37ba:	60 e0       	ldi	r22, 0x00	; 0
    37bc:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString ("         ");
    37c0:	80 e8       	ldi	r24, 0x80	; 128
    37c2:	90 e0       	ldi	r25, 0x00	; 0
    37c4:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
				CLCD_voidGoToXY (Local_u8Xpos,Local_u8DDRAMYPos);
    37c8:	fe 01       	movw	r30, r28
    37ca:	e0 50       	subi	r30, 0x00	; 0
    37cc:	ff 4f       	sbci	r31, 0xFF	; 255
    37ce:	de 01       	movw	r26, r28
    37d0:	a3 50       	subi	r26, 0x03	; 3
    37d2:	bf 4f       	sbci	r27, 0xFF	; 255
    37d4:	80 81       	ld	r24, Z
    37d6:	6c 91       	ld	r22, X
    37d8:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>

				CLCD_voidCalc();
    37dc:	0e 94 55 08 	call	0x10aa	; 0x10aa <CLCD_voidCalc>
				if(Local_s8Iterator1==3)
    37e0:	80 91 aa 00 	lds	r24, 0x00AA
    37e4:	83 30       	cpi	r24, 0x03	; 3
    37e6:	61 f0       	breq	.+24     	; 0x3800 <main+0x1dbe>
				{
					//do nothing
				}
				else
				{
					CLCD_voidSendNumber ( Local_s32Result);
    37e8:	80 91 a6 00 	lds	r24, 0x00A6
    37ec:	90 91 a7 00 	lds	r25, 0x00A7
    37f0:	a0 91 a8 00 	lds	r26, 0x00A8
    37f4:	b0 91 a9 00 	lds	r27, 0x00A9
    37f8:	bc 01       	movw	r22, r24
    37fa:	cd 01       	movw	r24, r26
    37fc:	0e 94 59 07 	call	0xeb2	; 0xeb2 <CLCD_voidSendNumber>
    3800:	80 e0       	ldi	r24, 0x00	; 0
    3802:	90 e0       	ldi	r25, 0x00	; 0
    3804:	aa ef       	ldi	r26, 0xFA	; 250
    3806:	b3 e4       	ldi	r27, 0x43	; 67
    3808:	8b 87       	std	Y+11, r24	; 0x0b
    380a:	9c 87       	std	Y+12, r25	; 0x0c
    380c:	ad 87       	std	Y+13, r26	; 0x0d
    380e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3810:	6b 85       	ldd	r22, Y+11	; 0x0b
    3812:	7c 85       	ldd	r23, Y+12	; 0x0c
    3814:	8d 85       	ldd	r24, Y+13	; 0x0d
    3816:	9e 85       	ldd	r25, Y+14	; 0x0e
    3818:	20 e0       	ldi	r18, 0x00	; 0
    381a:	30 e0       	ldi	r19, 0x00	; 0
    381c:	4a ef       	ldi	r20, 0xFA	; 250
    381e:	54 e4       	ldi	r21, 0x44	; 68
    3820:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3824:	dc 01       	movw	r26, r24
    3826:	cb 01       	movw	r24, r22
    3828:	8f 83       	std	Y+7, r24	; 0x07
    382a:	98 87       	std	Y+8, r25	; 0x08
    382c:	a9 87       	std	Y+9, r26	; 0x09
    382e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3830:	6f 81       	ldd	r22, Y+7	; 0x07
    3832:	78 85       	ldd	r23, Y+8	; 0x08
    3834:	89 85       	ldd	r24, Y+9	; 0x09
    3836:	9a 85       	ldd	r25, Y+10	; 0x0a
    3838:	20 e0       	ldi	r18, 0x00	; 0
    383a:	30 e0       	ldi	r19, 0x00	; 0
    383c:	40 e8       	ldi	r20, 0x80	; 128
    383e:	5f e3       	ldi	r21, 0x3F	; 63
    3840:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3844:	88 23       	and	r24, r24
    3846:	2c f4       	brge	.+10     	; 0x3852 <main+0x1e10>
		__ticks = 1;
    3848:	81 e0       	ldi	r24, 0x01	; 1
    384a:	90 e0       	ldi	r25, 0x00	; 0
    384c:	9e 83       	std	Y+6, r25	; 0x06
    384e:	8d 83       	std	Y+5, r24	; 0x05
    3850:	3f c0       	rjmp	.+126    	; 0x38d0 <main+0x1e8e>
	else if (__tmp > 65535)
    3852:	6f 81       	ldd	r22, Y+7	; 0x07
    3854:	78 85       	ldd	r23, Y+8	; 0x08
    3856:	89 85       	ldd	r24, Y+9	; 0x09
    3858:	9a 85       	ldd	r25, Y+10	; 0x0a
    385a:	20 e0       	ldi	r18, 0x00	; 0
    385c:	3f ef       	ldi	r19, 0xFF	; 255
    385e:	4f e7       	ldi	r20, 0x7F	; 127
    3860:	57 e4       	ldi	r21, 0x47	; 71
    3862:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3866:	18 16       	cp	r1, r24
    3868:	4c f5       	brge	.+82     	; 0x38bc <main+0x1e7a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    386a:	6b 85       	ldd	r22, Y+11	; 0x0b
    386c:	7c 85       	ldd	r23, Y+12	; 0x0c
    386e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3870:	9e 85       	ldd	r25, Y+14	; 0x0e
    3872:	20 e0       	ldi	r18, 0x00	; 0
    3874:	30 e0       	ldi	r19, 0x00	; 0
    3876:	40 e2       	ldi	r20, 0x20	; 32
    3878:	51 e4       	ldi	r21, 0x41	; 65
    387a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    387e:	dc 01       	movw	r26, r24
    3880:	cb 01       	movw	r24, r22
    3882:	bc 01       	movw	r22, r24
    3884:	cd 01       	movw	r24, r26
    3886:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    388a:	dc 01       	movw	r26, r24
    388c:	cb 01       	movw	r24, r22
    388e:	9e 83       	std	Y+6, r25	; 0x06
    3890:	8d 83       	std	Y+5, r24	; 0x05
    3892:	0f c0       	rjmp	.+30     	; 0x38b2 <main+0x1e70>
    3894:	88 ec       	ldi	r24, 0xC8	; 200
    3896:	90 e0       	ldi	r25, 0x00	; 0
    3898:	9c 83       	std	Y+4, r25	; 0x04
    389a:	8b 83       	std	Y+3, r24	; 0x03
    389c:	8b 81       	ldd	r24, Y+3	; 0x03
    389e:	9c 81       	ldd	r25, Y+4	; 0x04
    38a0:	01 97       	sbiw	r24, 0x01	; 1
    38a2:	f1 f7       	brne	.-4      	; 0x38a0 <main+0x1e5e>
    38a4:	9c 83       	std	Y+4, r25	; 0x04
    38a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38a8:	8d 81       	ldd	r24, Y+5	; 0x05
    38aa:	9e 81       	ldd	r25, Y+6	; 0x06
    38ac:	01 97       	sbiw	r24, 0x01	; 1
    38ae:	9e 83       	std	Y+6, r25	; 0x06
    38b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38b2:	8d 81       	ldd	r24, Y+5	; 0x05
    38b4:	9e 81       	ldd	r25, Y+6	; 0x06
    38b6:	00 97       	sbiw	r24, 0x00	; 0
    38b8:	69 f7       	brne	.-38     	; 0x3894 <main+0x1e52>
    38ba:	14 c0       	rjmp	.+40     	; 0x38e4 <main+0x1ea2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38bc:	6f 81       	ldd	r22, Y+7	; 0x07
    38be:	78 85       	ldd	r23, Y+8	; 0x08
    38c0:	89 85       	ldd	r24, Y+9	; 0x09
    38c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    38c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    38c8:	dc 01       	movw	r26, r24
    38ca:	cb 01       	movw	r24, r22
    38cc:	9e 83       	std	Y+6, r25	; 0x06
    38ce:	8d 83       	std	Y+5, r24	; 0x05
    38d0:	8d 81       	ldd	r24, Y+5	; 0x05
    38d2:	9e 81       	ldd	r25, Y+6	; 0x06
    38d4:	9a 83       	std	Y+2, r25	; 0x02
    38d6:	89 83       	std	Y+1, r24	; 0x01
    38d8:	89 81       	ldd	r24, Y+1	; 0x01
    38da:	9a 81       	ldd	r25, Y+2	; 0x02
    38dc:	01 97       	sbiw	r24, 0x01	; 1
    38de:	f1 f7       	brne	.-4      	; 0x38dc <main+0x1e9a>
    38e0:	9a 83       	std	Y+2, r25	; 0x02
    38e2:	89 83       	std	Y+1, r24	; 0x01
				}
				_delay_ms(500);


				CLCD_voidGoToXY (4u,1u);
    38e4:	84 e0       	ldi	r24, 0x04	; 4
    38e6:	61 e0       	ldi	r22, 0x01	; 1
    38e8:	0e 94 e6 07 	call	0xfcc	; 0xfcc <CLCD_voidGoToXY>
				CLCD_u8SendString (" ");
    38ec:	88 e7       	ldi	r24, 0x78	; 120
    38ee:	90 e0       	ldi	r25, 0x00	; 0
    38f0:	0e 94 32 07 	call	0xe64	; 0xe64 <CLCD_u8SendString>
				Local_u8Xpos=0;
    38f4:	fe 01       	movw	r30, r28
    38f6:	e0 50       	subi	r30, 0x00	; 0
    38f8:	ff 4f       	sbci	r31, 0xFF	; 255
    38fa:	10 82       	st	Z, r1
				Local_u8Ypos=1;
    38fc:	fe 01       	movw	r30, r28
    38fe:	e1 50       	subi	r30, 0x01	; 1
    3900:	ff 4f       	sbci	r31, 0xFF	; 255
    3902:	81 e0       	ldi	r24, 0x01	; 1
    3904:	80 83       	st	Z, r24
				CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    3906:	9e 01       	movw	r18, r28
    3908:	2f 5f       	subi	r18, 0xFF	; 255
    390a:	3e 4f       	sbci	r19, 0xFE	; 254
    390c:	fe 01       	movw	r30, r28
    390e:	e0 50       	subi	r30, 0x00	; 0
    3910:	ff 4f       	sbci	r31, 0xFF	; 255
    3912:	de 01       	movw	r26, r28
    3914:	a1 50       	subi	r26, 0x01	; 1
    3916:	bf 4f       	sbci	r27, 0xFF	; 255
    3918:	80 e0       	ldi	r24, 0x00	; 0
    391a:	b9 01       	movw	r22, r18
    391c:	40 81       	ld	r20, Z
    391e:	2c 91       	ld	r18, X
    3920:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);




		while(Local_u8Xpos<=4)
    3924:	fe 01       	movw	r30, r28
    3926:	e0 50       	subi	r30, 0x00	; 0
    3928:	ff 4f       	sbci	r31, 0xFF	; 255
    392a:	80 81       	ld	r24, Z
    392c:	85 30       	cpi	r24, 0x05	; 5
    392e:	10 f4       	brcc	.+4      	; 0x3934 <main+0x1ef2>
    3930:	0c 94 c2 0d 	jmp	0x1b84	; 0x1b84 <main+0x142>
    3934:	0c 94 96 0d 	jmp	0x1b2c	; 0x1b2c <main+0xea>

00003938 <__mulsi3>:
    3938:	62 9f       	mul	r22, r18
    393a:	d0 01       	movw	r26, r0
    393c:	73 9f       	mul	r23, r19
    393e:	f0 01       	movw	r30, r0
    3940:	82 9f       	mul	r24, r18
    3942:	e0 0d       	add	r30, r0
    3944:	f1 1d       	adc	r31, r1
    3946:	64 9f       	mul	r22, r20
    3948:	e0 0d       	add	r30, r0
    394a:	f1 1d       	adc	r31, r1
    394c:	92 9f       	mul	r25, r18
    394e:	f0 0d       	add	r31, r0
    3950:	83 9f       	mul	r24, r19
    3952:	f0 0d       	add	r31, r0
    3954:	74 9f       	mul	r23, r20
    3956:	f0 0d       	add	r31, r0
    3958:	65 9f       	mul	r22, r21
    395a:	f0 0d       	add	r31, r0
    395c:	99 27       	eor	r25, r25
    395e:	72 9f       	mul	r23, r18
    3960:	b0 0d       	add	r27, r0
    3962:	e1 1d       	adc	r30, r1
    3964:	f9 1f       	adc	r31, r25
    3966:	63 9f       	mul	r22, r19
    3968:	b0 0d       	add	r27, r0
    396a:	e1 1d       	adc	r30, r1
    396c:	f9 1f       	adc	r31, r25
    396e:	bd 01       	movw	r22, r26
    3970:	cf 01       	movw	r24, r30
    3972:	11 24       	eor	r1, r1
    3974:	08 95       	ret

00003976 <__divmodsi4>:
    3976:	97 fb       	bst	r25, 7
    3978:	09 2e       	mov	r0, r25
    397a:	05 26       	eor	r0, r21
    397c:	0e d0       	rcall	.+28     	; 0x399a <__divmodsi4_neg1>
    397e:	57 fd       	sbrc	r21, 7
    3980:	04 d0       	rcall	.+8      	; 0x398a <__divmodsi4_neg2>
    3982:	14 d0       	rcall	.+40     	; 0x39ac <__udivmodsi4>
    3984:	0a d0       	rcall	.+20     	; 0x399a <__divmodsi4_neg1>
    3986:	00 1c       	adc	r0, r0
    3988:	38 f4       	brcc	.+14     	; 0x3998 <__divmodsi4_exit>

0000398a <__divmodsi4_neg2>:
    398a:	50 95       	com	r21
    398c:	40 95       	com	r20
    398e:	30 95       	com	r19
    3990:	21 95       	neg	r18
    3992:	3f 4f       	sbci	r19, 0xFF	; 255
    3994:	4f 4f       	sbci	r20, 0xFF	; 255
    3996:	5f 4f       	sbci	r21, 0xFF	; 255

00003998 <__divmodsi4_exit>:
    3998:	08 95       	ret

0000399a <__divmodsi4_neg1>:
    399a:	f6 f7       	brtc	.-4      	; 0x3998 <__divmodsi4_exit>
    399c:	90 95       	com	r25
    399e:	80 95       	com	r24
    39a0:	70 95       	com	r23
    39a2:	61 95       	neg	r22
    39a4:	7f 4f       	sbci	r23, 0xFF	; 255
    39a6:	8f 4f       	sbci	r24, 0xFF	; 255
    39a8:	9f 4f       	sbci	r25, 0xFF	; 255
    39aa:	08 95       	ret

000039ac <__udivmodsi4>:
    39ac:	a1 e2       	ldi	r26, 0x21	; 33
    39ae:	1a 2e       	mov	r1, r26
    39b0:	aa 1b       	sub	r26, r26
    39b2:	bb 1b       	sub	r27, r27
    39b4:	fd 01       	movw	r30, r26
    39b6:	0d c0       	rjmp	.+26     	; 0x39d2 <__udivmodsi4_ep>

000039b8 <__udivmodsi4_loop>:
    39b8:	aa 1f       	adc	r26, r26
    39ba:	bb 1f       	adc	r27, r27
    39bc:	ee 1f       	adc	r30, r30
    39be:	ff 1f       	adc	r31, r31
    39c0:	a2 17       	cp	r26, r18
    39c2:	b3 07       	cpc	r27, r19
    39c4:	e4 07       	cpc	r30, r20
    39c6:	f5 07       	cpc	r31, r21
    39c8:	20 f0       	brcs	.+8      	; 0x39d2 <__udivmodsi4_ep>
    39ca:	a2 1b       	sub	r26, r18
    39cc:	b3 0b       	sbc	r27, r19
    39ce:	e4 0b       	sbc	r30, r20
    39d0:	f5 0b       	sbc	r31, r21

000039d2 <__udivmodsi4_ep>:
    39d2:	66 1f       	adc	r22, r22
    39d4:	77 1f       	adc	r23, r23
    39d6:	88 1f       	adc	r24, r24
    39d8:	99 1f       	adc	r25, r25
    39da:	1a 94       	dec	r1
    39dc:	69 f7       	brne	.-38     	; 0x39b8 <__udivmodsi4_loop>
    39de:	60 95       	com	r22
    39e0:	70 95       	com	r23
    39e2:	80 95       	com	r24
    39e4:	90 95       	com	r25
    39e6:	9b 01       	movw	r18, r22
    39e8:	ac 01       	movw	r20, r24
    39ea:	bd 01       	movw	r22, r26
    39ec:	cf 01       	movw	r24, r30
    39ee:	08 95       	ret

000039f0 <__prologue_saves__>:
    39f0:	2f 92       	push	r2
    39f2:	3f 92       	push	r3
    39f4:	4f 92       	push	r4
    39f6:	5f 92       	push	r5
    39f8:	6f 92       	push	r6
    39fa:	7f 92       	push	r7
    39fc:	8f 92       	push	r8
    39fe:	9f 92       	push	r9
    3a00:	af 92       	push	r10
    3a02:	bf 92       	push	r11
    3a04:	cf 92       	push	r12
    3a06:	df 92       	push	r13
    3a08:	ef 92       	push	r14
    3a0a:	ff 92       	push	r15
    3a0c:	0f 93       	push	r16
    3a0e:	1f 93       	push	r17
    3a10:	cf 93       	push	r28
    3a12:	df 93       	push	r29
    3a14:	cd b7       	in	r28, 0x3d	; 61
    3a16:	de b7       	in	r29, 0x3e	; 62
    3a18:	ca 1b       	sub	r28, r26
    3a1a:	db 0b       	sbc	r29, r27
    3a1c:	0f b6       	in	r0, 0x3f	; 63
    3a1e:	f8 94       	cli
    3a20:	de bf       	out	0x3e, r29	; 62
    3a22:	0f be       	out	0x3f, r0	; 63
    3a24:	cd bf       	out	0x3d, r28	; 61
    3a26:	09 94       	ijmp

00003a28 <__epilogue_restores__>:
    3a28:	2a 88       	ldd	r2, Y+18	; 0x12
    3a2a:	39 88       	ldd	r3, Y+17	; 0x11
    3a2c:	48 88       	ldd	r4, Y+16	; 0x10
    3a2e:	5f 84       	ldd	r5, Y+15	; 0x0f
    3a30:	6e 84       	ldd	r6, Y+14	; 0x0e
    3a32:	7d 84       	ldd	r7, Y+13	; 0x0d
    3a34:	8c 84       	ldd	r8, Y+12	; 0x0c
    3a36:	9b 84       	ldd	r9, Y+11	; 0x0b
    3a38:	aa 84       	ldd	r10, Y+10	; 0x0a
    3a3a:	b9 84       	ldd	r11, Y+9	; 0x09
    3a3c:	c8 84       	ldd	r12, Y+8	; 0x08
    3a3e:	df 80       	ldd	r13, Y+7	; 0x07
    3a40:	ee 80       	ldd	r14, Y+6	; 0x06
    3a42:	fd 80       	ldd	r15, Y+5	; 0x05
    3a44:	0c 81       	ldd	r16, Y+4	; 0x04
    3a46:	1b 81       	ldd	r17, Y+3	; 0x03
    3a48:	aa 81       	ldd	r26, Y+2	; 0x02
    3a4a:	b9 81       	ldd	r27, Y+1	; 0x01
    3a4c:	ce 0f       	add	r28, r30
    3a4e:	d1 1d       	adc	r29, r1
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	f8 94       	cli
    3a54:	de bf       	out	0x3e, r29	; 62
    3a56:	0f be       	out	0x3f, r0	; 63
    3a58:	cd bf       	out	0x3d, r28	; 61
    3a5a:	ed 01       	movw	r28, r26
    3a5c:	08 95       	ret

00003a5e <memcpy>:
    3a5e:	fb 01       	movw	r30, r22
    3a60:	dc 01       	movw	r26, r24
    3a62:	02 c0       	rjmp	.+4      	; 0x3a68 <memcpy+0xa>
    3a64:	01 90       	ld	r0, Z+
    3a66:	0d 92       	st	X+, r0
    3a68:	41 50       	subi	r20, 0x01	; 1
    3a6a:	50 40       	sbci	r21, 0x00	; 0
    3a6c:	d8 f7       	brcc	.-10     	; 0x3a64 <memcpy+0x6>
    3a6e:	08 95       	ret

00003a70 <strcat>:
    3a70:	fb 01       	movw	r30, r22
    3a72:	dc 01       	movw	r26, r24
    3a74:	0d 90       	ld	r0, X+
    3a76:	00 20       	and	r0, r0
    3a78:	e9 f7       	brne	.-6      	; 0x3a74 <strcat+0x4>
    3a7a:	11 97       	sbiw	r26, 0x01	; 1
    3a7c:	01 90       	ld	r0, Z+
    3a7e:	0d 92       	st	X+, r0
    3a80:	00 20       	and	r0, r0
    3a82:	e1 f7       	brne	.-8      	; 0x3a7c <strcat+0xc>
    3a84:	08 95       	ret

00003a86 <strcpy>:
    3a86:	fb 01       	movw	r30, r22
    3a88:	dc 01       	movw	r26, r24
    3a8a:	01 90       	ld	r0, Z+
    3a8c:	0d 92       	st	X+, r0
    3a8e:	00 20       	and	r0, r0
    3a90:	e1 f7       	brne	.-8      	; 0x3a8a <strcpy+0x4>
    3a92:	08 95       	ret

00003a94 <strlen>:
    3a94:	fc 01       	movw	r30, r24
    3a96:	01 90       	ld	r0, Z+
    3a98:	00 20       	and	r0, r0
    3a9a:	e9 f7       	brne	.-6      	; 0x3a96 <strlen+0x2>
    3a9c:	80 95       	com	r24
    3a9e:	90 95       	com	r25
    3aa0:	8e 0f       	add	r24, r30
    3aa2:	9f 1f       	adc	r25, r31
    3aa4:	08 95       	ret

00003aa6 <sprintf>:
    3aa6:	ae e0       	ldi	r26, 0x0E	; 14
    3aa8:	b0 e0       	ldi	r27, 0x00	; 0
    3aaa:	e9 e5       	ldi	r30, 0x59	; 89
    3aac:	fd e1       	ldi	r31, 0x1D	; 29
    3aae:	0c 94 06 1d 	jmp	0x3a0c	; 0x3a0c <__prologue_saves__+0x1c>
    3ab2:	0d 89       	ldd	r16, Y+21	; 0x15
    3ab4:	1e 89       	ldd	r17, Y+22	; 0x16
    3ab6:	86 e0       	ldi	r24, 0x06	; 6
    3ab8:	8c 83       	std	Y+4, r24	; 0x04
    3aba:	1a 83       	std	Y+2, r17	; 0x02
    3abc:	09 83       	std	Y+1, r16	; 0x01
    3abe:	8f ef       	ldi	r24, 0xFF	; 255
    3ac0:	9f e7       	ldi	r25, 0x7F	; 127
    3ac2:	9e 83       	std	Y+6, r25	; 0x06
    3ac4:	8d 83       	std	Y+5, r24	; 0x05
    3ac6:	9e 01       	movw	r18, r28
    3ac8:	27 5e       	subi	r18, 0xE7	; 231
    3aca:	3f 4f       	sbci	r19, 0xFF	; 255
    3acc:	ce 01       	movw	r24, r28
    3ace:	01 96       	adiw	r24, 0x01	; 1
    3ad0:	6f 89       	ldd	r22, Y+23	; 0x17
    3ad2:	78 8d       	ldd	r23, Y+24	; 0x18
    3ad4:	a9 01       	movw	r20, r18
    3ad6:	0e 94 77 1d 	call	0x3aee	; 0x3aee <vfprintf>
    3ada:	2f 81       	ldd	r18, Y+7	; 0x07
    3adc:	38 85       	ldd	r19, Y+8	; 0x08
    3ade:	02 0f       	add	r16, r18
    3ae0:	13 1f       	adc	r17, r19
    3ae2:	f8 01       	movw	r30, r16
    3ae4:	10 82       	st	Z, r1
    3ae6:	2e 96       	adiw	r28, 0x0e	; 14
    3ae8:	e4 e0       	ldi	r30, 0x04	; 4
    3aea:	0c 94 22 1d 	jmp	0x3a44	; 0x3a44 <__epilogue_restores__+0x1c>

00003aee <vfprintf>:
    3aee:	ab e0       	ldi	r26, 0x0B	; 11
    3af0:	b0 e0       	ldi	r27, 0x00	; 0
    3af2:	ed e7       	ldi	r30, 0x7D	; 125
    3af4:	fd e1       	ldi	r31, 0x1D	; 29
    3af6:	0c 94 f8 1c 	jmp	0x39f0	; 0x39f0 <__prologue_saves__>
    3afa:	3c 01       	movw	r6, r24
    3afc:	2b 01       	movw	r4, r22
    3afe:	5a 01       	movw	r10, r20
    3b00:	fc 01       	movw	r30, r24
    3b02:	17 82       	std	Z+7, r1	; 0x07
    3b04:	16 82       	std	Z+6, r1	; 0x06
    3b06:	83 81       	ldd	r24, Z+3	; 0x03
    3b08:	81 fd       	sbrc	r24, 1
    3b0a:	03 c0       	rjmp	.+6      	; 0x3b12 <vfprintf+0x24>
    3b0c:	6f ef       	ldi	r22, 0xFF	; 255
    3b0e:	7f ef       	ldi	r23, 0xFF	; 255
    3b10:	c6 c1       	rjmp	.+908    	; 0x3e9e <vfprintf+0x3b0>
    3b12:	9a e0       	ldi	r25, 0x0A	; 10
    3b14:	89 2e       	mov	r8, r25
    3b16:	1e 01       	movw	r2, r28
    3b18:	08 94       	sec
    3b1a:	21 1c       	adc	r2, r1
    3b1c:	31 1c       	adc	r3, r1
    3b1e:	f3 01       	movw	r30, r6
    3b20:	23 81       	ldd	r18, Z+3	; 0x03
    3b22:	f2 01       	movw	r30, r4
    3b24:	23 fd       	sbrc	r18, 3
    3b26:	85 91       	lpm	r24, Z+
    3b28:	23 ff       	sbrs	r18, 3
    3b2a:	81 91       	ld	r24, Z+
    3b2c:	2f 01       	movw	r4, r30
    3b2e:	88 23       	and	r24, r24
    3b30:	09 f4       	brne	.+2      	; 0x3b34 <vfprintf+0x46>
    3b32:	b2 c1       	rjmp	.+868    	; 0x3e98 <vfprintf+0x3aa>
    3b34:	85 32       	cpi	r24, 0x25	; 37
    3b36:	39 f4       	brne	.+14     	; 0x3b46 <vfprintf+0x58>
    3b38:	23 fd       	sbrc	r18, 3
    3b3a:	85 91       	lpm	r24, Z+
    3b3c:	23 ff       	sbrs	r18, 3
    3b3e:	81 91       	ld	r24, Z+
    3b40:	2f 01       	movw	r4, r30
    3b42:	85 32       	cpi	r24, 0x25	; 37
    3b44:	29 f4       	brne	.+10     	; 0x3b50 <vfprintf+0x62>
    3b46:	90 e0       	ldi	r25, 0x00	; 0
    3b48:	b3 01       	movw	r22, r6
    3b4a:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3b4e:	e7 cf       	rjmp	.-50     	; 0x3b1e <vfprintf+0x30>
    3b50:	98 2f       	mov	r25, r24
    3b52:	ff 24       	eor	r15, r15
    3b54:	ee 24       	eor	r14, r14
    3b56:	99 24       	eor	r9, r9
    3b58:	ff e1       	ldi	r31, 0x1F	; 31
    3b5a:	ff 15       	cp	r31, r15
    3b5c:	d0 f0       	brcs	.+52     	; 0x3b92 <vfprintf+0xa4>
    3b5e:	9b 32       	cpi	r25, 0x2B	; 43
    3b60:	69 f0       	breq	.+26     	; 0x3b7c <vfprintf+0x8e>
    3b62:	9c 32       	cpi	r25, 0x2C	; 44
    3b64:	28 f4       	brcc	.+10     	; 0x3b70 <vfprintf+0x82>
    3b66:	90 32       	cpi	r25, 0x20	; 32
    3b68:	59 f0       	breq	.+22     	; 0x3b80 <vfprintf+0x92>
    3b6a:	93 32       	cpi	r25, 0x23	; 35
    3b6c:	91 f4       	brne	.+36     	; 0x3b92 <vfprintf+0xa4>
    3b6e:	0e c0       	rjmp	.+28     	; 0x3b8c <vfprintf+0x9e>
    3b70:	9d 32       	cpi	r25, 0x2D	; 45
    3b72:	49 f0       	breq	.+18     	; 0x3b86 <vfprintf+0x98>
    3b74:	90 33       	cpi	r25, 0x30	; 48
    3b76:	69 f4       	brne	.+26     	; 0x3b92 <vfprintf+0xa4>
    3b78:	41 e0       	ldi	r20, 0x01	; 1
    3b7a:	24 c0       	rjmp	.+72     	; 0x3bc4 <vfprintf+0xd6>
    3b7c:	52 e0       	ldi	r21, 0x02	; 2
    3b7e:	f5 2a       	or	r15, r21
    3b80:	84 e0       	ldi	r24, 0x04	; 4
    3b82:	f8 2a       	or	r15, r24
    3b84:	28 c0       	rjmp	.+80     	; 0x3bd6 <vfprintf+0xe8>
    3b86:	98 e0       	ldi	r25, 0x08	; 8
    3b88:	f9 2a       	or	r15, r25
    3b8a:	25 c0       	rjmp	.+74     	; 0x3bd6 <vfprintf+0xe8>
    3b8c:	e0 e1       	ldi	r30, 0x10	; 16
    3b8e:	fe 2a       	or	r15, r30
    3b90:	22 c0       	rjmp	.+68     	; 0x3bd6 <vfprintf+0xe8>
    3b92:	f7 fc       	sbrc	r15, 7
    3b94:	29 c0       	rjmp	.+82     	; 0x3be8 <vfprintf+0xfa>
    3b96:	89 2f       	mov	r24, r25
    3b98:	80 53       	subi	r24, 0x30	; 48
    3b9a:	8a 30       	cpi	r24, 0x0A	; 10
    3b9c:	70 f4       	brcc	.+28     	; 0x3bba <vfprintf+0xcc>
    3b9e:	f6 fe       	sbrs	r15, 6
    3ba0:	05 c0       	rjmp	.+10     	; 0x3bac <vfprintf+0xbe>
    3ba2:	98 9c       	mul	r9, r8
    3ba4:	90 2c       	mov	r9, r0
    3ba6:	11 24       	eor	r1, r1
    3ba8:	98 0e       	add	r9, r24
    3baa:	15 c0       	rjmp	.+42     	; 0x3bd6 <vfprintf+0xe8>
    3bac:	e8 9c       	mul	r14, r8
    3bae:	e0 2c       	mov	r14, r0
    3bb0:	11 24       	eor	r1, r1
    3bb2:	e8 0e       	add	r14, r24
    3bb4:	f0 e2       	ldi	r31, 0x20	; 32
    3bb6:	ff 2a       	or	r15, r31
    3bb8:	0e c0       	rjmp	.+28     	; 0x3bd6 <vfprintf+0xe8>
    3bba:	9e 32       	cpi	r25, 0x2E	; 46
    3bbc:	29 f4       	brne	.+10     	; 0x3bc8 <vfprintf+0xda>
    3bbe:	f6 fc       	sbrc	r15, 6
    3bc0:	6b c1       	rjmp	.+726    	; 0x3e98 <vfprintf+0x3aa>
    3bc2:	40 e4       	ldi	r20, 0x40	; 64
    3bc4:	f4 2a       	or	r15, r20
    3bc6:	07 c0       	rjmp	.+14     	; 0x3bd6 <vfprintf+0xe8>
    3bc8:	9c 36       	cpi	r25, 0x6C	; 108
    3bca:	19 f4       	brne	.+6      	; 0x3bd2 <vfprintf+0xe4>
    3bcc:	50 e8       	ldi	r21, 0x80	; 128
    3bce:	f5 2a       	or	r15, r21
    3bd0:	02 c0       	rjmp	.+4      	; 0x3bd6 <vfprintf+0xe8>
    3bd2:	98 36       	cpi	r25, 0x68	; 104
    3bd4:	49 f4       	brne	.+18     	; 0x3be8 <vfprintf+0xfa>
    3bd6:	f2 01       	movw	r30, r4
    3bd8:	23 fd       	sbrc	r18, 3
    3bda:	95 91       	lpm	r25, Z+
    3bdc:	23 ff       	sbrs	r18, 3
    3bde:	91 91       	ld	r25, Z+
    3be0:	2f 01       	movw	r4, r30
    3be2:	99 23       	and	r25, r25
    3be4:	09 f0       	breq	.+2      	; 0x3be8 <vfprintf+0xfa>
    3be6:	b8 cf       	rjmp	.-144    	; 0x3b58 <vfprintf+0x6a>
    3be8:	89 2f       	mov	r24, r25
    3bea:	85 54       	subi	r24, 0x45	; 69
    3bec:	83 30       	cpi	r24, 0x03	; 3
    3bee:	18 f0       	brcs	.+6      	; 0x3bf6 <vfprintf+0x108>
    3bf0:	80 52       	subi	r24, 0x20	; 32
    3bf2:	83 30       	cpi	r24, 0x03	; 3
    3bf4:	38 f4       	brcc	.+14     	; 0x3c04 <vfprintf+0x116>
    3bf6:	44 e0       	ldi	r20, 0x04	; 4
    3bf8:	50 e0       	ldi	r21, 0x00	; 0
    3bfa:	a4 0e       	add	r10, r20
    3bfc:	b5 1e       	adc	r11, r21
    3bfe:	5f e3       	ldi	r21, 0x3F	; 63
    3c00:	59 83       	std	Y+1, r21	; 0x01
    3c02:	0f c0       	rjmp	.+30     	; 0x3c22 <vfprintf+0x134>
    3c04:	93 36       	cpi	r25, 0x63	; 99
    3c06:	31 f0       	breq	.+12     	; 0x3c14 <vfprintf+0x126>
    3c08:	93 37       	cpi	r25, 0x73	; 115
    3c0a:	79 f0       	breq	.+30     	; 0x3c2a <vfprintf+0x13c>
    3c0c:	93 35       	cpi	r25, 0x53	; 83
    3c0e:	09 f0       	breq	.+2      	; 0x3c12 <vfprintf+0x124>
    3c10:	56 c0       	rjmp	.+172    	; 0x3cbe <vfprintf+0x1d0>
    3c12:	20 c0       	rjmp	.+64     	; 0x3c54 <vfprintf+0x166>
    3c14:	f5 01       	movw	r30, r10
    3c16:	80 81       	ld	r24, Z
    3c18:	89 83       	std	Y+1, r24	; 0x01
    3c1a:	42 e0       	ldi	r20, 0x02	; 2
    3c1c:	50 e0       	ldi	r21, 0x00	; 0
    3c1e:	a4 0e       	add	r10, r20
    3c20:	b5 1e       	adc	r11, r21
    3c22:	61 01       	movw	r12, r2
    3c24:	01 e0       	ldi	r16, 0x01	; 1
    3c26:	10 e0       	ldi	r17, 0x00	; 0
    3c28:	12 c0       	rjmp	.+36     	; 0x3c4e <vfprintf+0x160>
    3c2a:	f5 01       	movw	r30, r10
    3c2c:	c0 80       	ld	r12, Z
    3c2e:	d1 80       	ldd	r13, Z+1	; 0x01
    3c30:	f6 fc       	sbrc	r15, 6
    3c32:	03 c0       	rjmp	.+6      	; 0x3c3a <vfprintf+0x14c>
    3c34:	6f ef       	ldi	r22, 0xFF	; 255
    3c36:	7f ef       	ldi	r23, 0xFF	; 255
    3c38:	02 c0       	rjmp	.+4      	; 0x3c3e <vfprintf+0x150>
    3c3a:	69 2d       	mov	r22, r9
    3c3c:	70 e0       	ldi	r23, 0x00	; 0
    3c3e:	42 e0       	ldi	r20, 0x02	; 2
    3c40:	50 e0       	ldi	r21, 0x00	; 0
    3c42:	a4 0e       	add	r10, r20
    3c44:	b5 1e       	adc	r11, r21
    3c46:	c6 01       	movw	r24, r12
    3c48:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <strnlen>
    3c4c:	8c 01       	movw	r16, r24
    3c4e:	5f e7       	ldi	r21, 0x7F	; 127
    3c50:	f5 22       	and	r15, r21
    3c52:	14 c0       	rjmp	.+40     	; 0x3c7c <vfprintf+0x18e>
    3c54:	f5 01       	movw	r30, r10
    3c56:	c0 80       	ld	r12, Z
    3c58:	d1 80       	ldd	r13, Z+1	; 0x01
    3c5a:	f6 fc       	sbrc	r15, 6
    3c5c:	03 c0       	rjmp	.+6      	; 0x3c64 <vfprintf+0x176>
    3c5e:	6f ef       	ldi	r22, 0xFF	; 255
    3c60:	7f ef       	ldi	r23, 0xFF	; 255
    3c62:	02 c0       	rjmp	.+4      	; 0x3c68 <vfprintf+0x17a>
    3c64:	69 2d       	mov	r22, r9
    3c66:	70 e0       	ldi	r23, 0x00	; 0
    3c68:	42 e0       	ldi	r20, 0x02	; 2
    3c6a:	50 e0       	ldi	r21, 0x00	; 0
    3c6c:	a4 0e       	add	r10, r20
    3c6e:	b5 1e       	adc	r11, r21
    3c70:	c6 01       	movw	r24, r12
    3c72:	0e 94 54 1f 	call	0x3ea8	; 0x3ea8 <strnlen_P>
    3c76:	8c 01       	movw	r16, r24
    3c78:	50 e8       	ldi	r21, 0x80	; 128
    3c7a:	f5 2a       	or	r15, r21
    3c7c:	f3 fe       	sbrs	r15, 3
    3c7e:	07 c0       	rjmp	.+14     	; 0x3c8e <vfprintf+0x1a0>
    3c80:	1a c0       	rjmp	.+52     	; 0x3cb6 <vfprintf+0x1c8>
    3c82:	80 e2       	ldi	r24, 0x20	; 32
    3c84:	90 e0       	ldi	r25, 0x00	; 0
    3c86:	b3 01       	movw	r22, r6
    3c88:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3c8c:	ea 94       	dec	r14
    3c8e:	8e 2d       	mov	r24, r14
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	08 17       	cp	r16, r24
    3c94:	19 07       	cpc	r17, r25
    3c96:	a8 f3       	brcs	.-22     	; 0x3c82 <vfprintf+0x194>
    3c98:	0e c0       	rjmp	.+28     	; 0x3cb6 <vfprintf+0x1c8>
    3c9a:	f6 01       	movw	r30, r12
    3c9c:	f7 fc       	sbrc	r15, 7
    3c9e:	85 91       	lpm	r24, Z+
    3ca0:	f7 fe       	sbrs	r15, 7
    3ca2:	81 91       	ld	r24, Z+
    3ca4:	6f 01       	movw	r12, r30
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	b3 01       	movw	r22, r6
    3caa:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3cae:	e1 10       	cpse	r14, r1
    3cb0:	ea 94       	dec	r14
    3cb2:	01 50       	subi	r16, 0x01	; 1
    3cb4:	10 40       	sbci	r17, 0x00	; 0
    3cb6:	01 15       	cp	r16, r1
    3cb8:	11 05       	cpc	r17, r1
    3cba:	79 f7       	brne	.-34     	; 0x3c9a <vfprintf+0x1ac>
    3cbc:	ea c0       	rjmp	.+468    	; 0x3e92 <vfprintf+0x3a4>
    3cbe:	94 36       	cpi	r25, 0x64	; 100
    3cc0:	11 f0       	breq	.+4      	; 0x3cc6 <vfprintf+0x1d8>
    3cc2:	99 36       	cpi	r25, 0x69	; 105
    3cc4:	69 f5       	brne	.+90     	; 0x3d20 <vfprintf+0x232>
    3cc6:	f7 fe       	sbrs	r15, 7
    3cc8:	08 c0       	rjmp	.+16     	; 0x3cda <vfprintf+0x1ec>
    3cca:	f5 01       	movw	r30, r10
    3ccc:	20 81       	ld	r18, Z
    3cce:	31 81       	ldd	r19, Z+1	; 0x01
    3cd0:	42 81       	ldd	r20, Z+2	; 0x02
    3cd2:	53 81       	ldd	r21, Z+3	; 0x03
    3cd4:	84 e0       	ldi	r24, 0x04	; 4
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	0a c0       	rjmp	.+20     	; 0x3cee <vfprintf+0x200>
    3cda:	f5 01       	movw	r30, r10
    3cdc:	80 81       	ld	r24, Z
    3cde:	91 81       	ldd	r25, Z+1	; 0x01
    3ce0:	9c 01       	movw	r18, r24
    3ce2:	44 27       	eor	r20, r20
    3ce4:	37 fd       	sbrc	r19, 7
    3ce6:	40 95       	com	r20
    3ce8:	54 2f       	mov	r21, r20
    3cea:	82 e0       	ldi	r24, 0x02	; 2
    3cec:	90 e0       	ldi	r25, 0x00	; 0
    3cee:	a8 0e       	add	r10, r24
    3cf0:	b9 1e       	adc	r11, r25
    3cf2:	9f e6       	ldi	r25, 0x6F	; 111
    3cf4:	f9 22       	and	r15, r25
    3cf6:	57 ff       	sbrs	r21, 7
    3cf8:	09 c0       	rjmp	.+18     	; 0x3d0c <vfprintf+0x21e>
    3cfa:	50 95       	com	r21
    3cfc:	40 95       	com	r20
    3cfe:	30 95       	com	r19
    3d00:	21 95       	neg	r18
    3d02:	3f 4f       	sbci	r19, 0xFF	; 255
    3d04:	4f 4f       	sbci	r20, 0xFF	; 255
    3d06:	5f 4f       	sbci	r21, 0xFF	; 255
    3d08:	e0 e8       	ldi	r30, 0x80	; 128
    3d0a:	fe 2a       	or	r15, r30
    3d0c:	ca 01       	movw	r24, r20
    3d0e:	b9 01       	movw	r22, r18
    3d10:	a1 01       	movw	r20, r2
    3d12:	2a e0       	ldi	r18, 0x0A	; 10
    3d14:	30 e0       	ldi	r19, 0x00	; 0
    3d16:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <__ultoa_invert>
    3d1a:	d8 2e       	mov	r13, r24
    3d1c:	d2 18       	sub	r13, r2
    3d1e:	40 c0       	rjmp	.+128    	; 0x3da0 <vfprintf+0x2b2>
    3d20:	95 37       	cpi	r25, 0x75	; 117
    3d22:	29 f4       	brne	.+10     	; 0x3d2e <vfprintf+0x240>
    3d24:	1f 2d       	mov	r17, r15
    3d26:	1f 7e       	andi	r17, 0xEF	; 239
    3d28:	2a e0       	ldi	r18, 0x0A	; 10
    3d2a:	30 e0       	ldi	r19, 0x00	; 0
    3d2c:	1d c0       	rjmp	.+58     	; 0x3d68 <vfprintf+0x27a>
    3d2e:	1f 2d       	mov	r17, r15
    3d30:	19 7f       	andi	r17, 0xF9	; 249
    3d32:	9f 36       	cpi	r25, 0x6F	; 111
    3d34:	61 f0       	breq	.+24     	; 0x3d4e <vfprintf+0x260>
    3d36:	90 37       	cpi	r25, 0x70	; 112
    3d38:	20 f4       	brcc	.+8      	; 0x3d42 <vfprintf+0x254>
    3d3a:	98 35       	cpi	r25, 0x58	; 88
    3d3c:	09 f0       	breq	.+2      	; 0x3d40 <vfprintf+0x252>
    3d3e:	ac c0       	rjmp	.+344    	; 0x3e98 <vfprintf+0x3aa>
    3d40:	0f c0       	rjmp	.+30     	; 0x3d60 <vfprintf+0x272>
    3d42:	90 37       	cpi	r25, 0x70	; 112
    3d44:	39 f0       	breq	.+14     	; 0x3d54 <vfprintf+0x266>
    3d46:	98 37       	cpi	r25, 0x78	; 120
    3d48:	09 f0       	breq	.+2      	; 0x3d4c <vfprintf+0x25e>
    3d4a:	a6 c0       	rjmp	.+332    	; 0x3e98 <vfprintf+0x3aa>
    3d4c:	04 c0       	rjmp	.+8      	; 0x3d56 <vfprintf+0x268>
    3d4e:	28 e0       	ldi	r18, 0x08	; 8
    3d50:	30 e0       	ldi	r19, 0x00	; 0
    3d52:	0a c0       	rjmp	.+20     	; 0x3d68 <vfprintf+0x27a>
    3d54:	10 61       	ori	r17, 0x10	; 16
    3d56:	14 fd       	sbrc	r17, 4
    3d58:	14 60       	ori	r17, 0x04	; 4
    3d5a:	20 e1       	ldi	r18, 0x10	; 16
    3d5c:	30 e0       	ldi	r19, 0x00	; 0
    3d5e:	04 c0       	rjmp	.+8      	; 0x3d68 <vfprintf+0x27a>
    3d60:	14 fd       	sbrc	r17, 4
    3d62:	16 60       	ori	r17, 0x06	; 6
    3d64:	20 e1       	ldi	r18, 0x10	; 16
    3d66:	32 e0       	ldi	r19, 0x02	; 2
    3d68:	17 ff       	sbrs	r17, 7
    3d6a:	08 c0       	rjmp	.+16     	; 0x3d7c <vfprintf+0x28e>
    3d6c:	f5 01       	movw	r30, r10
    3d6e:	60 81       	ld	r22, Z
    3d70:	71 81       	ldd	r23, Z+1	; 0x01
    3d72:	82 81       	ldd	r24, Z+2	; 0x02
    3d74:	93 81       	ldd	r25, Z+3	; 0x03
    3d76:	44 e0       	ldi	r20, 0x04	; 4
    3d78:	50 e0       	ldi	r21, 0x00	; 0
    3d7a:	08 c0       	rjmp	.+16     	; 0x3d8c <vfprintf+0x29e>
    3d7c:	f5 01       	movw	r30, r10
    3d7e:	80 81       	ld	r24, Z
    3d80:	91 81       	ldd	r25, Z+1	; 0x01
    3d82:	bc 01       	movw	r22, r24
    3d84:	80 e0       	ldi	r24, 0x00	; 0
    3d86:	90 e0       	ldi	r25, 0x00	; 0
    3d88:	42 e0       	ldi	r20, 0x02	; 2
    3d8a:	50 e0       	ldi	r21, 0x00	; 0
    3d8c:	a4 0e       	add	r10, r20
    3d8e:	b5 1e       	adc	r11, r21
    3d90:	a1 01       	movw	r20, r2
    3d92:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <__ultoa_invert>
    3d96:	d8 2e       	mov	r13, r24
    3d98:	d2 18       	sub	r13, r2
    3d9a:	8f e7       	ldi	r24, 0x7F	; 127
    3d9c:	f8 2e       	mov	r15, r24
    3d9e:	f1 22       	and	r15, r17
    3da0:	f6 fe       	sbrs	r15, 6
    3da2:	0b c0       	rjmp	.+22     	; 0x3dba <vfprintf+0x2cc>
    3da4:	5e ef       	ldi	r21, 0xFE	; 254
    3da6:	f5 22       	and	r15, r21
    3da8:	d9 14       	cp	r13, r9
    3daa:	38 f4       	brcc	.+14     	; 0x3dba <vfprintf+0x2cc>
    3dac:	f4 fe       	sbrs	r15, 4
    3dae:	07 c0       	rjmp	.+14     	; 0x3dbe <vfprintf+0x2d0>
    3db0:	f2 fc       	sbrc	r15, 2
    3db2:	05 c0       	rjmp	.+10     	; 0x3dbe <vfprintf+0x2d0>
    3db4:	8f ee       	ldi	r24, 0xEF	; 239
    3db6:	f8 22       	and	r15, r24
    3db8:	02 c0       	rjmp	.+4      	; 0x3dbe <vfprintf+0x2d0>
    3dba:	1d 2d       	mov	r17, r13
    3dbc:	01 c0       	rjmp	.+2      	; 0x3dc0 <vfprintf+0x2d2>
    3dbe:	19 2d       	mov	r17, r9
    3dc0:	f4 fe       	sbrs	r15, 4
    3dc2:	0d c0       	rjmp	.+26     	; 0x3dde <vfprintf+0x2f0>
    3dc4:	fe 01       	movw	r30, r28
    3dc6:	ed 0d       	add	r30, r13
    3dc8:	f1 1d       	adc	r31, r1
    3dca:	80 81       	ld	r24, Z
    3dcc:	80 33       	cpi	r24, 0x30	; 48
    3dce:	19 f4       	brne	.+6      	; 0x3dd6 <vfprintf+0x2e8>
    3dd0:	99 ee       	ldi	r25, 0xE9	; 233
    3dd2:	f9 22       	and	r15, r25
    3dd4:	08 c0       	rjmp	.+16     	; 0x3de6 <vfprintf+0x2f8>
    3dd6:	1f 5f       	subi	r17, 0xFF	; 255
    3dd8:	f2 fe       	sbrs	r15, 2
    3dda:	05 c0       	rjmp	.+10     	; 0x3de6 <vfprintf+0x2f8>
    3ddc:	03 c0       	rjmp	.+6      	; 0x3de4 <vfprintf+0x2f6>
    3dde:	8f 2d       	mov	r24, r15
    3de0:	86 78       	andi	r24, 0x86	; 134
    3de2:	09 f0       	breq	.+2      	; 0x3de6 <vfprintf+0x2f8>
    3de4:	1f 5f       	subi	r17, 0xFF	; 255
    3de6:	0f 2d       	mov	r16, r15
    3de8:	f3 fc       	sbrc	r15, 3
    3dea:	14 c0       	rjmp	.+40     	; 0x3e14 <vfprintf+0x326>
    3dec:	f0 fe       	sbrs	r15, 0
    3dee:	0f c0       	rjmp	.+30     	; 0x3e0e <vfprintf+0x320>
    3df0:	1e 15       	cp	r17, r14
    3df2:	10 f0       	brcs	.+4      	; 0x3df8 <vfprintf+0x30a>
    3df4:	9d 2c       	mov	r9, r13
    3df6:	0b c0       	rjmp	.+22     	; 0x3e0e <vfprintf+0x320>
    3df8:	9d 2c       	mov	r9, r13
    3dfa:	9e 0c       	add	r9, r14
    3dfc:	91 1a       	sub	r9, r17
    3dfe:	1e 2d       	mov	r17, r14
    3e00:	06 c0       	rjmp	.+12     	; 0x3e0e <vfprintf+0x320>
    3e02:	80 e2       	ldi	r24, 0x20	; 32
    3e04:	90 e0       	ldi	r25, 0x00	; 0
    3e06:	b3 01       	movw	r22, r6
    3e08:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e0c:	1f 5f       	subi	r17, 0xFF	; 255
    3e0e:	1e 15       	cp	r17, r14
    3e10:	c0 f3       	brcs	.-16     	; 0x3e02 <vfprintf+0x314>
    3e12:	04 c0       	rjmp	.+8      	; 0x3e1c <vfprintf+0x32e>
    3e14:	1e 15       	cp	r17, r14
    3e16:	10 f4       	brcc	.+4      	; 0x3e1c <vfprintf+0x32e>
    3e18:	e1 1a       	sub	r14, r17
    3e1a:	01 c0       	rjmp	.+2      	; 0x3e1e <vfprintf+0x330>
    3e1c:	ee 24       	eor	r14, r14
    3e1e:	04 ff       	sbrs	r16, 4
    3e20:	0f c0       	rjmp	.+30     	; 0x3e40 <vfprintf+0x352>
    3e22:	80 e3       	ldi	r24, 0x30	; 48
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	b3 01       	movw	r22, r6
    3e28:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e2c:	02 ff       	sbrs	r16, 2
    3e2e:	1d c0       	rjmp	.+58     	; 0x3e6a <vfprintf+0x37c>
    3e30:	01 fd       	sbrc	r16, 1
    3e32:	03 c0       	rjmp	.+6      	; 0x3e3a <vfprintf+0x34c>
    3e34:	88 e7       	ldi	r24, 0x78	; 120
    3e36:	90 e0       	ldi	r25, 0x00	; 0
    3e38:	0e c0       	rjmp	.+28     	; 0x3e56 <vfprintf+0x368>
    3e3a:	88 e5       	ldi	r24, 0x58	; 88
    3e3c:	90 e0       	ldi	r25, 0x00	; 0
    3e3e:	0b c0       	rjmp	.+22     	; 0x3e56 <vfprintf+0x368>
    3e40:	80 2f       	mov	r24, r16
    3e42:	86 78       	andi	r24, 0x86	; 134
    3e44:	91 f0       	breq	.+36     	; 0x3e6a <vfprintf+0x37c>
    3e46:	01 ff       	sbrs	r16, 1
    3e48:	02 c0       	rjmp	.+4      	; 0x3e4e <vfprintf+0x360>
    3e4a:	8b e2       	ldi	r24, 0x2B	; 43
    3e4c:	01 c0       	rjmp	.+2      	; 0x3e50 <vfprintf+0x362>
    3e4e:	80 e2       	ldi	r24, 0x20	; 32
    3e50:	f7 fc       	sbrc	r15, 7
    3e52:	8d e2       	ldi	r24, 0x2D	; 45
    3e54:	90 e0       	ldi	r25, 0x00	; 0
    3e56:	b3 01       	movw	r22, r6
    3e58:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e5c:	06 c0       	rjmp	.+12     	; 0x3e6a <vfprintf+0x37c>
    3e5e:	80 e3       	ldi	r24, 0x30	; 48
    3e60:	90 e0       	ldi	r25, 0x00	; 0
    3e62:	b3 01       	movw	r22, r6
    3e64:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e68:	9a 94       	dec	r9
    3e6a:	d9 14       	cp	r13, r9
    3e6c:	c0 f3       	brcs	.-16     	; 0x3e5e <vfprintf+0x370>
    3e6e:	da 94       	dec	r13
    3e70:	f1 01       	movw	r30, r2
    3e72:	ed 0d       	add	r30, r13
    3e74:	f1 1d       	adc	r31, r1
    3e76:	80 81       	ld	r24, Z
    3e78:	90 e0       	ldi	r25, 0x00	; 0
    3e7a:	b3 01       	movw	r22, r6
    3e7c:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e80:	dd 20       	and	r13, r13
    3e82:	a9 f7       	brne	.-22     	; 0x3e6e <vfprintf+0x380>
    3e84:	06 c0       	rjmp	.+12     	; 0x3e92 <vfprintf+0x3a4>
    3e86:	80 e2       	ldi	r24, 0x20	; 32
    3e88:	90 e0       	ldi	r25, 0x00	; 0
    3e8a:	b3 01       	movw	r22, r6
    3e8c:	0e 94 6a 1f 	call	0x3ed4	; 0x3ed4 <fputc>
    3e90:	ea 94       	dec	r14
    3e92:	ee 20       	and	r14, r14
    3e94:	c1 f7       	brne	.-16     	; 0x3e86 <vfprintf+0x398>
    3e96:	43 ce       	rjmp	.-890    	; 0x3b1e <vfprintf+0x30>
    3e98:	f3 01       	movw	r30, r6
    3e9a:	66 81       	ldd	r22, Z+6	; 0x06
    3e9c:	77 81       	ldd	r23, Z+7	; 0x07
    3e9e:	cb 01       	movw	r24, r22
    3ea0:	2b 96       	adiw	r28, 0x0b	; 11
    3ea2:	e2 e1       	ldi	r30, 0x12	; 18
    3ea4:	0c 94 14 1d 	jmp	0x3a28	; 0x3a28 <__epilogue_restores__>

00003ea8 <strnlen_P>:
    3ea8:	fc 01       	movw	r30, r24
    3eaa:	05 90       	lpm	r0, Z+
    3eac:	61 50       	subi	r22, 0x01	; 1
    3eae:	70 40       	sbci	r23, 0x00	; 0
    3eb0:	01 10       	cpse	r0, r1
    3eb2:	d8 f7       	brcc	.-10     	; 0x3eaa <strnlen_P+0x2>
    3eb4:	80 95       	com	r24
    3eb6:	90 95       	com	r25
    3eb8:	8e 0f       	add	r24, r30
    3eba:	9f 1f       	adc	r25, r31
    3ebc:	08 95       	ret

00003ebe <strnlen>:
    3ebe:	fc 01       	movw	r30, r24
    3ec0:	61 50       	subi	r22, 0x01	; 1
    3ec2:	70 40       	sbci	r23, 0x00	; 0
    3ec4:	01 90       	ld	r0, Z+
    3ec6:	01 10       	cpse	r0, r1
    3ec8:	d8 f7       	brcc	.-10     	; 0x3ec0 <strnlen+0x2>
    3eca:	80 95       	com	r24
    3ecc:	90 95       	com	r25
    3ece:	8e 0f       	add	r24, r30
    3ed0:	9f 1f       	adc	r25, r31
    3ed2:	08 95       	ret

00003ed4 <fputc>:
    3ed4:	0f 93       	push	r16
    3ed6:	1f 93       	push	r17
    3ed8:	cf 93       	push	r28
    3eda:	df 93       	push	r29
    3edc:	8c 01       	movw	r16, r24
    3ede:	eb 01       	movw	r28, r22
    3ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ee2:	81 ff       	sbrs	r24, 1
    3ee4:	1b c0       	rjmp	.+54     	; 0x3f1c <fputc+0x48>
    3ee6:	82 ff       	sbrs	r24, 2
    3ee8:	0d c0       	rjmp	.+26     	; 0x3f04 <fputc+0x30>
    3eea:	2e 81       	ldd	r18, Y+6	; 0x06
    3eec:	3f 81       	ldd	r19, Y+7	; 0x07
    3eee:	8c 81       	ldd	r24, Y+4	; 0x04
    3ef0:	9d 81       	ldd	r25, Y+5	; 0x05
    3ef2:	28 17       	cp	r18, r24
    3ef4:	39 07       	cpc	r19, r25
    3ef6:	64 f4       	brge	.+24     	; 0x3f10 <fputc+0x3c>
    3ef8:	e8 81       	ld	r30, Y
    3efa:	f9 81       	ldd	r31, Y+1	; 0x01
    3efc:	01 93       	st	Z+, r16
    3efe:	f9 83       	std	Y+1, r31	; 0x01
    3f00:	e8 83       	st	Y, r30
    3f02:	06 c0       	rjmp	.+12     	; 0x3f10 <fputc+0x3c>
    3f04:	e8 85       	ldd	r30, Y+8	; 0x08
    3f06:	f9 85       	ldd	r31, Y+9	; 0x09
    3f08:	80 2f       	mov	r24, r16
    3f0a:	09 95       	icall
    3f0c:	89 2b       	or	r24, r25
    3f0e:	31 f4       	brne	.+12     	; 0x3f1c <fputc+0x48>
    3f10:	8e 81       	ldd	r24, Y+6	; 0x06
    3f12:	9f 81       	ldd	r25, Y+7	; 0x07
    3f14:	01 96       	adiw	r24, 0x01	; 1
    3f16:	9f 83       	std	Y+7, r25	; 0x07
    3f18:	8e 83       	std	Y+6, r24	; 0x06
    3f1a:	02 c0       	rjmp	.+4      	; 0x3f20 <fputc+0x4c>
    3f1c:	0f ef       	ldi	r16, 0xFF	; 255
    3f1e:	1f ef       	ldi	r17, 0xFF	; 255
    3f20:	c8 01       	movw	r24, r16
    3f22:	df 91       	pop	r29
    3f24:	cf 91       	pop	r28
    3f26:	1f 91       	pop	r17
    3f28:	0f 91       	pop	r16
    3f2a:	08 95       	ret

00003f2c <__ultoa_invert>:
    3f2c:	fa 01       	movw	r30, r20
    3f2e:	aa 27       	eor	r26, r26
    3f30:	28 30       	cpi	r18, 0x08	; 8
    3f32:	51 f1       	breq	.+84     	; 0x3f88 <__ultoa_invert+0x5c>
    3f34:	20 31       	cpi	r18, 0x10	; 16
    3f36:	81 f1       	breq	.+96     	; 0x3f98 <__ultoa_invert+0x6c>
    3f38:	e8 94       	clt
    3f3a:	6f 93       	push	r22
    3f3c:	6e 7f       	andi	r22, 0xFE	; 254
    3f3e:	6e 5f       	subi	r22, 0xFE	; 254
    3f40:	7f 4f       	sbci	r23, 0xFF	; 255
    3f42:	8f 4f       	sbci	r24, 0xFF	; 255
    3f44:	9f 4f       	sbci	r25, 0xFF	; 255
    3f46:	af 4f       	sbci	r26, 0xFF	; 255
    3f48:	b1 e0       	ldi	r27, 0x01	; 1
    3f4a:	3e d0       	rcall	.+124    	; 0x3fc8 <__ultoa_invert+0x9c>
    3f4c:	b4 e0       	ldi	r27, 0x04	; 4
    3f4e:	3c d0       	rcall	.+120    	; 0x3fc8 <__ultoa_invert+0x9c>
    3f50:	67 0f       	add	r22, r23
    3f52:	78 1f       	adc	r23, r24
    3f54:	89 1f       	adc	r24, r25
    3f56:	9a 1f       	adc	r25, r26
    3f58:	a1 1d       	adc	r26, r1
    3f5a:	68 0f       	add	r22, r24
    3f5c:	79 1f       	adc	r23, r25
    3f5e:	8a 1f       	adc	r24, r26
    3f60:	91 1d       	adc	r25, r1
    3f62:	a1 1d       	adc	r26, r1
    3f64:	6a 0f       	add	r22, r26
    3f66:	71 1d       	adc	r23, r1
    3f68:	81 1d       	adc	r24, r1
    3f6a:	91 1d       	adc	r25, r1
    3f6c:	a1 1d       	adc	r26, r1
    3f6e:	20 d0       	rcall	.+64     	; 0x3fb0 <__ultoa_invert+0x84>
    3f70:	09 f4       	brne	.+2      	; 0x3f74 <__ultoa_invert+0x48>
    3f72:	68 94       	set
    3f74:	3f 91       	pop	r19
    3f76:	2a e0       	ldi	r18, 0x0A	; 10
    3f78:	26 9f       	mul	r18, r22
    3f7a:	11 24       	eor	r1, r1
    3f7c:	30 19       	sub	r19, r0
    3f7e:	30 5d       	subi	r19, 0xD0	; 208
    3f80:	31 93       	st	Z+, r19
    3f82:	de f6       	brtc	.-74     	; 0x3f3a <__ultoa_invert+0xe>
    3f84:	cf 01       	movw	r24, r30
    3f86:	08 95       	ret
    3f88:	46 2f       	mov	r20, r22
    3f8a:	47 70       	andi	r20, 0x07	; 7
    3f8c:	40 5d       	subi	r20, 0xD0	; 208
    3f8e:	41 93       	st	Z+, r20
    3f90:	b3 e0       	ldi	r27, 0x03	; 3
    3f92:	0f d0       	rcall	.+30     	; 0x3fb2 <__ultoa_invert+0x86>
    3f94:	c9 f7       	brne	.-14     	; 0x3f88 <__ultoa_invert+0x5c>
    3f96:	f6 cf       	rjmp	.-20     	; 0x3f84 <__ultoa_invert+0x58>
    3f98:	46 2f       	mov	r20, r22
    3f9a:	4f 70       	andi	r20, 0x0F	; 15
    3f9c:	40 5d       	subi	r20, 0xD0	; 208
    3f9e:	4a 33       	cpi	r20, 0x3A	; 58
    3fa0:	18 f0       	brcs	.+6      	; 0x3fa8 <__ultoa_invert+0x7c>
    3fa2:	49 5d       	subi	r20, 0xD9	; 217
    3fa4:	31 fd       	sbrc	r19, 1
    3fa6:	40 52       	subi	r20, 0x20	; 32
    3fa8:	41 93       	st	Z+, r20
    3faa:	02 d0       	rcall	.+4      	; 0x3fb0 <__ultoa_invert+0x84>
    3fac:	a9 f7       	brne	.-22     	; 0x3f98 <__ultoa_invert+0x6c>
    3fae:	ea cf       	rjmp	.-44     	; 0x3f84 <__ultoa_invert+0x58>
    3fb0:	b4 e0       	ldi	r27, 0x04	; 4
    3fb2:	a6 95       	lsr	r26
    3fb4:	97 95       	ror	r25
    3fb6:	87 95       	ror	r24
    3fb8:	77 95       	ror	r23
    3fba:	67 95       	ror	r22
    3fbc:	ba 95       	dec	r27
    3fbe:	c9 f7       	brne	.-14     	; 0x3fb2 <__ultoa_invert+0x86>
    3fc0:	00 97       	sbiw	r24, 0x00	; 0
    3fc2:	61 05       	cpc	r22, r1
    3fc4:	71 05       	cpc	r23, r1
    3fc6:	08 95       	ret
    3fc8:	9b 01       	movw	r18, r22
    3fca:	ac 01       	movw	r20, r24
    3fcc:	0a 2e       	mov	r0, r26
    3fce:	06 94       	lsr	r0
    3fd0:	57 95       	ror	r21
    3fd2:	47 95       	ror	r20
    3fd4:	37 95       	ror	r19
    3fd6:	27 95       	ror	r18
    3fd8:	ba 95       	dec	r27
    3fda:	c9 f7       	brne	.-14     	; 0x3fce <__ultoa_invert+0xa2>
    3fdc:	62 0f       	add	r22, r18
    3fde:	73 1f       	adc	r23, r19
    3fe0:	84 1f       	adc	r24, r20
    3fe2:	95 1f       	adc	r25, r21
    3fe4:	a0 1d       	adc	r26, r0
    3fe6:	08 95       	ret

00003fe8 <_exit>:
    3fe8:	f8 94       	cli

00003fea <__stop_program>:
    3fea:	ff cf       	rjmp	.-2      	; 0x3fea <__stop_program>
