#include "STD_TYPES.h"
#include <util/delay.h>
#include "BIT_MATH.h"
#include "Err_Type.h"
#include "DIO_interface.h"

#include "CLCD_interface.h"
#include "CLCD_prv.h"
#include "CLCD_cfg.h"



void CLCD_voidSendCommand (uint8 copy_u8Command)
{
	/*1-Set RS pin to low for command*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_LOW);

	/*2-Set RW LOW to write*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RW_PIN,DIO_PIN_LOW);

	/*3-Send the command*/
	DIO_SetPortValue(CLCD_u8DATA_PORT, copy_u8Command);

	/*4-Send Enable Pulse*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);


}
void CLCD_voidSendData (uint8 copy_u8Data)
{
	/*1-Set RS pin to high for data*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_HIGH);

	/*2-Set RW LOW to write*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RW_PIN,DIO_PIN_LOW);

	/*3-Send the data*/
	DIO_SetPortValue(CLCD_u8DATA_PORT, copy_u8Data);

	/*4-Send Enable Pulse*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);
}
void CLCD_voidInit (void)
{
	/*1-Wait for more than 30 ms after power on */
	_delay_ms(40);
	/*2-Function set command :2 lines,font size :5*7 */
	CLCD_voidSendCommand(0b00111000);
	/*3-Display on off control :Display :ON, cursor:off,blink cursor off*/

	CLCD_voidSendCommand(0b00001100);
	/*4-Display clear */
	CLCD_voidSendCommand(1);

}
uint8 CLCD_u8SendString (const char *copy_Chstring)
{
	uint8 LocalErrorState=OK;
	if(copy_Chstring!=NULL)
	{uint8 Local_u8Counter=0;
		while(copy_Chstring[Local_u8Counter]!='/0')
		{

			CLCD_voidSendData(copy_Chstring[Local_u8Counter]);
			Local_u8Counter++;

		}
	}
	else
	{
	 LocalErrorState=NULL_PTR;
	}
return LocalErrorState;
}

