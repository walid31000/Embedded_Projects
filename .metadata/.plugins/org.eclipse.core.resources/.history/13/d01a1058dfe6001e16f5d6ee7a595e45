#include "STD_TYPES.h"
#include <util/delay.h>
#include "BIT_MATH.h"
#include "Err_Type.h"

#include "DIO_interface.h"
#include "CLCD_interface.h"
#include "CLCD_prv.h"
#include "CLCD_cfg.h"


void CLCD_voidSendCommand(uint8 copy_u8Command)
{
	/*1-SET RS pin to low for command*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_LOW);

	/*2-SET RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RW_PIN,DIO_PIN_LOW);

	/*3-Send the  command*/
	DIO_u8SetPortValue(CLCD_u8DATA_PORT, copy_u8Command);


	/*4- send Enable pulse*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);
}


void CLCD_voidSendData(uint8 copy_u8Data)
{
	/*1-SET RS pin to high for data*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_HIGH);

	/*2-SET RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RW_PIN,DIO_PIN_LOW);

	/*3-Send the  data*/
	DIO_u8SetPortValue(CLCD_u8DATA_PORT, copy_u8Data);


	/*4- send Enable pulse*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);


}
void CLCD_voidInit (void)
{
 /*1-wait for more than 30sec after power on*/
	_delay_ms(40);

 /*2-Function Set command:2 lines ,font size :5*7*/
  CLCD_voidSendCommand(0b00111000);
  /*3-Display on/off control display on,cursor off,blink off */
  CLCD_voidSendCommand(0b00001100);
  /*4-Display clear*/
  CLCD_voidSendCommand(1);

  }

void CLCD_voidSendString(const uint8 *copy_u8String)
{
	uint8 Local_u8Counter=0;
   /* while(*copy_u8String!='\0')
	{
		CLCD_voidSendData(*copy_u8String);
		copy_u8String++;
	}*/
for (Local_u8Counter=0;copy_u8String[Local_u8Counter]!='\0';Local_u8Counter++)
{
	CLCD_voidSendData(copy_u8String[Local_u8Counter]);
}




}
