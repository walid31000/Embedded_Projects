
CLCD3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000388c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000072  00800060  0000388c  00003900  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000252c  00000000  00000000  00003974  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001198  00000000  00000000  00005ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00007038  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00007178  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000072e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008f31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00009e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000abcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000ad2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000afb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b787  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e8       	ldi	r30, 0x8C	; 140
      68:	f8 e3       	ldi	r31, 0x38	; 56
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3d       	cpi	r26, 0xD2	; 210
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <main>
      7a:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 0d 1c 	jmp	0x381a	; 0x381a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a2 ea       	ldi	r26, 0xA2	; 162
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 29 1c 	jmp	0x3852	; 0x3852 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 35 1c 	jmp	0x386a	; 0x386a <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 35 1c 	jmp	0x386a	; 0x386a <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 0d 1c 	jmp	0x381a	; 0x381a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	82 ea       	ldi	r24, 0xA2	; 162
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 29 1c 	jmp	0x3852	; 0x3852 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 35 1c 	jmp	0x386a	; 0x386a <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 35 1c 	jmp	0x386a	; 0x386a <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 35 1c 	jmp	0x386a	; 0x386a <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 39 1c 	jmp	0x3872	; 0x3872 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <voidSetHalfDataPort>:
#include "CLCD_prv.h"
#include "CLCD_cfg.h"


static void voidSetHalfDataPort(uint8 copy_u8FourBitData )
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
     b40:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D4_PIN ,GET_BIT(copy_u8FourBitData,0));
     b42:	89 81       	ldd	r24, Y+1	; 0x01
     b44:	98 2f       	mov	r25, r24
     b46:	91 70       	andi	r25, 0x01	; 1
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	63 e0       	ldi	r22, 0x03	; 3
     b4c:	49 2f       	mov	r20, r25
     b4e:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D5_PIN ,GET_BIT(copy_u8FourBitData,1));
     b52:	89 81       	ldd	r24, Y+1	; 0x01
     b54:	86 95       	lsr	r24
     b56:	98 2f       	mov	r25, r24
     b58:	91 70       	andi	r25, 0x01	; 1
     b5a:	80 e0       	ldi	r24, 0x00	; 0
     b5c:	64 e0       	ldi	r22, 0x04	; 4
     b5e:	49 2f       	mov	r20, r25
     b60:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D6_PIN ,GET_BIT(copy_u8FourBitData,2));
     b64:	89 81       	ldd	r24, Y+1	; 0x01
     b66:	86 95       	lsr	r24
     b68:	86 95       	lsr	r24
     b6a:	98 2f       	mov	r25, r24
     b6c:	91 70       	andi	r25, 0x01	; 1
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	65 e0       	ldi	r22, 0x05	; 5
     b72:	49 2f       	mov	r20, r25
     b74:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_u8DATA_PORT ,CLCD_u8D7_PIN ,GET_BIT(copy_u8FourBitData,3));
     b78:	89 81       	ldd	r24, Y+1	; 0x01
     b7a:	86 95       	lsr	r24
     b7c:	86 95       	lsr	r24
     b7e:	86 95       	lsr	r24
     b80:	98 2f       	mov	r25, r24
     b82:	91 70       	andi	r25, 0x01	; 1
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	66 e0       	ldi	r22, 0x06	; 6
     b88:	49 2f       	mov	r20, r25
     b8a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
}
     b8e:	0f 90       	pop	r0
     b90:	cf 91       	pop	r28
     b92:	df 91       	pop	r29
     b94:	08 95       	ret

00000b96 <voidSendEnablePulse>:

static void voidSendEnablePulse (void)
{
     b96:	df 93       	push	r29
     b98:	cf 93       	push	r28
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	2e 97       	sbiw	r28, 0x0e	; 14
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	f8 94       	cli
     ba4:	de bf       	out	0x3e, r29	; 62
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	cd bf       	out	0x3d, r28	; 61
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_HIGH);
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	62 e0       	ldi	r22, 0x02	; 2
     bae:	41 e0       	ldi	r20, 0x01	; 1
     bb0:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	a0 e0       	ldi	r26, 0x00	; 0
     bba:	b0 e4       	ldi	r27, 0x40	; 64
     bbc:	8b 87       	std	Y+11, r24	; 0x0b
     bbe:	9c 87       	std	Y+12, r25	; 0x0c
     bc0:	ad 87       	std	Y+13, r26	; 0x0d
     bc2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bc4:	6b 85       	ldd	r22, Y+11	; 0x0b
     bc6:	7c 85       	ldd	r23, Y+12	; 0x0c
     bc8:	8d 85       	ldd	r24, Y+13	; 0x0d
     bca:	9e 85       	ldd	r25, Y+14	; 0x0e
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	4a ef       	ldi	r20, 0xFA	; 250
     bd2:	54 e4       	ldi	r21, 0x44	; 68
     bd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     bd8:	dc 01       	movw	r26, r24
     bda:	cb 01       	movw	r24, r22
     bdc:	8f 83       	std	Y+7, r24	; 0x07
     bde:	98 87       	std	Y+8, r25	; 0x08
     be0:	a9 87       	std	Y+9, r26	; 0x09
     be2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     be4:	6f 81       	ldd	r22, Y+7	; 0x07
     be6:	78 85       	ldd	r23, Y+8	; 0x08
     be8:	89 85       	ldd	r24, Y+9	; 0x09
     bea:	9a 85       	ldd	r25, Y+10	; 0x0a
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	40 e8       	ldi	r20, 0x80	; 128
     bf2:	5f e3       	ldi	r21, 0x3F	; 63
     bf4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bf8:	88 23       	and	r24, r24
     bfa:	2c f4       	brge	.+10     	; 0xc06 <voidSendEnablePulse+0x70>
		__ticks = 1;
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	9e 83       	std	Y+6, r25	; 0x06
     c02:	8d 83       	std	Y+5, r24	; 0x05
     c04:	3f c0       	rjmp	.+126    	; 0xc84 <voidSendEnablePulse+0xee>
	else if (__tmp > 65535)
     c06:	6f 81       	ldd	r22, Y+7	; 0x07
     c08:	78 85       	ldd	r23, Y+8	; 0x08
     c0a:	89 85       	ldd	r24, Y+9	; 0x09
     c0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	3f ef       	ldi	r19, 0xFF	; 255
     c12:	4f e7       	ldi	r20, 0x7F	; 127
     c14:	57 e4       	ldi	r21, 0x47	; 71
     c16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     c1a:	18 16       	cp	r1, r24
     c1c:	4c f5       	brge	.+82     	; 0xc70 <voidSendEnablePulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c1e:	6b 85       	ldd	r22, Y+11	; 0x0b
     c20:	7c 85       	ldd	r23, Y+12	; 0x0c
     c22:	8d 85       	ldd	r24, Y+13	; 0x0d
     c24:	9e 85       	ldd	r25, Y+14	; 0x0e
     c26:	20 e0       	ldi	r18, 0x00	; 0
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	40 e2       	ldi	r20, 0x20	; 32
     c2c:	51 e4       	ldi	r21, 0x41	; 65
     c2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c32:	dc 01       	movw	r26, r24
     c34:	cb 01       	movw	r24, r22
     c36:	bc 01       	movw	r22, r24
     c38:	cd 01       	movw	r24, r26
     c3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c3e:	dc 01       	movw	r26, r24
     c40:	cb 01       	movw	r24, r22
     c42:	9e 83       	std	Y+6, r25	; 0x06
     c44:	8d 83       	std	Y+5, r24	; 0x05
     c46:	0f c0       	rjmp	.+30     	; 0xc66 <voidSendEnablePulse+0xd0>
     c48:	88 ec       	ldi	r24, 0xC8	; 200
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	9c 83       	std	Y+4, r25	; 0x04
     c4e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c50:	8b 81       	ldd	r24, Y+3	; 0x03
     c52:	9c 81       	ldd	r25, Y+4	; 0x04
     c54:	01 97       	sbiw	r24, 0x01	; 1
     c56:	f1 f7       	brne	.-4      	; 0xc54 <voidSendEnablePulse+0xbe>
     c58:	9c 83       	std	Y+4, r25	; 0x04
     c5a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c5c:	8d 81       	ldd	r24, Y+5	; 0x05
     c5e:	9e 81       	ldd	r25, Y+6	; 0x06
     c60:	01 97       	sbiw	r24, 0x01	; 1
     c62:	9e 83       	std	Y+6, r25	; 0x06
     c64:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c66:	8d 81       	ldd	r24, Y+5	; 0x05
     c68:	9e 81       	ldd	r25, Y+6	; 0x06
     c6a:	00 97       	sbiw	r24, 0x00	; 0
     c6c:	69 f7       	brne	.-38     	; 0xc48 <voidSendEnablePulse+0xb2>
     c6e:	14 c0       	rjmp	.+40     	; 0xc98 <voidSendEnablePulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c70:	6f 81       	ldd	r22, Y+7	; 0x07
     c72:	78 85       	ldd	r23, Y+8	; 0x08
     c74:	89 85       	ldd	r24, Y+9	; 0x09
     c76:	9a 85       	ldd	r25, Y+10	; 0x0a
     c78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c7c:	dc 01       	movw	r26, r24
     c7e:	cb 01       	movw	r24, r22
     c80:	9e 83       	std	Y+6, r25	; 0x06
     c82:	8d 83       	std	Y+5, r24	; 0x05
     c84:	8d 81       	ldd	r24, Y+5	; 0x05
     c86:	9e 81       	ldd	r25, Y+6	; 0x06
     c88:	9a 83       	std	Y+2, r25	; 0x02
     c8a:	89 83       	std	Y+1, r24	; 0x01
     c8c:	89 81       	ldd	r24, Y+1	; 0x01
     c8e:	9a 81       	ldd	r25, Y+2	; 0x02
     c90:	01 97       	sbiw	r24, 0x01	; 1
     c92:	f1 f7       	brne	.-4      	; 0xc90 <voidSendEnablePulse+0xfa>
     c94:	9a 83       	std	Y+2, r25	; 0x02
     c96:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8E_PIN,DIO_PIN_LOW);
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	62 e0       	ldi	r22, 0x02	; 2
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
}
     ca2:	2e 96       	adiw	r28, 0x0e	; 14
     ca4:	0f b6       	in	r0, 0x3f	; 63
     ca6:	f8 94       	cli
     ca8:	de bf       	out	0x3e, r29	; 62
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	cd bf       	out	0x3d, r28	; 61
     cae:	cf 91       	pop	r28
     cb0:	df 91       	pop	r29
     cb2:	08 95       	ret

00000cb4 <CLCD_voidSendCommand>:

void CLCD_voidSendCommand (uint8 copy_u8Command)
{
     cb4:	df 93       	push	r29
     cb6:	cf 93       	push	r28
     cb8:	0f 92       	push	r0
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	89 83       	std	Y+1, r24	; 0x01
	/*1-Set RS pin to low for command*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_LOW);
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	61 e0       	ldi	r22, 0x01	; 1
     cc4:	40 e0       	ldi	r20, 0x00	; 0
     cc6:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
	voidSendEnablePulse ();


#elif CLCD_u8CONNECTION_MODE == FOUR_BIT
	/*Send the higher four bit of the command*/
	voidSetHalfDataPort(copy_u8Command>>4u );
     cca:	89 81       	ldd	r24, Y+1	; 0x01
     ccc:	82 95       	swap	r24
     cce:	8f 70       	andi	r24, 0x0F	; 15
     cd0:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>
	/*-Send Enable Pulse*/
	voidSendEnablePulse ();
     cd4:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
	/*Send the lower four bit of the command*/
	voidSetHalfDataPort(copy_u8Command);
     cd8:	89 81       	ldd	r24, Y+1	; 0x01
     cda:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>

	/*-Send Enable Pulse*/
	voidSendEnablePulse ();
     cde:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
#endif
}
     ce2:	0f 90       	pop	r0
     ce4:	cf 91       	pop	r28
     ce6:	df 91       	pop	r29
     ce8:	08 95       	ret

00000cea <CLCD_voidSendData>:
void CLCD_voidSendData (uint8 copy_u8Data)
{
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	0f 92       	push	r0
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	89 83       	std	Y+1, r24	; 0x01
	/*1-Set RS pin to high for data*/
	DIO_u8SetPinValue(CLCD_u8CTRL_PORT,CLCD_u8RS_PIN,DIO_PIN_HIGH);
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	61 e0       	ldi	r22, 0x01	; 1
     cfa:	41 e0       	ldi	r20, 0x01	; 1
     cfc:	0e 94 dd 09 	call	0x13ba	; 0x13ba <DIO_u8SetPinValue>
	voidSendEnablePulse ();


#elif CLCD_u8CONNECTION_MODE == FOUR_BIT
	/*Send the higher four bit of the data*/
	voidSetHalfDataPort(copy_u8Data>>4u );
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	82 95       	swap	r24
     d04:	8f 70       	andi	r24, 0x0F	; 15
     d06:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>
	/*-Send Enable Pulse*/
	voidSendEnablePulse();
     d0a:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
	/*Send the lower four bit of the data*/
	voidSetHalfDataPort(copy_u8Data);
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>

	/*-Send Enable Pulse*/
	voidSendEnablePulse();
     d14:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
#endif
}
     d18:	0f 90       	pop	r0
     d1a:	cf 91       	pop	r28
     d1c:	df 91       	pop	r29
     d1e:	08 95       	ret

00000d20 <CLCD_voidInit>:
void CLCD_voidInit (void)
{
     d20:	df 93       	push	r29
     d22:	cf 93       	push	r28
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	2e 97       	sbiw	r28, 0x0e	; 14
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	f8 94       	cli
     d2e:	de bf       	out	0x3e, r29	; 62
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	cd bf       	out	0x3d, r28	; 61
     d34:	80 e0       	ldi	r24, 0x00	; 0
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	a0 e2       	ldi	r26, 0x20	; 32
     d3a:	b2 e4       	ldi	r27, 0x42	; 66
     d3c:	8b 87       	std	Y+11, r24	; 0x0b
     d3e:	9c 87       	std	Y+12, r25	; 0x0c
     d40:	ad 87       	std	Y+13, r26	; 0x0d
     d42:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d44:	6b 85       	ldd	r22, Y+11	; 0x0b
     d46:	7c 85       	ldd	r23, Y+12	; 0x0c
     d48:	8d 85       	ldd	r24, Y+13	; 0x0d
     d4a:	9e 85       	ldd	r25, Y+14	; 0x0e
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	4a ef       	ldi	r20, 0xFA	; 250
     d52:	54 e4       	ldi	r21, 0x44	; 68
     d54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	8f 83       	std	Y+7, r24	; 0x07
     d5e:	98 87       	std	Y+8, r25	; 0x08
     d60:	a9 87       	std	Y+9, r26	; 0x09
     d62:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d64:	6f 81       	ldd	r22, Y+7	; 0x07
     d66:	78 85       	ldd	r23, Y+8	; 0x08
     d68:	89 85       	ldd	r24, Y+9	; 0x09
     d6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	40 e8       	ldi	r20, 0x80	; 128
     d72:	5f e3       	ldi	r21, 0x3F	; 63
     d74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d78:	88 23       	and	r24, r24
     d7a:	2c f4       	brge	.+10     	; 0xd86 <CLCD_voidInit+0x66>
		__ticks = 1;
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	3f c0       	rjmp	.+126    	; 0xe04 <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
     d86:	6f 81       	ldd	r22, Y+7	; 0x07
     d88:	78 85       	ldd	r23, Y+8	; 0x08
     d8a:	89 85       	ldd	r24, Y+9	; 0x09
     d8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	3f ef       	ldi	r19, 0xFF	; 255
     d92:	4f e7       	ldi	r20, 0x7F	; 127
     d94:	57 e4       	ldi	r21, 0x47	; 71
     d96:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d9a:	18 16       	cp	r1, r24
     d9c:	4c f5       	brge	.+82     	; 0xdf0 <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d9e:	6b 85       	ldd	r22, Y+11	; 0x0b
     da0:	7c 85       	ldd	r23, Y+12	; 0x0c
     da2:	8d 85       	ldd	r24, Y+13	; 0x0d
     da4:	9e 85       	ldd	r25, Y+14	; 0x0e
     da6:	20 e0       	ldi	r18, 0x00	; 0
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	40 e2       	ldi	r20, 0x20	; 32
     dac:	51 e4       	ldi	r21, 0x41	; 65
     dae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     db2:	dc 01       	movw	r26, r24
     db4:	cb 01       	movw	r24, r22
     db6:	bc 01       	movw	r22, r24
     db8:	cd 01       	movw	r24, r26
     dba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dbe:	dc 01       	movw	r26, r24
     dc0:	cb 01       	movw	r24, r22
     dc2:	9e 83       	std	Y+6, r25	; 0x06
     dc4:	8d 83       	std	Y+5, r24	; 0x05
     dc6:	0f c0       	rjmp	.+30     	; 0xde6 <CLCD_voidInit+0xc6>
     dc8:	88 ec       	ldi	r24, 0xC8	; 200
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	9c 83       	std	Y+4, r25	; 0x04
     dce:	8b 83       	std	Y+3, r24	; 0x03
     dd0:	8b 81       	ldd	r24, Y+3	; 0x03
     dd2:	9c 81       	ldd	r25, Y+4	; 0x04
     dd4:	01 97       	sbiw	r24, 0x01	; 1
     dd6:	f1 f7       	brne	.-4      	; 0xdd4 <CLCD_voidInit+0xb4>
     dd8:	9c 83       	std	Y+4, r25	; 0x04
     dda:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ddc:	8d 81       	ldd	r24, Y+5	; 0x05
     dde:	9e 81       	ldd	r25, Y+6	; 0x06
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	9e 83       	std	Y+6, r25	; 0x06
     de4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de6:	8d 81       	ldd	r24, Y+5	; 0x05
     de8:	9e 81       	ldd	r25, Y+6	; 0x06
     dea:	00 97       	sbiw	r24, 0x00	; 0
     dec:	69 f7       	brne	.-38     	; 0xdc8 <CLCD_voidInit+0xa8>
     dee:	14 c0       	rjmp	.+40     	; 0xe18 <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df0:	6f 81       	ldd	r22, Y+7	; 0x07
     df2:	78 85       	ldd	r23, Y+8	; 0x08
     df4:	89 85       	ldd	r24, Y+9	; 0x09
     df6:	9a 85       	ldd	r25, Y+10	; 0x0a
     df8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dfc:	dc 01       	movw	r26, r24
     dfe:	cb 01       	movw	r24, r22
     e00:	9e 83       	std	Y+6, r25	; 0x06
     e02:	8d 83       	std	Y+5, r24	; 0x05
     e04:	8d 81       	ldd	r24, Y+5	; 0x05
     e06:	9e 81       	ldd	r25, Y+6	; 0x06
     e08:	9a 83       	std	Y+2, r25	; 0x02
     e0a:	89 83       	std	Y+1, r24	; 0x01
     e0c:	89 81       	ldd	r24, Y+1	; 0x01
     e0e:	9a 81       	ldd	r25, Y+2	; 0x02
     e10:	01 97       	sbiw	r24, 0x01	; 1
     e12:	f1 f7       	brne	.-4      	; 0xe10 <CLCD_voidInit+0xf0>
     e14:	9a 83       	std	Y+2, r25	; 0x02
     e16:	89 83       	std	Y+1, r24	; 0x01
	/*2-Function set command :2 lines,font size :5*7 */
#if CLCD_u8CONNECTION_MODE	==EIGHT_BIT
	CLCD_voidSendCommand(0b00111000);

#elif CLCD_u8CONNECTION_MODE ==FOUR_BIT
	voidSetHalfDataPort(0b0010);
     e18:	82 e0       	ldi	r24, 0x02	; 2
     e1a:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e1e:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
	voidSetHalfDataPort(0b0010);
     e22:	82 e0       	ldi	r24, 0x02	; 2
     e24:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e28:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
	voidSetHalfDataPort(0b1000);
     e2c:	88 e0       	ldi	r24, 0x08	; 8
     e2e:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSetHalfDataPort>
	voidSendEnablePulse();
     e32:	0e 94 cb 05 	call	0xb96	; 0xb96 <voidSendEnablePulse>
#endif

	/*3-Display on off control :Display :ON, cursor:off,blink cursor off*/

	CLCD_voidSendCommand(0b00001100);
     e36:	8c e0       	ldi	r24, 0x0C	; 12
     e38:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
	/*4-Display clear */
	CLCD_voidSendCommand(1);
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>

}
     e42:	2e 96       	adiw	r28, 0x0e	; 14
     e44:	0f b6       	in	r0, 0x3f	; 63
     e46:	f8 94       	cli
     e48:	de bf       	out	0x3e, r29	; 62
     e4a:	0f be       	out	0x3f, r0	; 63
     e4c:	cd bf       	out	0x3d, r28	; 61
     e4e:	cf 91       	pop	r28
     e50:	df 91       	pop	r29
     e52:	08 95       	ret

00000e54 <CLCD_u8SendString>:
uint8 CLCD_u8SendString (const char *copy_Chstring)
{
     e54:	df 93       	push	r29
     e56:	cf 93       	push	r28
     e58:	00 d0       	rcall	.+0      	; 0xe5a <CLCD_u8SendString+0x6>
     e5a:	0f 92       	push	r0
     e5c:	cd b7       	in	r28, 0x3d	; 61
     e5e:	de b7       	in	r29, 0x3e	; 62
     e60:	9b 83       	std	Y+3, r25	; 0x03
     e62:	8a 83       	std	Y+2, r24	; 0x02
	uint8 LocalErrorState=OK;
     e64:	19 82       	std	Y+1, r1	; 0x01
	if(copy_Chstring!=NULL)
     e66:	8a 81       	ldd	r24, Y+2	; 0x02
     e68:	9b 81       	ldd	r25, Y+3	; 0x03
     e6a:	00 97       	sbiw	r24, 0x00	; 0
     e6c:	89 f0       	breq	.+34     	; 0xe90 <CLCD_u8SendString+0x3c>
     e6e:	0a c0       	rjmp	.+20     	; 0xe84 <CLCD_u8SendString+0x30>
	{//uint8 Local_u8Counter=0;
		while(*copy_Chstring!='\0')
		{

			CLCD_voidSendData(*copy_Chstring);
     e70:	ea 81       	ldd	r30, Y+2	; 0x02
     e72:	fb 81       	ldd	r31, Y+3	; 0x03
     e74:	80 81       	ld	r24, Z
     e76:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
			copy_Chstring++;
     e7a:	8a 81       	ldd	r24, Y+2	; 0x02
     e7c:	9b 81       	ldd	r25, Y+3	; 0x03
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	9b 83       	std	Y+3, r25	; 0x03
     e82:	8a 83       	std	Y+2, r24	; 0x02
uint8 CLCD_u8SendString (const char *copy_Chstring)
{
	uint8 LocalErrorState=OK;
	if(copy_Chstring!=NULL)
	{//uint8 Local_u8Counter=0;
		while(*copy_Chstring!='\0')
     e84:	ea 81       	ldd	r30, Y+2	; 0x02
     e86:	fb 81       	ldd	r31, Y+3	; 0x03
     e88:	80 81       	ld	r24, Z
     e8a:	88 23       	and	r24, r24
     e8c:	89 f7       	brne	.-30     	; 0xe70 <CLCD_u8SendString+0x1c>
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <CLCD_u8SendString+0x40>

		}
	}
	else
	{
		LocalErrorState=NULL_PTR;
     e90:	82 e0       	ldi	r24, 0x02	; 2
     e92:	89 83       	std	Y+1, r24	; 0x01
	}
	return LocalErrorState;
     e94:	89 81       	ldd	r24, Y+1	; 0x01
}
     e96:	0f 90       	pop	r0
     e98:	0f 90       	pop	r0
     e9a:	0f 90       	pop	r0
     e9c:	cf 91       	pop	r28
     e9e:	df 91       	pop	r29
     ea0:	08 95       	ret

00000ea2 <CLCD_voidSendNumber>:

void CLCD_voidSendNumber (sint32 copy_s32Number)
{
     ea2:	df 93       	push	r29
     ea4:	cf 93       	push	r28
     ea6:	cd b7       	in	r28, 0x3d	; 61
     ea8:	de b7       	in	r29, 0x3e	; 62
     eaa:	61 97       	sbiw	r28, 0x11	; 17
     eac:	0f b6       	in	r0, 0x3f	; 63
     eae:	f8 94       	cli
     eb0:	de bf       	out	0x3e, r29	; 62
     eb2:	0f be       	out	0x3f, r0	; 63
     eb4:	cd bf       	out	0x3d, r28	; 61
     eb6:	6e 87       	std	Y+14, r22	; 0x0e
     eb8:	7f 87       	std	Y+15, r23	; 0x0f
     eba:	88 8b       	std	Y+16, r24	; 0x10
     ebc:	99 8b       	std	Y+17, r25	; 0x11
	char Local_chNumberArr[10];

	uint8 Local_u8RighttDigit;
	uint8 Local_u8Counter =0;
     ebe:	1a 82       	std	Y+2, r1	; 0x02
	sint8 Local_s8Counter2;
	if(copy_s32Number == 0)
     ec0:	8e 85       	ldd	r24, Y+14	; 0x0e
     ec2:	9f 85       	ldd	r25, Y+15	; 0x0f
     ec4:	a8 89       	ldd	r26, Y+16	; 0x10
     ec6:	b9 89       	ldd	r27, Y+17	; 0x11
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	a1 05       	cpc	r26, r1
     ecc:	b1 05       	cpc	r27, r1
     ece:	21 f4       	brne	.+8      	; 0xed8 <CLCD_voidSendNumber+0x36>
	{
		CLCD_voidSendData('0');
     ed0:	80 e3       	ldi	r24, 0x30	; 48
     ed2:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
     ed6:	69 c0       	rjmp	.+210    	; 0xfaa <CLCD_voidSendNumber+0x108>

		return;
	}
	else if (copy_s32Number<0)
     ed8:	8e 85       	ldd	r24, Y+14	; 0x0e
     eda:	9f 85       	ldd	r25, Y+15	; 0x0f
     edc:	a8 89       	ldd	r26, Y+16	; 0x10
     ede:	b9 89       	ldd	r27, Y+17	; 0x11
     ee0:	bb 23       	and	r27, r27
     ee2:	0c f0       	brlt	.+2      	; 0xee6 <CLCD_voidSendNumber+0x44>
     ee4:	43 c0       	rjmp	.+134    	; 0xf6c <CLCD_voidSendNumber+0xca>
	{
		CLCD_voidSendData('-');
     ee6:	8d e2       	ldi	r24, 0x2D	; 45
     ee8:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		copy_s32Number *=-1;
     eec:	8e 85       	ldd	r24, Y+14	; 0x0e
     eee:	9f 85       	ldd	r25, Y+15	; 0x0f
     ef0:	a8 89       	ldd	r26, Y+16	; 0x10
     ef2:	b9 89       	ldd	r27, Y+17	; 0x11
     ef4:	b0 95       	com	r27
     ef6:	a0 95       	com	r26
     ef8:	90 95       	com	r25
     efa:	81 95       	neg	r24
     efc:	9f 4f       	sbci	r25, 0xFF	; 255
     efe:	af 4f       	sbci	r26, 0xFF	; 255
     f00:	bf 4f       	sbci	r27, 0xFF	; 255
     f02:	8e 87       	std	Y+14, r24	; 0x0e
     f04:	9f 87       	std	Y+15, r25	; 0x0f
     f06:	a8 8b       	std	Y+16, r26	; 0x10
     f08:	b9 8b       	std	Y+17, r27	; 0x11
     f0a:	30 c0       	rjmp	.+96     	; 0xf6c <CLCD_voidSendNumber+0xca>
	}

	while(copy_s32Number!=0)
	{

		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
     f0c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f0e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f10:	a8 89       	ldd	r26, Y+16	; 0x10
     f12:	b9 89       	ldd	r27, Y+17	; 0x11
     f14:	2a e0       	ldi	r18, 0x0A	; 10
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e0       	ldi	r20, 0x00	; 0
     f1a:	50 e0       	ldi	r21, 0x00	; 0
     f1c:	bc 01       	movw	r22, r24
     f1e:	cd 01       	movw	r24, r26
     f20:	0e 94 d0 1b 	call	0x37a0	; 0x37a0 <__divmodsi4>
     f24:	dc 01       	movw	r26, r24
     f26:	cb 01       	movw	r24, r22
     f28:	8b 83       	std	Y+3, r24	; 0x03
		copy_s32Number /=10;/*Get rid of the right most digit*/
     f2a:	8e 85       	ldd	r24, Y+14	; 0x0e
     f2c:	9f 85       	ldd	r25, Y+15	; 0x0f
     f2e:	a8 89       	ldd	r26, Y+16	; 0x10
     f30:	b9 89       	ldd	r27, Y+17	; 0x11
     f32:	2a e0       	ldi	r18, 0x0A	; 10
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	40 e0       	ldi	r20, 0x00	; 0
     f38:	50 e0       	ldi	r21, 0x00	; 0
     f3a:	bc 01       	movw	r22, r24
     f3c:	cd 01       	movw	r24, r26
     f3e:	0e 94 d0 1b 	call	0x37a0	; 0x37a0 <__divmodsi4>
     f42:	da 01       	movw	r26, r20
     f44:	c9 01       	movw	r24, r18
     f46:	8e 87       	std	Y+14, r24	; 0x0e
     f48:	9f 87       	std	Y+15, r25	; 0x0f
     f4a:	a8 8b       	std	Y+16, r26	; 0x10
     f4c:	b9 8b       	std	Y+17, r27	; 0x11
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
     f4e:	8a 81       	ldd	r24, Y+2	; 0x02
     f50:	28 2f       	mov	r18, r24
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	48 2f       	mov	r20, r24
     f58:	40 5d       	subi	r20, 0xD0	; 208
     f5a:	ce 01       	movw	r24, r28
     f5c:	04 96       	adiw	r24, 0x04	; 4
     f5e:	fc 01       	movw	r30, r24
     f60:	e2 0f       	add	r30, r18
     f62:	f3 1f       	adc	r31, r19
     f64:	40 83       	st	Z, r20
		Local_u8Counter++;
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	8f 5f       	subi	r24, 0xFF	; 255
     f6a:	8a 83       	std	Y+2, r24	; 0x02
	{
		CLCD_voidSendData('-');
		copy_s32Number *=-1;
	}

	while(copy_s32Number!=0)
     f6c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f6e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f70:	a8 89       	ldd	r26, Y+16	; 0x10
     f72:	b9 89       	ldd	r27, Y+17	; 0x11
     f74:	00 97       	sbiw	r24, 0x00	; 0
     f76:	a1 05       	cpc	r26, r1
     f78:	b1 05       	cpc	r27, r1
     f7a:	41 f6       	brne	.-112    	; 0xf0c <CLCD_voidSendNumber+0x6a>
		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
		copy_s32Number /=10;/*Get rid of the right most digit*/
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2=Local_u8Counter-1;Local_s8Counter2>=0;Local_s8Counter2--)
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	81 50       	subi	r24, 0x01	; 1
     f80:	89 83       	std	Y+1, r24	; 0x01
     f82:	10 c0       	rjmp	.+32     	; 0xfa4 <CLCD_voidSendNumber+0x102>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
     f84:	89 81       	ldd	r24, Y+1	; 0x01
     f86:	28 2f       	mov	r18, r24
     f88:	33 27       	eor	r19, r19
     f8a:	27 fd       	sbrc	r18, 7
     f8c:	30 95       	com	r19
     f8e:	ce 01       	movw	r24, r28
     f90:	04 96       	adiw	r24, 0x04	; 4
     f92:	fc 01       	movw	r30, r24
     f94:	e2 0f       	add	r30, r18
     f96:	f3 1f       	adc	r31, r19
     f98:	80 81       	ld	r24, Z
     f9a:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		Local_u8RighttDigit=copy_s32Number %10;/*extract the right most digit */
		copy_s32Number /=10;/*Get rid of the right most digit*/
		Local_chNumberArr [Local_u8Counter]=Local_u8RighttDigit +'0';/*convert to ascii*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2=Local_u8Counter-1;Local_s8Counter2>=0;Local_s8Counter2--)
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	81 50       	subi	r24, 0x01	; 1
     fa2:	89 83       	std	Y+1, r24	; 0x01
     fa4:	89 81       	ldd	r24, Y+1	; 0x01
     fa6:	88 23       	and	r24, r24
     fa8:	6c f7       	brge	.-38     	; 0xf84 <CLCD_voidSendNumber+0xe2>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
	}


}
     faa:	61 96       	adiw	r28, 0x11	; 17
     fac:	0f b6       	in	r0, 0x3f	; 63
     fae:	f8 94       	cli
     fb0:	de bf       	out	0x3e, r29	; 62
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	cd bf       	out	0x3d, r28	; 61
     fb6:	cf 91       	pop	r28
     fb8:	df 91       	pop	r29
     fba:	08 95       	ret

00000fbc <CLCD_voidGoToXY>:


void CLCD_voidGoToXY (uint8 copy_u8Xpos,uint8 copy_u8Ypos)
{
     fbc:	df 93       	push	r29
     fbe:	cf 93       	push	r28
     fc0:	00 d0       	rcall	.+0      	; 0xfc2 <CLCD_voidGoToXY+0x6>
     fc2:	0f 92       	push	r0
     fc4:	cd b7       	in	r28, 0x3d	; 61
     fc6:	de b7       	in	r29, 0x3e	; 62
     fc8:	8a 83       	std	Y+2, r24	; 0x02
     fca:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8DDRamAdd= (copy_u8Ypos*0x40)+copy_u8Xpos;
     fcc:	8b 81       	ldd	r24, Y+3	; 0x03
     fce:	88 2f       	mov	r24, r24
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	00 24       	eor	r0, r0
     fd4:	96 95       	lsr	r25
     fd6:	87 95       	ror	r24
     fd8:	07 94       	ror	r0
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	07 94       	ror	r0
     fe0:	98 2f       	mov	r25, r24
     fe2:	80 2d       	mov	r24, r0
     fe4:	98 2f       	mov	r25, r24
     fe6:	8a 81       	ldd	r24, Y+2	; 0x02
     fe8:	89 0f       	add	r24, r25
     fea:	89 83       	std	Y+1, r24	; 0x01
	 * }
	 *

	 */
	/*set bit7 for setting DDRAM adress command*/
	SET_BIT (Local_u8DDRamAdd,7u);
     fec:	89 81       	ldd	r24, Y+1	; 0x01
     fee:	80 68       	ori	r24, 0x80	; 128
     ff0:	89 83       	std	Y+1, r24	; 0x01
	/*send the setting DDRAM address command*/
	CLCD_voidSendCommand(Local_u8DDRamAdd);
     ff2:	89 81       	ldd	r24, Y+1	; 0x01
     ff4:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
}
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	0f 90       	pop	r0
     ffe:	cf 91       	pop	r28
    1000:	df 91       	pop	r29
    1002:	08 95       	ret

00001004 <CLCD_u8WriteSpecialCharacter>:

uint8 CLCD_u8WriteSpecialCharacter(uint8 copy_u8PatternNumber,uint8 copy_pu8PatternArr[],uint8 copy_u8Xpos,uint8 copy_u8Ypos)
{
    1004:	df 93       	push	r29
    1006:	cf 93       	push	r28
    1008:	cd b7       	in	r28, 0x3d	; 61
    100a:	de b7       	in	r29, 0x3e	; 62
    100c:	28 97       	sbiw	r28, 0x08	; 8
    100e:	0f b6       	in	r0, 0x3f	; 63
    1010:	f8 94       	cli
    1012:	de bf       	out	0x3e, r29	; 62
    1014:	0f be       	out	0x3f, r0	; 63
    1016:	cd bf       	out	0x3d, r28	; 61
    1018:	8c 83       	std	Y+4, r24	; 0x04
    101a:	7e 83       	std	Y+6, r23	; 0x06
    101c:	6d 83       	std	Y+5, r22	; 0x05
    101e:	4f 83       	std	Y+7, r20	; 0x07
    1020:	28 87       	std	Y+8, r18	; 0x08
	uint8 Local_u8ErrorState=OK;
    1022:	1b 82       	std	Y+3, r1	; 0x03
	if(copy_pu8PatternArr !=NULL)
    1024:	8d 81       	ldd	r24, Y+5	; 0x05
    1026:	9e 81       	ldd	r25, Y+6	; 0x06
    1028:	00 97       	sbiw	r24, 0x00	; 0
    102a:	59 f1       	breq	.+86     	; 0x1082 <CLCD_u8WriteSpecialCharacter+0x7e>
	{
		uint8 Local_u8CGRAMAdd =copy_u8PatternNumber*8u;
    102c:	8c 81       	ldd	r24, Y+4	; 0x04
    102e:	88 2f       	mov	r24, r24
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	88 0f       	add	r24, r24
    1034:	99 1f       	adc	r25, r25
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	8a 83       	std	Y+2, r24	; 0x02
		uint8 Local_u8Iterator;
		/*set bit6 clear bit7 for setting CGRAM adress command*/
		SET_BIT(Local_u8CGRAMAdd,6u);
    1040:	8a 81       	ldd	r24, Y+2	; 0x02
    1042:	80 64       	ori	r24, 0x40	; 64
    1044:	8a 83       	std	Y+2, r24	; 0x02
		/*Set CGRAM adress*/
		CLCD_voidSendCommand(Local_u8CGRAMAdd);
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
		/*write the pattern inside CGRAM*/
		for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    104c:	19 82       	std	Y+1, r1	; 0x01
    104e:	0e c0       	rjmp	.+28     	; 0x106c <CLCD_u8WriteSpecialCharacter+0x68>
		{
			CLCD_voidSendData(copy_pu8PatternArr[Local_u8Iterator]);
    1050:	89 81       	ldd	r24, Y+1	; 0x01
    1052:	28 2f       	mov	r18, r24
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	8d 81       	ldd	r24, Y+5	; 0x05
    1058:	9e 81       	ldd	r25, Y+6	; 0x06
    105a:	fc 01       	movw	r30, r24
    105c:	e2 0f       	add	r30, r18
    105e:	f3 1f       	adc	r31, r19
    1060:	80 81       	ld	r24, Z
    1062:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		/*set bit6 clear bit7 for setting CGRAM adress command*/
		SET_BIT(Local_u8CGRAMAdd,6u);
		/*Set CGRAM adress*/
		CLCD_voidSendCommand(Local_u8CGRAMAdd);
		/*write the pattern inside CGRAM*/
		for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1066:	89 81       	ldd	r24, Y+1	; 0x01
    1068:	8f 5f       	subi	r24, 0xFF	; 255
    106a:	89 83       	std	Y+1, r24	; 0x01
    106c:	89 81       	ldd	r24, Y+1	; 0x01
    106e:	88 30       	cpi	r24, 0x08	; 8
    1070:	78 f3       	brcs	.-34     	; 0x1050 <CLCD_u8WriteSpecialCharacter+0x4c>
		{
			CLCD_voidSendData(copy_pu8PatternArr[Local_u8Iterator]);
		}
		/*set DDRAM adress*/
		CLCD_voidGoToXY(copy_u8Xpos,copy_u8Ypos);
    1072:	8f 81       	ldd	r24, Y+7	; 0x07
    1074:	68 85       	ldd	r22, Y+8	; 0x08
    1076:	0e 94 de 07 	call	0xfbc	; 0xfbc <CLCD_voidGoToXY>
		/*write the corresponding pattern number to be displayed from CGRAM*/
		CLCD_voidSendData(copy_u8PatternNumber);
    107a:	8c 81       	ldd	r24, Y+4	; 0x04
    107c:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <CLCD_u8WriteSpecialCharacter+0x82>
	}
	else
	{
		Local_u8ErrorState=NULL_PTR;
    1082:	82 e0       	ldi	r24, 0x02	; 2
    1084:	8b 83       	std	Y+3, r24	; 0x03
	}
	return Local_u8ErrorState;
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1088:	28 96       	adiw	r28, 0x08	; 8
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	de bf       	out	0x3e, r29	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	cd bf       	out	0x3d, r28	; 61
    1094:	cf 91       	pop	r28
    1096:	df 91       	pop	r29
    1098:	08 95       	ret

0000109a <CLCD_voidClearGide>:



/*function that recieve x pos and y pos and the number of gride to be deleted*/
void CLCD_voidClearGide(uint8 Copy_Xpos,uint8 Copy_Ypos,uint8 Copy_GridNum )
{
    109a:	df 93       	push	r29
    109c:	cf 93       	push	r28
    109e:	00 d0       	rcall	.+0      	; 0x10a0 <CLCD_voidClearGide+0x6>
    10a0:	00 d0       	rcall	.+0      	; 0x10a2 <CLCD_voidClearGide+0x8>
    10a2:	cd b7       	in	r28, 0x3d	; 61
    10a4:	de b7       	in	r29, 0x3e	; 62
    10a6:	8a 83       	std	Y+2, r24	; 0x02
    10a8:	6b 83       	std	Y+3, r22	; 0x03
    10aa:	4c 83       	std	Y+4, r20	; 0x04
uint8 Local_u8Iterator;
CLCD_voidGoToXY(Copy_Xpos,Copy_Ypos);
    10ac:	8a 81       	ldd	r24, Y+2	; 0x02
    10ae:	6b 81       	ldd	r22, Y+3	; 0x03
    10b0:	0e 94 de 07 	call	0xfbc	; 0xfbc <CLCD_voidGoToXY>
for(Local_u8Iterator=0;Local_u8Iterator<Copy_GridNum;Local_u8Iterator++)
    10b4:	19 82       	std	Y+1, r1	; 0x01
    10b6:	06 c0       	rjmp	.+12     	; 0x10c4 <CLCD_voidClearGide+0x2a>
{
	 CLCD_voidSendData(32);//32 is the ascii of space
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
/*function that recieve x pos and y pos and the number of gride to be deleted*/
void CLCD_voidClearGide(uint8 Copy_Xpos,uint8 Copy_Ypos,uint8 Copy_GridNum )
{
uint8 Local_u8Iterator;
CLCD_voidGoToXY(Copy_Xpos,Copy_Ypos);
for(Local_u8Iterator=0;Local_u8Iterator<Copy_GridNum;Local_u8Iterator++)
    10be:	89 81       	ldd	r24, Y+1	; 0x01
    10c0:	8f 5f       	subi	r24, 0xFF	; 255
    10c2:	89 83       	std	Y+1, r24	; 0x01
    10c4:	99 81       	ldd	r25, Y+1	; 0x01
    10c6:	8c 81       	ldd	r24, Y+4	; 0x04
    10c8:	98 17       	cp	r25, r24
    10ca:	b0 f3       	brcs	.-20     	; 0x10b8 <CLCD_voidClearGide+0x1e>
{
	 CLCD_voidSendData(32);//32 is the ascii of space
}
}
    10cc:	0f 90       	pop	r0
    10ce:	0f 90       	pop	r0
    10d0:	0f 90       	pop	r0
    10d2:	0f 90       	pop	r0
    10d4:	cf 91       	pop	r28
    10d6:	df 91       	pop	r29
    10d8:	08 95       	ret

000010da <CLCD_u8SendStringAtPos>:


/*function that print a string at specefic postion*/
void CLCD_u8SendStringAtPos (uint8 copy_u8XPos,uint8 copy_u8YPos,const char *copy_Chstring)
{
    10da:	df 93       	push	r29
    10dc:	cf 93       	push	r28
    10de:	00 d0       	rcall	.+0      	; 0x10e0 <CLCD_u8SendStringAtPos+0x6>
    10e0:	00 d0       	rcall	.+0      	; 0x10e2 <CLCD_u8SendStringAtPos+0x8>
    10e2:	cd b7       	in	r28, 0x3d	; 61
    10e4:	de b7       	in	r29, 0x3e	; 62
    10e6:	89 83       	std	Y+1, r24	; 0x01
    10e8:	6a 83       	std	Y+2, r22	; 0x02
    10ea:	5c 83       	std	Y+4, r21	; 0x04
    10ec:	4b 83       	std	Y+3, r20	; 0x03
CLCD_voidGoToXY(copy_u8XPos, copy_u8YPos);
    10ee:	89 81       	ldd	r24, Y+1	; 0x01
    10f0:	6a 81       	ldd	r22, Y+2	; 0x02
    10f2:	0e 94 de 07 	call	0xfbc	; 0xfbc <CLCD_voidGoToXY>

CLCD_u8SendString(copy_Chstring);
    10f6:	8b 81       	ldd	r24, Y+3	; 0x03
    10f8:	9c 81       	ldd	r25, Y+4	; 0x04
    10fa:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
}
    10fe:	0f 90       	pop	r0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	cf 91       	pop	r28
    1108:	df 91       	pop	r29
    110a:	08 95       	ret

0000110c <DIO_u8SetPinDirection>:
#include "DIO_reg.h"
#include "DIO_interface.h"


uint8 DIO_u8SetPinDirection (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinDir_t copy_Dir)
{
    110c:	df 93       	push	r29
    110e:	cf 93       	push	r28
    1110:	cd b7       	in	r28, 0x3d	; 61
    1112:	de b7       	in	r29, 0x3e	; 62
    1114:	28 97       	sbiw	r28, 0x08	; 8
    1116:	0f b6       	in	r0, 0x3f	; 63
    1118:	f8 94       	cli
    111a:	de bf       	out	0x3e, r29	; 62
    111c:	0f be       	out	0x3f, r0	; 63
    111e:	cd bf       	out	0x3d, r28	; 61
    1120:	8a 83       	std	Y+2, r24	; 0x02
    1122:	6b 83       	std	Y+3, r22	; 0x03
    1124:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState= OK;
    1126:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	88 30       	cpi	r24, 0x08	; 8
    112c:	08 f0       	brcs	.+2      	; 0x1130 <DIO_u8SetPinDirection+0x24>
    112e:	f3 c0       	rjmp	.+486    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
	{
		if(copy_Dir==DIO_PIN_INPUT)
    1130:	8c 81       	ldd	r24, Y+4	; 0x04
    1132:	88 23       	and	r24, r24
    1134:	09 f0       	breq	.+2      	; 0x1138 <DIO_u8SetPinDirection+0x2c>
    1136:	77 c0       	rjmp	.+238    	; 0x1226 <DIO_u8SetPinDirection+0x11a>
		{
			switch (copy_Port)
    1138:	8a 81       	ldd	r24, Y+2	; 0x02
    113a:	28 2f       	mov	r18, r24
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	38 87       	std	Y+8, r19	; 0x08
    1140:	2f 83       	std	Y+7, r18	; 0x07
    1142:	8f 81       	ldd	r24, Y+7	; 0x07
    1144:	98 85       	ldd	r25, Y+8	; 0x08
    1146:	81 30       	cpi	r24, 0x01	; 1
    1148:	91 05       	cpc	r25, r1
    114a:	59 f1       	breq	.+86     	; 0x11a2 <DIO_u8SetPinDirection+0x96>
    114c:	2f 81       	ldd	r18, Y+7	; 0x07
    114e:	38 85       	ldd	r19, Y+8	; 0x08
    1150:	22 30       	cpi	r18, 0x02	; 2
    1152:	31 05       	cpc	r19, r1
    1154:	2c f4       	brge	.+10     	; 0x1160 <DIO_u8SetPinDirection+0x54>
    1156:	8f 81       	ldd	r24, Y+7	; 0x07
    1158:	98 85       	ldd	r25, Y+8	; 0x08
    115a:	00 97       	sbiw	r24, 0x00	; 0
    115c:	69 f0       	breq	.+26     	; 0x1178 <DIO_u8SetPinDirection+0x6c>
    115e:	60 c0       	rjmp	.+192    	; 0x1220 <DIO_u8SetPinDirection+0x114>
    1160:	2f 81       	ldd	r18, Y+7	; 0x07
    1162:	38 85       	ldd	r19, Y+8	; 0x08
    1164:	22 30       	cpi	r18, 0x02	; 2
    1166:	31 05       	cpc	r19, r1
    1168:	89 f1       	breq	.+98     	; 0x11cc <DIO_u8SetPinDirection+0xc0>
    116a:	8f 81       	ldd	r24, Y+7	; 0x07
    116c:	98 85       	ldd	r25, Y+8	; 0x08
    116e:	83 30       	cpi	r24, 0x03	; 3
    1170:	91 05       	cpc	r25, r1
    1172:	09 f4       	brne	.+2      	; 0x1176 <DIO_u8SetPinDirection+0x6a>
    1174:	40 c0       	rjmp	.+128    	; 0x11f6 <DIO_u8SetPinDirection+0xea>
    1176:	54 c0       	rjmp	.+168    	; 0x1220 <DIO_u8SetPinDirection+0x114>
			{
			case DIO_PORTA:CLR_BIT(DDRA,copy_PinNum);break;
    1178:	aa e3       	ldi	r26, 0x3A	; 58
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	ea e3       	ldi	r30, 0x3A	; 58
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	80 81       	ld	r24, Z
    1182:	48 2f       	mov	r20, r24
    1184:	8b 81       	ldd	r24, Y+3	; 0x03
    1186:	28 2f       	mov	r18, r24
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	02 2e       	mov	r0, r18
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <DIO_u8SetPinDirection+0x8a>
    1192:	88 0f       	add	r24, r24
    1194:	99 1f       	adc	r25, r25
    1196:	0a 94       	dec	r0
    1198:	e2 f7       	brpl	.-8      	; 0x1192 <DIO_u8SetPinDirection+0x86>
    119a:	80 95       	com	r24
    119c:	84 23       	and	r24, r20
    119e:	8c 93       	st	X, r24
    11a0:	ba c0       	rjmp	.+372    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:CLR_BIT(DDRB,copy_PinNum);break;
    11a2:	a7 e3       	ldi	r26, 0x37	; 55
    11a4:	b0 e0       	ldi	r27, 0x00	; 0
    11a6:	e7 e3       	ldi	r30, 0x37	; 55
    11a8:	f0 e0       	ldi	r31, 0x00	; 0
    11aa:	80 81       	ld	r24, Z
    11ac:	48 2f       	mov	r20, r24
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	28 2f       	mov	r18, r24
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	02 2e       	mov	r0, r18
    11ba:	02 c0       	rjmp	.+4      	; 0x11c0 <DIO_u8SetPinDirection+0xb4>
    11bc:	88 0f       	add	r24, r24
    11be:	99 1f       	adc	r25, r25
    11c0:	0a 94       	dec	r0
    11c2:	e2 f7       	brpl	.-8      	; 0x11bc <DIO_u8SetPinDirection+0xb0>
    11c4:	80 95       	com	r24
    11c6:	84 23       	and	r24, r20
    11c8:	8c 93       	st	X, r24
    11ca:	a5 c0       	rjmp	.+330    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:CLR_BIT(DDRC,copy_PinNum);break;
    11cc:	a4 e3       	ldi	r26, 0x34	; 52
    11ce:	b0 e0       	ldi	r27, 0x00	; 0
    11d0:	e4 e3       	ldi	r30, 0x34	; 52
    11d2:	f0 e0       	ldi	r31, 0x00	; 0
    11d4:	80 81       	ld	r24, Z
    11d6:	48 2f       	mov	r20, r24
    11d8:	8b 81       	ldd	r24, Y+3	; 0x03
    11da:	28 2f       	mov	r18, r24
    11dc:	30 e0       	ldi	r19, 0x00	; 0
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	02 2e       	mov	r0, r18
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <DIO_u8SetPinDirection+0xde>
    11e6:	88 0f       	add	r24, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	0a 94       	dec	r0
    11ec:	e2 f7       	brpl	.-8      	; 0x11e6 <DIO_u8SetPinDirection+0xda>
    11ee:	80 95       	com	r24
    11f0:	84 23       	and	r24, r20
    11f2:	8c 93       	st	X, r24
    11f4:	90 c0       	rjmp	.+288    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:CLR_BIT(DDRD,copy_PinNum);break;
    11f6:	a1 e3       	ldi	r26, 0x31	; 49
    11f8:	b0 e0       	ldi	r27, 0x00	; 0
    11fa:	e1 e3       	ldi	r30, 0x31	; 49
    11fc:	f0 e0       	ldi	r31, 0x00	; 0
    11fe:	80 81       	ld	r24, Z
    1200:	48 2f       	mov	r20, r24
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	28 2f       	mov	r18, r24
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	81 e0       	ldi	r24, 0x01	; 1
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	02 2e       	mov	r0, r18
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <DIO_u8SetPinDirection+0x108>
    1210:	88 0f       	add	r24, r24
    1212:	99 1f       	adc	r25, r25
    1214:	0a 94       	dec	r0
    1216:	e2 f7       	brpl	.-8      	; 0x1210 <DIO_u8SetPinDirection+0x104>
    1218:	80 95       	com	r24
    121a:	84 23       	and	r24, r20
    121c:	8c 93       	st	X, r24
    121e:	7b c0       	rjmp	.+246    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	78 c0       	rjmp	.+240    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			}

		}
		else if(copy_Dir==DIO_PIN_OUTPUT)
    1226:	8c 81       	ldd	r24, Y+4	; 0x04
    1228:	81 30       	cpi	r24, 0x01	; 1
    122a:	09 f0       	breq	.+2      	; 0x122e <DIO_u8SetPinDirection+0x122>
    122c:	72 c0       	rjmp	.+228    	; 0x1312 <DIO_u8SetPinDirection+0x206>
		{
			switch (copy_Port)
    122e:	8a 81       	ldd	r24, Y+2	; 0x02
    1230:	28 2f       	mov	r18, r24
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	3e 83       	std	Y+6, r19	; 0x06
    1236:	2d 83       	std	Y+5, r18	; 0x05
    1238:	8d 81       	ldd	r24, Y+5	; 0x05
    123a:	9e 81       	ldd	r25, Y+6	; 0x06
    123c:	81 30       	cpi	r24, 0x01	; 1
    123e:	91 05       	cpc	r25, r1
    1240:	49 f1       	breq	.+82     	; 0x1294 <DIO_u8SetPinDirection+0x188>
    1242:	2d 81       	ldd	r18, Y+5	; 0x05
    1244:	3e 81       	ldd	r19, Y+6	; 0x06
    1246:	22 30       	cpi	r18, 0x02	; 2
    1248:	31 05       	cpc	r19, r1
    124a:	2c f4       	brge	.+10     	; 0x1256 <DIO_u8SetPinDirection+0x14a>
    124c:	8d 81       	ldd	r24, Y+5	; 0x05
    124e:	9e 81       	ldd	r25, Y+6	; 0x06
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	61 f0       	breq	.+24     	; 0x126c <DIO_u8SetPinDirection+0x160>
    1254:	5b c0       	rjmp	.+182    	; 0x130c <DIO_u8SetPinDirection+0x200>
    1256:	2d 81       	ldd	r18, Y+5	; 0x05
    1258:	3e 81       	ldd	r19, Y+6	; 0x06
    125a:	22 30       	cpi	r18, 0x02	; 2
    125c:	31 05       	cpc	r19, r1
    125e:	71 f1       	breq	.+92     	; 0x12bc <DIO_u8SetPinDirection+0x1b0>
    1260:	8d 81       	ldd	r24, Y+5	; 0x05
    1262:	9e 81       	ldd	r25, Y+6	; 0x06
    1264:	83 30       	cpi	r24, 0x03	; 3
    1266:	91 05       	cpc	r25, r1
    1268:	e9 f1       	breq	.+122    	; 0x12e4 <DIO_u8SetPinDirection+0x1d8>
    126a:	50 c0       	rjmp	.+160    	; 0x130c <DIO_u8SetPinDirection+0x200>
			{
			case DIO_PORTA:SET_BIT(DDRA,copy_PinNum);break;
    126c:	aa e3       	ldi	r26, 0x3A	; 58
    126e:	b0 e0       	ldi	r27, 0x00	; 0
    1270:	ea e3       	ldi	r30, 0x3A	; 58
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	80 81       	ld	r24, Z
    1276:	48 2f       	mov	r20, r24
    1278:	8b 81       	ldd	r24, Y+3	; 0x03
    127a:	28 2f       	mov	r18, r24
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	02 2e       	mov	r0, r18
    1284:	02 c0       	rjmp	.+4      	; 0x128a <DIO_u8SetPinDirection+0x17e>
    1286:	88 0f       	add	r24, r24
    1288:	99 1f       	adc	r25, r25
    128a:	0a 94       	dec	r0
    128c:	e2 f7       	brpl	.-8      	; 0x1286 <DIO_u8SetPinDirection+0x17a>
    128e:	84 2b       	or	r24, r20
    1290:	8c 93       	st	X, r24
    1292:	41 c0       	rjmp	.+130    	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:SET_BIT(DDRB,copy_PinNum);break;
    1294:	a7 e3       	ldi	r26, 0x37	; 55
    1296:	b0 e0       	ldi	r27, 0x00	; 0
    1298:	e7 e3       	ldi	r30, 0x37	; 55
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	80 81       	ld	r24, Z
    129e:	48 2f       	mov	r20, r24
    12a0:	8b 81       	ldd	r24, Y+3	; 0x03
    12a2:	28 2f       	mov	r18, r24
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	02 2e       	mov	r0, r18
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <DIO_u8SetPinDirection+0x1a6>
    12ae:	88 0f       	add	r24, r24
    12b0:	99 1f       	adc	r25, r25
    12b2:	0a 94       	dec	r0
    12b4:	e2 f7       	brpl	.-8      	; 0x12ae <DIO_u8SetPinDirection+0x1a2>
    12b6:	84 2b       	or	r24, r20
    12b8:	8c 93       	st	X, r24
    12ba:	2d c0       	rjmp	.+90     	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:SET_BIT(DDRC,copy_PinNum);break;
    12bc:	a4 e3       	ldi	r26, 0x34	; 52
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	e4 e3       	ldi	r30, 0x34	; 52
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	80 81       	ld	r24, Z
    12c6:	48 2f       	mov	r20, r24
    12c8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	02 2e       	mov	r0, r18
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <DIO_u8SetPinDirection+0x1ce>
    12d6:	88 0f       	add	r24, r24
    12d8:	99 1f       	adc	r25, r25
    12da:	0a 94       	dec	r0
    12dc:	e2 f7       	brpl	.-8      	; 0x12d6 <DIO_u8SetPinDirection+0x1ca>
    12de:	84 2b       	or	r24, r20
    12e0:	8c 93       	st	X, r24
    12e2:	19 c0       	rjmp	.+50     	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:SET_BIT(DDRD,copy_PinNum);break;
    12e4:	a1 e3       	ldi	r26, 0x31	; 49
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	e1 e3       	ldi	r30, 0x31	; 49
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	80 81       	ld	r24, Z
    12ee:	48 2f       	mov	r20, r24
    12f0:	8b 81       	ldd	r24, Y+3	; 0x03
    12f2:	28 2f       	mov	r18, r24
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	02 2e       	mov	r0, r18
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <DIO_u8SetPinDirection+0x1f6>
    12fe:	88 0f       	add	r24, r24
    1300:	99 1f       	adc	r25, r25
    1302:	0a 94       	dec	r0
    1304:	e2 f7       	brpl	.-8      	; 0x12fe <DIO_u8SetPinDirection+0x1f2>
    1306:	84 2b       	or	r24, r20
    1308:	8c 93       	st	X, r24
    130a:	05 c0       	rjmp	.+10     	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	89 83       	std	Y+1, r24	; 0x01
    1310:	02 c0       	rjmp	.+4      	; 0x1316 <DIO_u8SetPinDirection+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
    1312:	81 e0       	ldi	r24, 0x01	; 1
    1314:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return Local_u8ErrorState;
    1316:	89 81       	ldd	r24, Y+1	; 0x01


}	
    1318:	28 96       	adiw	r28, 0x08	; 8
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	f8 94       	cli
    131e:	de bf       	out	0x3e, r29	; 62
    1320:	0f be       	out	0x3f, r0	; 63
    1322:	cd bf       	out	0x3d, r28	; 61
    1324:	cf 91       	pop	r28
    1326:	df 91       	pop	r29
    1328:	08 95       	ret

0000132a <DIO_SetPortDirection>:
uint8 DIO_SetPortDirection (DIO_Port_t copy_Port ,uint8 copy_u8Port_Dir )
{
    132a:	df 93       	push	r29
    132c:	cf 93       	push	r28
    132e:	00 d0       	rcall	.+0      	; 0x1330 <DIO_SetPortDirection+0x6>
    1330:	00 d0       	rcall	.+0      	; 0x1332 <DIO_SetPortDirection+0x8>
    1332:	0f 92       	push	r0
    1334:	cd b7       	in	r28, 0x3d	; 61
    1336:	de b7       	in	r29, 0x3e	; 62
    1338:	8a 83       	std	Y+2, r24	; 0x02
    133a:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState= OK;
    133c:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
    133e:	8a 81       	ldd	r24, Y+2	; 0x02
    1340:	28 2f       	mov	r18, r24
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	3d 83       	std	Y+5, r19	; 0x05
    1346:	2c 83       	std	Y+4, r18	; 0x04
    1348:	8c 81       	ldd	r24, Y+4	; 0x04
    134a:	9d 81       	ldd	r25, Y+5	; 0x05
    134c:	81 30       	cpi	r24, 0x01	; 1
    134e:	91 05       	cpc	r25, r1
    1350:	d1 f0       	breq	.+52     	; 0x1386 <DIO_SetPortDirection+0x5c>
    1352:	2c 81       	ldd	r18, Y+4	; 0x04
    1354:	3d 81       	ldd	r19, Y+5	; 0x05
    1356:	22 30       	cpi	r18, 0x02	; 2
    1358:	31 05       	cpc	r19, r1
    135a:	2c f4       	brge	.+10     	; 0x1366 <DIO_SetPortDirection+0x3c>
    135c:	8c 81       	ldd	r24, Y+4	; 0x04
    135e:	9d 81       	ldd	r25, Y+5	; 0x05
    1360:	00 97       	sbiw	r24, 0x00	; 0
    1362:	61 f0       	breq	.+24     	; 0x137c <DIO_SetPortDirection+0x52>
    1364:	1f c0       	rjmp	.+62     	; 0x13a4 <DIO_SetPortDirection+0x7a>
    1366:	2c 81       	ldd	r18, Y+4	; 0x04
    1368:	3d 81       	ldd	r19, Y+5	; 0x05
    136a:	22 30       	cpi	r18, 0x02	; 2
    136c:	31 05       	cpc	r19, r1
    136e:	81 f0       	breq	.+32     	; 0x1390 <DIO_SetPortDirection+0x66>
    1370:	8c 81       	ldd	r24, Y+4	; 0x04
    1372:	9d 81       	ldd	r25, Y+5	; 0x05
    1374:	83 30       	cpi	r24, 0x03	; 3
    1376:	91 05       	cpc	r25, r1
    1378:	81 f0       	breq	.+32     	; 0x139a <DIO_SetPortDirection+0x70>
    137a:	14 c0       	rjmp	.+40     	; 0x13a4 <DIO_SetPortDirection+0x7a>
	{
	case DIO_PORTA:DDRA=copy_u8Port_Dir;break;
    137c:	ea e3       	ldi	r30, 0x3A	; 58
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	8b 81       	ldd	r24, Y+3	; 0x03
    1382:	80 83       	st	Z, r24
    1384:	11 c0       	rjmp	.+34     	; 0x13a8 <DIO_SetPortDirection+0x7e>
	case DIO_PORTB:DDRB=copy_u8Port_Dir;break;
    1386:	e7 e3       	ldi	r30, 0x37	; 55
    1388:	f0 e0       	ldi	r31, 0x00	; 0
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	80 83       	st	Z, r24
    138e:	0c c0       	rjmp	.+24     	; 0x13a8 <DIO_SetPortDirection+0x7e>
	case DIO_PORTC:DDRC=copy_u8Port_Dir;break;
    1390:	e4 e3       	ldi	r30, 0x34	; 52
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	8b 81       	ldd	r24, Y+3	; 0x03
    1396:	80 83       	st	Z, r24
    1398:	07 c0       	rjmp	.+14     	; 0x13a8 <DIO_SetPortDirection+0x7e>
	case DIO_PORTD:DDRD=copy_u8Port_Dir;break;
    139a:	e1 e3       	ldi	r30, 0x31	; 49
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	8b 81       	ldd	r24, Y+3	; 0x03
    13a0:	80 83       	st	Z, r24
    13a2:	02 c0       	rjmp	.+4      	; 0x13a8 <DIO_SetPortDirection+0x7e>
	default :Local_u8ErrorState=NOK;break;
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    13a8:	89 81       	ldd	r24, Y+1	; 0x01
}
    13aa:	0f 90       	pop	r0
    13ac:	0f 90       	pop	r0
    13ae:	0f 90       	pop	r0
    13b0:	0f 90       	pop	r0
    13b2:	0f 90       	pop	r0
    13b4:	cf 91       	pop	r28
    13b6:	df 91       	pop	r29
    13b8:	08 95       	ret

000013ba <DIO_u8SetPinValue>:


uint8 DIO_u8SetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinVal_t  copy_Val)
{
    13ba:	df 93       	push	r29
    13bc:	cf 93       	push	r28
    13be:	cd b7       	in	r28, 0x3d	; 61
    13c0:	de b7       	in	r29, 0x3e	; 62
    13c2:	28 97       	sbiw	r28, 0x08	; 8
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	8a 83       	std	Y+2, r24	; 0x02
    13d0:	6b 83       	std	Y+3, r22	; 0x03
    13d2:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
    13d4:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    13d6:	8b 81       	ldd	r24, Y+3	; 0x03
    13d8:	88 30       	cpi	r24, 0x08	; 8
    13da:	08 f0       	brcs	.+2      	; 0x13de <DIO_u8SetPinValue+0x24>
    13dc:	f3 c0       	rjmp	.+486    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
	{
		if(copy_Val==DIO_PIN_LOW)
    13de:	8c 81       	ldd	r24, Y+4	; 0x04
    13e0:	88 23       	and	r24, r24
    13e2:	09 f0       	breq	.+2      	; 0x13e6 <DIO_u8SetPinValue+0x2c>
    13e4:	77 c0       	rjmp	.+238    	; 0x14d4 <DIO_u8SetPinValue+0x11a>
		{
			switch (copy_Port)
    13e6:	8a 81       	ldd	r24, Y+2	; 0x02
    13e8:	28 2f       	mov	r18, r24
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	38 87       	std	Y+8, r19	; 0x08
    13ee:	2f 83       	std	Y+7, r18	; 0x07
    13f0:	8f 81       	ldd	r24, Y+7	; 0x07
    13f2:	98 85       	ldd	r25, Y+8	; 0x08
    13f4:	81 30       	cpi	r24, 0x01	; 1
    13f6:	91 05       	cpc	r25, r1
    13f8:	59 f1       	breq	.+86     	; 0x1450 <DIO_u8SetPinValue+0x96>
    13fa:	2f 81       	ldd	r18, Y+7	; 0x07
    13fc:	38 85       	ldd	r19, Y+8	; 0x08
    13fe:	22 30       	cpi	r18, 0x02	; 2
    1400:	31 05       	cpc	r19, r1
    1402:	2c f4       	brge	.+10     	; 0x140e <DIO_u8SetPinValue+0x54>
    1404:	8f 81       	ldd	r24, Y+7	; 0x07
    1406:	98 85       	ldd	r25, Y+8	; 0x08
    1408:	00 97       	sbiw	r24, 0x00	; 0
    140a:	69 f0       	breq	.+26     	; 0x1426 <DIO_u8SetPinValue+0x6c>
    140c:	60 c0       	rjmp	.+192    	; 0x14ce <DIO_u8SetPinValue+0x114>
    140e:	2f 81       	ldd	r18, Y+7	; 0x07
    1410:	38 85       	ldd	r19, Y+8	; 0x08
    1412:	22 30       	cpi	r18, 0x02	; 2
    1414:	31 05       	cpc	r19, r1
    1416:	89 f1       	breq	.+98     	; 0x147a <DIO_u8SetPinValue+0xc0>
    1418:	8f 81       	ldd	r24, Y+7	; 0x07
    141a:	98 85       	ldd	r25, Y+8	; 0x08
    141c:	83 30       	cpi	r24, 0x03	; 3
    141e:	91 05       	cpc	r25, r1
    1420:	09 f4       	brne	.+2      	; 0x1424 <DIO_u8SetPinValue+0x6a>
    1422:	40 c0       	rjmp	.+128    	; 0x14a4 <DIO_u8SetPinValue+0xea>
    1424:	54 c0       	rjmp	.+168    	; 0x14ce <DIO_u8SetPinValue+0x114>
			{
			case DIO_PORTA:CLR_BIT(PORTA,copy_PinNum);break;
    1426:	ab e3       	ldi	r26, 0x3B	; 59
    1428:	b0 e0       	ldi	r27, 0x00	; 0
    142a:	eb e3       	ldi	r30, 0x3B	; 59
    142c:	f0 e0       	ldi	r31, 0x00	; 0
    142e:	80 81       	ld	r24, Z
    1430:	48 2f       	mov	r20, r24
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	28 2f       	mov	r18, r24
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	81 e0       	ldi	r24, 0x01	; 1
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	02 2e       	mov	r0, r18
    143e:	02 c0       	rjmp	.+4      	; 0x1444 <DIO_u8SetPinValue+0x8a>
    1440:	88 0f       	add	r24, r24
    1442:	99 1f       	adc	r25, r25
    1444:	0a 94       	dec	r0
    1446:	e2 f7       	brpl	.-8      	; 0x1440 <DIO_u8SetPinValue+0x86>
    1448:	80 95       	com	r24
    144a:	84 23       	and	r24, r20
    144c:	8c 93       	st	X, r24
    144e:	ba c0       	rjmp	.+372    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:CLR_BIT(PORTB,copy_PinNum);break;
    1450:	a8 e3       	ldi	r26, 0x38	; 56
    1452:	b0 e0       	ldi	r27, 0x00	; 0
    1454:	e8 e3       	ldi	r30, 0x38	; 56
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	80 81       	ld	r24, Z
    145a:	48 2f       	mov	r20, r24
    145c:	8b 81       	ldd	r24, Y+3	; 0x03
    145e:	28 2f       	mov	r18, r24
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	81 e0       	ldi	r24, 0x01	; 1
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	02 2e       	mov	r0, r18
    1468:	02 c0       	rjmp	.+4      	; 0x146e <DIO_u8SetPinValue+0xb4>
    146a:	88 0f       	add	r24, r24
    146c:	99 1f       	adc	r25, r25
    146e:	0a 94       	dec	r0
    1470:	e2 f7       	brpl	.-8      	; 0x146a <DIO_u8SetPinValue+0xb0>
    1472:	80 95       	com	r24
    1474:	84 23       	and	r24, r20
    1476:	8c 93       	st	X, r24
    1478:	a5 c0       	rjmp	.+330    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:CLR_BIT(PORTC,copy_PinNum);break;
    147a:	a5 e3       	ldi	r26, 0x35	; 53
    147c:	b0 e0       	ldi	r27, 0x00	; 0
    147e:	e5 e3       	ldi	r30, 0x35	; 53
    1480:	f0 e0       	ldi	r31, 0x00	; 0
    1482:	80 81       	ld	r24, Z
    1484:	48 2f       	mov	r20, r24
    1486:	8b 81       	ldd	r24, Y+3	; 0x03
    1488:	28 2f       	mov	r18, r24
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	81 e0       	ldi	r24, 0x01	; 1
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	02 2e       	mov	r0, r18
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <DIO_u8SetPinValue+0xde>
    1494:	88 0f       	add	r24, r24
    1496:	99 1f       	adc	r25, r25
    1498:	0a 94       	dec	r0
    149a:	e2 f7       	brpl	.-8      	; 0x1494 <DIO_u8SetPinValue+0xda>
    149c:	80 95       	com	r24
    149e:	84 23       	and	r24, r20
    14a0:	8c 93       	st	X, r24
    14a2:	90 c0       	rjmp	.+288    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:CLR_BIT(PORTD,copy_PinNum);break;
    14a4:	a2 e3       	ldi	r26, 0x32	; 50
    14a6:	b0 e0       	ldi	r27, 0x00	; 0
    14a8:	e2 e3       	ldi	r30, 0x32	; 50
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	80 81       	ld	r24, Z
    14ae:	48 2f       	mov	r20, r24
    14b0:	8b 81       	ldd	r24, Y+3	; 0x03
    14b2:	28 2f       	mov	r18, r24
    14b4:	30 e0       	ldi	r19, 0x00	; 0
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	02 2e       	mov	r0, r18
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <DIO_u8SetPinValue+0x108>
    14be:	88 0f       	add	r24, r24
    14c0:	99 1f       	adc	r25, r25
    14c2:	0a 94       	dec	r0
    14c4:	e2 f7       	brpl	.-8      	; 0x14be <DIO_u8SetPinValue+0x104>
    14c6:	80 95       	com	r24
    14c8:	84 23       	and	r24, r20
    14ca:	8c 93       	st	X, r24
    14cc:	7b c0       	rjmp	.+246    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	89 83       	std	Y+1, r24	; 0x01
    14d2:	78 c0       	rjmp	.+240    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			}


		}
		else if(copy_Val==DIO_PIN_HIGH)
    14d4:	8c 81       	ldd	r24, Y+4	; 0x04
    14d6:	81 30       	cpi	r24, 0x01	; 1
    14d8:	09 f0       	breq	.+2      	; 0x14dc <DIO_u8SetPinValue+0x122>
    14da:	72 c0       	rjmp	.+228    	; 0x15c0 <DIO_u8SetPinValue+0x206>
		{
			switch (copy_Port)
    14dc:	8a 81       	ldd	r24, Y+2	; 0x02
    14de:	28 2f       	mov	r18, r24
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	3e 83       	std	Y+6, r19	; 0x06
    14e4:	2d 83       	std	Y+5, r18	; 0x05
    14e6:	8d 81       	ldd	r24, Y+5	; 0x05
    14e8:	9e 81       	ldd	r25, Y+6	; 0x06
    14ea:	81 30       	cpi	r24, 0x01	; 1
    14ec:	91 05       	cpc	r25, r1
    14ee:	49 f1       	breq	.+82     	; 0x1542 <DIO_u8SetPinValue+0x188>
    14f0:	2d 81       	ldd	r18, Y+5	; 0x05
    14f2:	3e 81       	ldd	r19, Y+6	; 0x06
    14f4:	22 30       	cpi	r18, 0x02	; 2
    14f6:	31 05       	cpc	r19, r1
    14f8:	2c f4       	brge	.+10     	; 0x1504 <DIO_u8SetPinValue+0x14a>
    14fa:	8d 81       	ldd	r24, Y+5	; 0x05
    14fc:	9e 81       	ldd	r25, Y+6	; 0x06
    14fe:	00 97       	sbiw	r24, 0x00	; 0
    1500:	61 f0       	breq	.+24     	; 0x151a <DIO_u8SetPinValue+0x160>
    1502:	5b c0       	rjmp	.+182    	; 0x15ba <DIO_u8SetPinValue+0x200>
    1504:	2d 81       	ldd	r18, Y+5	; 0x05
    1506:	3e 81       	ldd	r19, Y+6	; 0x06
    1508:	22 30       	cpi	r18, 0x02	; 2
    150a:	31 05       	cpc	r19, r1
    150c:	71 f1       	breq	.+92     	; 0x156a <DIO_u8SetPinValue+0x1b0>
    150e:	8d 81       	ldd	r24, Y+5	; 0x05
    1510:	9e 81       	ldd	r25, Y+6	; 0x06
    1512:	83 30       	cpi	r24, 0x03	; 3
    1514:	91 05       	cpc	r25, r1
    1516:	e9 f1       	breq	.+122    	; 0x1592 <DIO_u8SetPinValue+0x1d8>
    1518:	50 c0       	rjmp	.+160    	; 0x15ba <DIO_u8SetPinValue+0x200>
			{
			case DIO_PORTA:SET_BIT(PORTA,copy_PinNum);break;
    151a:	ab e3       	ldi	r26, 0x3B	; 59
    151c:	b0 e0       	ldi	r27, 0x00	; 0
    151e:	eb e3       	ldi	r30, 0x3B	; 59
    1520:	f0 e0       	ldi	r31, 0x00	; 0
    1522:	80 81       	ld	r24, Z
    1524:	48 2f       	mov	r20, r24
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	28 2f       	mov	r18, r24
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	02 2e       	mov	r0, r18
    1532:	02 c0       	rjmp	.+4      	; 0x1538 <DIO_u8SetPinValue+0x17e>
    1534:	88 0f       	add	r24, r24
    1536:	99 1f       	adc	r25, r25
    1538:	0a 94       	dec	r0
    153a:	e2 f7       	brpl	.-8      	; 0x1534 <DIO_u8SetPinValue+0x17a>
    153c:	84 2b       	or	r24, r20
    153e:	8c 93       	st	X, r24
    1540:	41 c0       	rjmp	.+130    	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:SET_BIT(PORTB,copy_PinNum);break;
    1542:	a8 e3       	ldi	r26, 0x38	; 56
    1544:	b0 e0       	ldi	r27, 0x00	; 0
    1546:	e8 e3       	ldi	r30, 0x38	; 56
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	80 81       	ld	r24, Z
    154c:	48 2f       	mov	r20, r24
    154e:	8b 81       	ldd	r24, Y+3	; 0x03
    1550:	28 2f       	mov	r18, r24
    1552:	30 e0       	ldi	r19, 0x00	; 0
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	02 2e       	mov	r0, r18
    155a:	02 c0       	rjmp	.+4      	; 0x1560 <DIO_u8SetPinValue+0x1a6>
    155c:	88 0f       	add	r24, r24
    155e:	99 1f       	adc	r25, r25
    1560:	0a 94       	dec	r0
    1562:	e2 f7       	brpl	.-8      	; 0x155c <DIO_u8SetPinValue+0x1a2>
    1564:	84 2b       	or	r24, r20
    1566:	8c 93       	st	X, r24
    1568:	2d c0       	rjmp	.+90     	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:SET_BIT(PORTC,copy_PinNum);break;
    156a:	a5 e3       	ldi	r26, 0x35	; 53
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	e5 e3       	ldi	r30, 0x35	; 53
    1570:	f0 e0       	ldi	r31, 0x00	; 0
    1572:	80 81       	ld	r24, Z
    1574:	48 2f       	mov	r20, r24
    1576:	8b 81       	ldd	r24, Y+3	; 0x03
    1578:	28 2f       	mov	r18, r24
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	81 e0       	ldi	r24, 0x01	; 1
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	02 2e       	mov	r0, r18
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <DIO_u8SetPinValue+0x1ce>
    1584:	88 0f       	add	r24, r24
    1586:	99 1f       	adc	r25, r25
    1588:	0a 94       	dec	r0
    158a:	e2 f7       	brpl	.-8      	; 0x1584 <DIO_u8SetPinValue+0x1ca>
    158c:	84 2b       	or	r24, r20
    158e:	8c 93       	st	X, r24
    1590:	19 c0       	rjmp	.+50     	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:SET_BIT(PORTD,copy_PinNum);break;
    1592:	a2 e3       	ldi	r26, 0x32	; 50
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	e2 e3       	ldi	r30, 0x32	; 50
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	48 2f       	mov	r20, r24
    159e:	8b 81       	ldd	r24, Y+3	; 0x03
    15a0:	28 2f       	mov	r18, r24
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	02 2e       	mov	r0, r18
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <DIO_u8SetPinValue+0x1f6>
    15ac:	88 0f       	add	r24, r24
    15ae:	99 1f       	adc	r25, r25
    15b0:	0a 94       	dec	r0
    15b2:	e2 f7       	brpl	.-8      	; 0x15ac <DIO_u8SetPinValue+0x1f2>
    15b4:	84 2b       	or	r24, r20
    15b6:	8c 93       	st	X, r24
    15b8:	05 c0       	rjmp	.+10     	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	89 83       	std	Y+1, r24	; 0x01
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <DIO_u8SetPinValue+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	89 83       	std	Y+1, r24	; 0x01
		}
	}


	return Local_u8ErrorState;
    15c4:	89 81       	ldd	r24, Y+1	; 0x01

}
    15c6:	28 96       	adiw	r28, 0x08	; 8
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	f8 94       	cli
    15cc:	de bf       	out	0x3e, r29	; 62
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	cd bf       	out	0x3d, r28	; 61
    15d2:	cf 91       	pop	r28
    15d4:	df 91       	pop	r29
    15d6:	08 95       	ret

000015d8 <DIO_SetPortValue>:

uint8 DIO_SetPortValue (DIO_Port_t copy_Port ,uint8 copy_u8PortVal )
{
    15d8:	df 93       	push	r29
    15da:	cf 93       	push	r28
    15dc:	00 d0       	rcall	.+0      	; 0x15de <DIO_SetPortValue+0x6>
    15de:	00 d0       	rcall	.+0      	; 0x15e0 <DIO_SetPortValue+0x8>
    15e0:	0f 92       	push	r0
    15e2:	cd b7       	in	r28, 0x3d	; 61
    15e4:	de b7       	in	r29, 0x3e	; 62
    15e6:	8a 83       	std	Y+2, r24	; 0x02
    15e8:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState=OK;
    15ea:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
    15ec:	8a 81       	ldd	r24, Y+2	; 0x02
    15ee:	28 2f       	mov	r18, r24
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	3d 83       	std	Y+5, r19	; 0x05
    15f4:	2c 83       	std	Y+4, r18	; 0x04
    15f6:	8c 81       	ldd	r24, Y+4	; 0x04
    15f8:	9d 81       	ldd	r25, Y+5	; 0x05
    15fa:	81 30       	cpi	r24, 0x01	; 1
    15fc:	91 05       	cpc	r25, r1
    15fe:	d1 f0       	breq	.+52     	; 0x1634 <DIO_SetPortValue+0x5c>
    1600:	2c 81       	ldd	r18, Y+4	; 0x04
    1602:	3d 81       	ldd	r19, Y+5	; 0x05
    1604:	22 30       	cpi	r18, 0x02	; 2
    1606:	31 05       	cpc	r19, r1
    1608:	2c f4       	brge	.+10     	; 0x1614 <DIO_SetPortValue+0x3c>
    160a:	8c 81       	ldd	r24, Y+4	; 0x04
    160c:	9d 81       	ldd	r25, Y+5	; 0x05
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	61 f0       	breq	.+24     	; 0x162a <DIO_SetPortValue+0x52>
    1612:	1f c0       	rjmp	.+62     	; 0x1652 <DIO_SetPortValue+0x7a>
    1614:	2c 81       	ldd	r18, Y+4	; 0x04
    1616:	3d 81       	ldd	r19, Y+5	; 0x05
    1618:	22 30       	cpi	r18, 0x02	; 2
    161a:	31 05       	cpc	r19, r1
    161c:	81 f0       	breq	.+32     	; 0x163e <DIO_SetPortValue+0x66>
    161e:	8c 81       	ldd	r24, Y+4	; 0x04
    1620:	9d 81       	ldd	r25, Y+5	; 0x05
    1622:	83 30       	cpi	r24, 0x03	; 3
    1624:	91 05       	cpc	r25, r1
    1626:	81 f0       	breq	.+32     	; 0x1648 <DIO_SetPortValue+0x70>
    1628:	14 c0       	rjmp	.+40     	; 0x1652 <DIO_SetPortValue+0x7a>
	{
	case DIO_PORTA:PORTA=copy_u8PortVal;break;
    162a:	eb e3       	ldi	r30, 0x3B	; 59
    162c:	f0 e0       	ldi	r31, 0x00	; 0
    162e:	8b 81       	ldd	r24, Y+3	; 0x03
    1630:	80 83       	st	Z, r24
    1632:	11 c0       	rjmp	.+34     	; 0x1656 <DIO_SetPortValue+0x7e>
	case DIO_PORTB:PORTB=copy_u8PortVal;break;
    1634:	e8 e3       	ldi	r30, 0x38	; 56
    1636:	f0 e0       	ldi	r31, 0x00	; 0
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	80 83       	st	Z, r24
    163c:	0c c0       	rjmp	.+24     	; 0x1656 <DIO_SetPortValue+0x7e>
	case DIO_PORTC:PORTC=copy_u8PortVal;break;
    163e:	e5 e3       	ldi	r30, 0x35	; 53
    1640:	f0 e0       	ldi	r31, 0x00	; 0
    1642:	8b 81       	ldd	r24, Y+3	; 0x03
    1644:	80 83       	st	Z, r24
    1646:	07 c0       	rjmp	.+14     	; 0x1656 <DIO_SetPortValue+0x7e>
	case DIO_PORTD:PORTD=copy_u8PortVal;break;
    1648:	e2 e3       	ldi	r30, 0x32	; 50
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	8b 81       	ldd	r24, Y+3	; 0x03
    164e:	80 83       	st	Z, r24
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <DIO_SetPortValue+0x7e>
	default :Local_u8ErrorState=NOK;break;
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	89 83       	std	Y+1, r24	; 0x01

	}

	return Local_u8ErrorState;
    1656:	89 81       	ldd	r24, Y+1	; 0x01

}	
    1658:	0f 90       	pop	r0
    165a:	0f 90       	pop	r0
    165c:	0f 90       	pop	r0
    165e:	0f 90       	pop	r0
    1660:	0f 90       	pop	r0
    1662:	cf 91       	pop	r28
    1664:	df 91       	pop	r29
    1666:	08 95       	ret

00001668 <DIO_u8GetPinValue>:
uint8  DIO_u8GetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum, DIO_PinVal_t*  copy_pVal)
{
    1668:	df 93       	push	r29
    166a:	cf 93       	push	r28
    166c:	cd b7       	in	r28, 0x3d	; 61
    166e:	de b7       	in	r29, 0x3e	; 62
    1670:	27 97       	sbiw	r28, 0x07	; 7
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	f8 94       	cli
    1676:	de bf       	out	0x3e, r29	; 62
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	cd bf       	out	0x3d, r28	; 61
    167c:	8a 83       	std	Y+2, r24	; 0x02
    167e:	6b 83       	std	Y+3, r22	; 0x03
    1680:	5d 83       	std	Y+5, r21	; 0x05
    1682:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
    1684:	19 82       	std	Y+1, r1	; 0x01
	if(copy_pVal!=NULL)
    1686:	8c 81       	ldd	r24, Y+4	; 0x04
    1688:	9d 81       	ldd	r25, Y+5	; 0x05
    168a:	00 97       	sbiw	r24, 0x00	; 0
    168c:	09 f4       	brne	.+2      	; 0x1690 <DIO_u8GetPinValue+0x28>
    168e:	7b c0       	rjmp	.+246    	; 0x1786 <DIO_u8GetPinValue+0x11e>
	{
		if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
    1690:	8b 81       	ldd	r24, Y+3	; 0x03
    1692:	88 30       	cpi	r24, 0x08	; 8
    1694:	08 f0       	brcs	.+2      	; 0x1698 <DIO_u8GetPinValue+0x30>
    1696:	74 c0       	rjmp	.+232    	; 0x1780 <DIO_u8GetPinValue+0x118>
		{
			switch(copy_Port)
    1698:	8a 81       	ldd	r24, Y+2	; 0x02
    169a:	28 2f       	mov	r18, r24
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	3f 83       	std	Y+7, r19	; 0x07
    16a0:	2e 83       	std	Y+6, r18	; 0x06
    16a2:	4e 81       	ldd	r20, Y+6	; 0x06
    16a4:	5f 81       	ldd	r21, Y+7	; 0x07
    16a6:	41 30       	cpi	r20, 0x01	; 1
    16a8:	51 05       	cpc	r21, r1
    16aa:	59 f1       	breq	.+86     	; 0x1702 <DIO_u8GetPinValue+0x9a>
    16ac:	8e 81       	ldd	r24, Y+6	; 0x06
    16ae:	9f 81       	ldd	r25, Y+7	; 0x07
    16b0:	82 30       	cpi	r24, 0x02	; 2
    16b2:	91 05       	cpc	r25, r1
    16b4:	34 f4       	brge	.+12     	; 0x16c2 <DIO_u8GetPinValue+0x5a>
    16b6:	2e 81       	ldd	r18, Y+6	; 0x06
    16b8:	3f 81       	ldd	r19, Y+7	; 0x07
    16ba:	21 15       	cp	r18, r1
    16bc:	31 05       	cpc	r19, r1
    16be:	69 f0       	breq	.+26     	; 0x16da <DIO_u8GetPinValue+0x72>
    16c0:	5c c0       	rjmp	.+184    	; 0x177a <DIO_u8GetPinValue+0x112>
    16c2:	4e 81       	ldd	r20, Y+6	; 0x06
    16c4:	5f 81       	ldd	r21, Y+7	; 0x07
    16c6:	42 30       	cpi	r20, 0x02	; 2
    16c8:	51 05       	cpc	r21, r1
    16ca:	79 f1       	breq	.+94     	; 0x172a <DIO_u8GetPinValue+0xc2>
    16cc:	8e 81       	ldd	r24, Y+6	; 0x06
    16ce:	9f 81       	ldd	r25, Y+7	; 0x07
    16d0:	83 30       	cpi	r24, 0x03	; 3
    16d2:	91 05       	cpc	r25, r1
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <DIO_u8GetPinValue+0x70>
    16d6:	3d c0       	rjmp	.+122    	; 0x1752 <DIO_u8GetPinValue+0xea>
    16d8:	50 c0       	rjmp	.+160    	; 0x177a <DIO_u8GetPinValue+0x112>
			{
			case DIO_PORTA:*copy_pVal=GET_BIT(PINA,copy_PinNum);break;
    16da:	e9 e3       	ldi	r30, 0x39	; 57
    16dc:	f0 e0       	ldi	r31, 0x00	; 0
    16de:	80 81       	ld	r24, Z
    16e0:	28 2f       	mov	r18, r24
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	8b 81       	ldd	r24, Y+3	; 0x03
    16e6:	88 2f       	mov	r24, r24
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	a9 01       	movw	r20, r18
    16ec:	02 c0       	rjmp	.+4      	; 0x16f2 <DIO_u8GetPinValue+0x8a>
    16ee:	55 95       	asr	r21
    16f0:	47 95       	ror	r20
    16f2:	8a 95       	dec	r24
    16f4:	e2 f7       	brpl	.-8      	; 0x16ee <DIO_u8GetPinValue+0x86>
    16f6:	ca 01       	movw	r24, r20
    16f8:	81 70       	andi	r24, 0x01	; 1
    16fa:	ec 81       	ldd	r30, Y+4	; 0x04
    16fc:	fd 81       	ldd	r31, Y+5	; 0x05
    16fe:	80 83       	st	Z, r24
    1700:	44 c0       	rjmp	.+136    	; 0x178a <DIO_u8GetPinValue+0x122>
			case DIO_PORTB:*copy_pVal=GET_BIT(PINB,copy_PinNum);break;
    1702:	e6 e3       	ldi	r30, 0x36	; 54
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	80 81       	ld	r24, Z
    1708:	28 2f       	mov	r18, r24
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	8b 81       	ldd	r24, Y+3	; 0x03
    170e:	88 2f       	mov	r24, r24
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	a9 01       	movw	r20, r18
    1714:	02 c0       	rjmp	.+4      	; 0x171a <DIO_u8GetPinValue+0xb2>
    1716:	55 95       	asr	r21
    1718:	47 95       	ror	r20
    171a:	8a 95       	dec	r24
    171c:	e2 f7       	brpl	.-8      	; 0x1716 <DIO_u8GetPinValue+0xae>
    171e:	ca 01       	movw	r24, r20
    1720:	81 70       	andi	r24, 0x01	; 1
    1722:	ec 81       	ldd	r30, Y+4	; 0x04
    1724:	fd 81       	ldd	r31, Y+5	; 0x05
    1726:	80 83       	st	Z, r24
    1728:	30 c0       	rjmp	.+96     	; 0x178a <DIO_u8GetPinValue+0x122>
			case DIO_PORTC:*copy_pVal=GET_BIT(PINC,copy_PinNum);break;
    172a:	e3 e3       	ldi	r30, 0x33	; 51
    172c:	f0 e0       	ldi	r31, 0x00	; 0
    172e:	80 81       	ld	r24, Z
    1730:	28 2f       	mov	r18, r24
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	8b 81       	ldd	r24, Y+3	; 0x03
    1736:	88 2f       	mov	r24, r24
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	a9 01       	movw	r20, r18
    173c:	02 c0       	rjmp	.+4      	; 0x1742 <DIO_u8GetPinValue+0xda>
    173e:	55 95       	asr	r21
    1740:	47 95       	ror	r20
    1742:	8a 95       	dec	r24
    1744:	e2 f7       	brpl	.-8      	; 0x173e <DIO_u8GetPinValue+0xd6>
    1746:	ca 01       	movw	r24, r20
    1748:	81 70       	andi	r24, 0x01	; 1
    174a:	ec 81       	ldd	r30, Y+4	; 0x04
    174c:	fd 81       	ldd	r31, Y+5	; 0x05
    174e:	80 83       	st	Z, r24
    1750:	1c c0       	rjmp	.+56     	; 0x178a <DIO_u8GetPinValue+0x122>
			case DIO_PORTD:*copy_pVal=GET_BIT(PIND,copy_PinNum);break;
    1752:	e0 e3       	ldi	r30, 0x30	; 48
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	28 2f       	mov	r18, r24
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	8b 81       	ldd	r24, Y+3	; 0x03
    175e:	88 2f       	mov	r24, r24
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	a9 01       	movw	r20, r18
    1764:	02 c0       	rjmp	.+4      	; 0x176a <DIO_u8GetPinValue+0x102>
    1766:	55 95       	asr	r21
    1768:	47 95       	ror	r20
    176a:	8a 95       	dec	r24
    176c:	e2 f7       	brpl	.-8      	; 0x1766 <DIO_u8GetPinValue+0xfe>
    176e:	ca 01       	movw	r24, r20
    1770:	81 70       	andi	r24, 0x01	; 1
    1772:	ec 81       	ldd	r30, Y+4	; 0x04
    1774:	fd 81       	ldd	r31, Y+5	; 0x05
    1776:	80 83       	st	Z, r24
    1778:	08 c0       	rjmp	.+16     	; 0x178a <DIO_u8GetPinValue+0x122>
			default :Local_u8ErrorState=NOK;break;
    177a:	81 e0       	ldi	r24, 0x01	; 1
    177c:	89 83       	std	Y+1, r24	; 0x01
    177e:	05 c0       	rjmp	.+10     	; 0x178a <DIO_u8GetPinValue+0x122>
			}

		}
		else
		{
			Local_u8ErrorState=NOK;
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	89 83       	std	Y+1, r24	; 0x01
    1784:	02 c0       	rjmp	.+4      	; 0x178a <DIO_u8GetPinValue+0x122>
		}
	}
	else
	{
		Local_u8ErrorState=NULL_PTR;
    1786:	82 e0       	ldi	r24, 0x02	; 2
    1788:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    178a:	89 81       	ldd	r24, Y+1	; 0x01

}	
    178c:	27 96       	adiw	r28, 0x07	; 7
    178e:	0f b6       	in	r0, 0x3f	; 63
    1790:	f8 94       	cli
    1792:	de bf       	out	0x3e, r29	; 62
    1794:	0f be       	out	0x3f, r0	; 63
    1796:	cd bf       	out	0x3d, r28	; 61
    1798:	cf 91       	pop	r28
    179a:	df 91       	pop	r29
    179c:	08 95       	ret

0000179e <PORT_voidInit>:
#include "PORT_prv.h"
#include "PORT_reg.h"
#include "PORT_interface.h"

void PORT_voidInit (void)
{
    179e:	df 93       	push	r29
    17a0:	cf 93       	push	r28
    17a2:	cd b7       	in	r28, 0x3d	; 61
    17a4:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
    17a6:	ea e3       	ldi	r30, 0x3A	; 58
    17a8:	f0 e0       	ldi	r31, 0x00	; 0
    17aa:	8e e7       	ldi	r24, 0x7E	; 126
    17ac:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    17ae:	e7 e3       	ldi	r30, 0x37	; 55
    17b0:	f0 e0       	ldi	r31, 0x00	; 0
    17b2:	10 82       	st	Z, r1
	DDRC=PORTC_DIR;
    17b4:	e4 e3       	ldi	r30, 0x34	; 52
    17b6:	f0 e0       	ldi	r31, 0x00	; 0
    17b8:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
    17ba:	e1 e3       	ldi	r30, 0x31	; 49
    17bc:	f0 e0       	ldi	r31, 0x00	; 0
    17be:	10 82       	st	Z, r1
	
	
	PORTA=PORTA_INITVAL;
    17c0:	eb e3       	ldi	r30, 0x3B	; 59
    17c2:	f0 e0       	ldi	r31, 0x00	; 0
    17c4:	10 82       	st	Z, r1
	PORTB=PORTB_INITVAL;
    17c6:	e8 e3       	ldi	r30, 0x38	; 56
    17c8:	f0 e0       	ldi	r31, 0x00	; 0
    17ca:	87 e0       	ldi	r24, 0x07	; 7
    17cc:	80 83       	st	Z, r24
    PORTC=PORTC_INITVAL;
    17ce:	e5 e3       	ldi	r30, 0x35	; 53
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	10 82       	st	Z, r1
    PORTD=PORTD_INITVAL;
    17d4:	e2 e3       	ldi	r30, 0x32	; 50
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	10 82       	st	Z, r1
	
	
	
    17da:	cf 91       	pop	r28
    17dc:	df 91       	pop	r29
    17de:	08 95       	ret

000017e0 <main>:

#include "CLCD_interface.h"

#include "CLCD_cfg.h"
void main(void)
{
    17e0:	0f 93       	push	r16
    17e2:	1f 93       	push	r17
    17e4:	df 93       	push	r29
    17e6:	cf 93       	push	r28
    17e8:	cd b7       	in	r28, 0x3d	; 61
    17ea:	de b7       	in	r29, 0x3e	; 62
    17ec:	c4 56       	subi	r28, 0x64	; 100
    17ee:	d1 40       	sbci	r29, 0x01	; 1
    17f0:	0f b6       	in	r0, 0x3f	; 63
    17f2:	f8 94       	cli
    17f4:	de bf       	out	0x3e, r29	; 62
    17f6:	0f be       	out	0x3f, r0	; 63
    17f8:	cd bf       	out	0x3d, r28	; 61

	uint8  Local_u8MyPattern[8] ={0B01110, 0B01010,0B01110,0B00101,0B11111,0B10100,0B01010,0B10001};
    17fa:	ce 01       	movw	r24, r28
    17fc:	84 5e       	subi	r24, 0xE4	; 228
    17fe:	9e 4f       	sbci	r25, 0xFE	; 254
    1800:	c4 5b       	subi	r28, 0xB4	; 180
    1802:	de 4f       	sbci	r29, 0xFE	; 254
    1804:	99 83       	std	Y+1, r25	; 0x01
    1806:	88 83       	st	Y, r24
    1808:	cc 54       	subi	r28, 0x4C	; 76
    180a:	d1 40       	sbci	r29, 0x01	; 1
    180c:	8a ec       	ldi	r24, 0xCA	; 202
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	c2 5b       	subi	r28, 0xB2	; 178
    1812:	de 4f       	sbci	r29, 0xFE	; 254
    1814:	99 83       	std	Y+1, r25	; 0x01
    1816:	88 83       	st	Y, r24
    1818:	ce 54       	subi	r28, 0x4E	; 78
    181a:	d1 40       	sbci	r29, 0x01	; 1
    181c:	98 e0       	ldi	r25, 0x08	; 8
    181e:	c0 5b       	subi	r28, 0xB0	; 176
    1820:	de 4f       	sbci	r29, 0xFE	; 254
    1822:	98 83       	st	Y, r25
    1824:	c0 55       	subi	r28, 0x50	; 80
    1826:	d1 40       	sbci	r29, 0x01	; 1
    1828:	c2 5b       	subi	r28, 0xB2	; 178
    182a:	de 4f       	sbci	r29, 0xFE	; 254
    182c:	a8 81       	ld	r26, Y
    182e:	b9 81       	ldd	r27, Y+1	; 0x01
    1830:	ce 54       	subi	r28, 0x4E	; 78
    1832:	d1 40       	sbci	r29, 0x01	; 1
    1834:	0c 90       	ld	r0, X
    1836:	c2 5b       	subi	r28, 0xB2	; 178
    1838:	de 4f       	sbci	r29, 0xFE	; 254
    183a:	e8 81       	ld	r30, Y
    183c:	f9 81       	ldd	r31, Y+1	; 0x01
    183e:	ce 54       	subi	r28, 0x4E	; 78
    1840:	d1 40       	sbci	r29, 0x01	; 1
    1842:	31 96       	adiw	r30, 0x01	; 1
    1844:	c2 5b       	subi	r28, 0xB2	; 178
    1846:	de 4f       	sbci	r29, 0xFE	; 254
    1848:	f9 83       	std	Y+1, r31	; 0x01
    184a:	e8 83       	st	Y, r30
    184c:	ce 54       	subi	r28, 0x4E	; 78
    184e:	d1 40       	sbci	r29, 0x01	; 1
    1850:	c4 5b       	subi	r28, 0xB4	; 180
    1852:	de 4f       	sbci	r29, 0xFE	; 254
    1854:	a8 81       	ld	r26, Y
    1856:	b9 81       	ldd	r27, Y+1	; 0x01
    1858:	cc 54       	subi	r28, 0x4C	; 76
    185a:	d1 40       	sbci	r29, 0x01	; 1
    185c:	0c 92       	st	X, r0
    185e:	c4 5b       	subi	r28, 0xB4	; 180
    1860:	de 4f       	sbci	r29, 0xFE	; 254
    1862:	e8 81       	ld	r30, Y
    1864:	f9 81       	ldd	r31, Y+1	; 0x01
    1866:	cc 54       	subi	r28, 0x4C	; 76
    1868:	d1 40       	sbci	r29, 0x01	; 1
    186a:	31 96       	adiw	r30, 0x01	; 1
    186c:	c4 5b       	subi	r28, 0xB4	; 180
    186e:	de 4f       	sbci	r29, 0xFE	; 254
    1870:	f9 83       	std	Y+1, r31	; 0x01
    1872:	e8 83       	st	Y, r30
    1874:	cc 54       	subi	r28, 0x4C	; 76
    1876:	d1 40       	sbci	r29, 0x01	; 1
    1878:	c0 5b       	subi	r28, 0xB0	; 176
    187a:	de 4f       	sbci	r29, 0xFE	; 254
    187c:	f8 81       	ld	r31, Y
    187e:	c0 55       	subi	r28, 0x50	; 80
    1880:	d1 40       	sbci	r29, 0x01	; 1
    1882:	f1 50       	subi	r31, 0x01	; 1
    1884:	c0 5b       	subi	r28, 0xB0	; 176
    1886:	de 4f       	sbci	r29, 0xFE	; 254
    1888:	f8 83       	st	Y, r31
    188a:	c0 55       	subi	r28, 0x50	; 80
    188c:	d1 40       	sbci	r29, 0x01	; 1
    188e:	c0 5b       	subi	r28, 0xB0	; 176
    1890:	de 4f       	sbci	r29, 0xFE	; 254
    1892:	88 81       	ld	r24, Y
    1894:	c0 55       	subi	r28, 0x50	; 80
    1896:	d1 40       	sbci	r29, 0x01	; 1
    1898:	88 23       	and	r24, r24
    189a:	31 f6       	brne	.-116    	; 0x1828 <main+0x48>
	uint8  Local_u8MyPattern2[8] ={0B01110,0B01010,0B01110,0B10100,0B11111,0B00101,0B11010,0B00010};
    189c:	ce 01       	movw	r24, r28
    189e:	8c 5d       	subi	r24, 0xDC	; 220
    18a0:	9e 4f       	sbci	r25, 0xFE	; 254
    18a2:	cf 5a       	subi	r28, 0xAF	; 175
    18a4:	de 4f       	sbci	r29, 0xFE	; 254
    18a6:	99 83       	std	Y+1, r25	; 0x01
    18a8:	88 83       	st	Y, r24
    18aa:	c1 55       	subi	r28, 0x51	; 81
    18ac:	d1 40       	sbci	r29, 0x01	; 1
    18ae:	a2 ec       	ldi	r26, 0xC2	; 194
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	cd 5a       	subi	r28, 0xAD	; 173
    18b4:	de 4f       	sbci	r29, 0xFE	; 254
    18b6:	b9 83       	std	Y+1, r27	; 0x01
    18b8:	a8 83       	st	Y, r26
    18ba:	c3 55       	subi	r28, 0x53	; 83
    18bc:	d1 40       	sbci	r29, 0x01	; 1
    18be:	b8 e0       	ldi	r27, 0x08	; 8
    18c0:	cb 5a       	subi	r28, 0xAB	; 171
    18c2:	de 4f       	sbci	r29, 0xFE	; 254
    18c4:	b8 83       	st	Y, r27
    18c6:	c5 55       	subi	r28, 0x55	; 85
    18c8:	d1 40       	sbci	r29, 0x01	; 1
    18ca:	cd 5a       	subi	r28, 0xAD	; 173
    18cc:	de 4f       	sbci	r29, 0xFE	; 254
    18ce:	e8 81       	ld	r30, Y
    18d0:	f9 81       	ldd	r31, Y+1	; 0x01
    18d2:	c3 55       	subi	r28, 0x53	; 83
    18d4:	d1 40       	sbci	r29, 0x01	; 1
    18d6:	00 80       	ld	r0, Z
    18d8:	cd 5a       	subi	r28, 0xAD	; 173
    18da:	de 4f       	sbci	r29, 0xFE	; 254
    18dc:	88 81       	ld	r24, Y
    18de:	99 81       	ldd	r25, Y+1	; 0x01
    18e0:	c3 55       	subi	r28, 0x53	; 83
    18e2:	d1 40       	sbci	r29, 0x01	; 1
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	cd 5a       	subi	r28, 0xAD	; 173
    18e8:	de 4f       	sbci	r29, 0xFE	; 254
    18ea:	99 83       	std	Y+1, r25	; 0x01
    18ec:	88 83       	st	Y, r24
    18ee:	c3 55       	subi	r28, 0x53	; 83
    18f0:	d1 40       	sbci	r29, 0x01	; 1
    18f2:	cf 5a       	subi	r28, 0xAF	; 175
    18f4:	de 4f       	sbci	r29, 0xFE	; 254
    18f6:	a8 81       	ld	r26, Y
    18f8:	b9 81       	ldd	r27, Y+1	; 0x01
    18fa:	c1 55       	subi	r28, 0x51	; 81
    18fc:	d1 40       	sbci	r29, 0x01	; 1
    18fe:	0c 92       	st	X, r0
    1900:	cf 5a       	subi	r28, 0xAF	; 175
    1902:	de 4f       	sbci	r29, 0xFE	; 254
    1904:	e8 81       	ld	r30, Y
    1906:	f9 81       	ldd	r31, Y+1	; 0x01
    1908:	c1 55       	subi	r28, 0x51	; 81
    190a:	d1 40       	sbci	r29, 0x01	; 1
    190c:	31 96       	adiw	r30, 0x01	; 1
    190e:	cf 5a       	subi	r28, 0xAF	; 175
    1910:	de 4f       	sbci	r29, 0xFE	; 254
    1912:	f9 83       	std	Y+1, r31	; 0x01
    1914:	e8 83       	st	Y, r30
    1916:	c1 55       	subi	r28, 0x51	; 81
    1918:	d1 40       	sbci	r29, 0x01	; 1
    191a:	cb 5a       	subi	r28, 0xAB	; 171
    191c:	de 4f       	sbci	r29, 0xFE	; 254
    191e:	f8 81       	ld	r31, Y
    1920:	c5 55       	subi	r28, 0x55	; 85
    1922:	d1 40       	sbci	r29, 0x01	; 1
    1924:	f1 50       	subi	r31, 0x01	; 1
    1926:	cb 5a       	subi	r28, 0xAB	; 171
    1928:	de 4f       	sbci	r29, 0xFE	; 254
    192a:	f8 83       	st	Y, r31
    192c:	c5 55       	subi	r28, 0x55	; 85
    192e:	d1 40       	sbci	r29, 0x01	; 1
    1930:	cb 5a       	subi	r28, 0xAB	; 171
    1932:	de 4f       	sbci	r29, 0xFE	; 254
    1934:	88 81       	ld	r24, Y
    1936:	c5 55       	subi	r28, 0x55	; 85
    1938:	d1 40       	sbci	r29, 0x01	; 1
    193a:	88 23       	and	r24, r24
    193c:	31 f6       	brne	.-116    	; 0x18ca <main+0xea>
	uint8  Local_u8MyPattern3[8] ={ 0B11111,0B10001,0B11111,0B10100,0B11100,0B10000,0B00000,0B00000};
    193e:	ce 01       	movw	r24, r28
    1940:	84 5d       	subi	r24, 0xD4	; 212
    1942:	9e 4f       	sbci	r25, 0xFE	; 254
    1944:	ca 5a       	subi	r28, 0xAA	; 170
    1946:	de 4f       	sbci	r29, 0xFE	; 254
    1948:	99 83       	std	Y+1, r25	; 0x01
    194a:	88 83       	st	Y, r24
    194c:	c6 55       	subi	r28, 0x56	; 86
    194e:	d1 40       	sbci	r29, 0x01	; 1
    1950:	aa eb       	ldi	r26, 0xBA	; 186
    1952:	b0 e0       	ldi	r27, 0x00	; 0
    1954:	c8 5a       	subi	r28, 0xA8	; 168
    1956:	de 4f       	sbci	r29, 0xFE	; 254
    1958:	b9 83       	std	Y+1, r27	; 0x01
    195a:	a8 83       	st	Y, r26
    195c:	c8 55       	subi	r28, 0x58	; 88
    195e:	d1 40       	sbci	r29, 0x01	; 1
    1960:	b8 e0       	ldi	r27, 0x08	; 8
    1962:	c6 5a       	subi	r28, 0xA6	; 166
    1964:	de 4f       	sbci	r29, 0xFE	; 254
    1966:	b8 83       	st	Y, r27
    1968:	ca 55       	subi	r28, 0x5A	; 90
    196a:	d1 40       	sbci	r29, 0x01	; 1
    196c:	c8 5a       	subi	r28, 0xA8	; 168
    196e:	de 4f       	sbci	r29, 0xFE	; 254
    1970:	e8 81       	ld	r30, Y
    1972:	f9 81       	ldd	r31, Y+1	; 0x01
    1974:	c8 55       	subi	r28, 0x58	; 88
    1976:	d1 40       	sbci	r29, 0x01	; 1
    1978:	00 80       	ld	r0, Z
    197a:	c8 5a       	subi	r28, 0xA8	; 168
    197c:	de 4f       	sbci	r29, 0xFE	; 254
    197e:	88 81       	ld	r24, Y
    1980:	99 81       	ldd	r25, Y+1	; 0x01
    1982:	c8 55       	subi	r28, 0x58	; 88
    1984:	d1 40       	sbci	r29, 0x01	; 1
    1986:	01 96       	adiw	r24, 0x01	; 1
    1988:	c8 5a       	subi	r28, 0xA8	; 168
    198a:	de 4f       	sbci	r29, 0xFE	; 254
    198c:	99 83       	std	Y+1, r25	; 0x01
    198e:	88 83       	st	Y, r24
    1990:	c8 55       	subi	r28, 0x58	; 88
    1992:	d1 40       	sbci	r29, 0x01	; 1
    1994:	ca 5a       	subi	r28, 0xAA	; 170
    1996:	de 4f       	sbci	r29, 0xFE	; 254
    1998:	a8 81       	ld	r26, Y
    199a:	b9 81       	ldd	r27, Y+1	; 0x01
    199c:	c6 55       	subi	r28, 0x56	; 86
    199e:	d1 40       	sbci	r29, 0x01	; 1
    19a0:	0c 92       	st	X, r0
    19a2:	ca 5a       	subi	r28, 0xAA	; 170
    19a4:	de 4f       	sbci	r29, 0xFE	; 254
    19a6:	e8 81       	ld	r30, Y
    19a8:	f9 81       	ldd	r31, Y+1	; 0x01
    19aa:	c6 55       	subi	r28, 0x56	; 86
    19ac:	d1 40       	sbci	r29, 0x01	; 1
    19ae:	31 96       	adiw	r30, 0x01	; 1
    19b0:	ca 5a       	subi	r28, 0xAA	; 170
    19b2:	de 4f       	sbci	r29, 0xFE	; 254
    19b4:	f9 83       	std	Y+1, r31	; 0x01
    19b6:	e8 83       	st	Y, r30
    19b8:	c6 55       	subi	r28, 0x56	; 86
    19ba:	d1 40       	sbci	r29, 0x01	; 1
    19bc:	c6 5a       	subi	r28, 0xA6	; 166
    19be:	de 4f       	sbci	r29, 0xFE	; 254
    19c0:	f8 81       	ld	r31, Y
    19c2:	ca 55       	subi	r28, 0x5A	; 90
    19c4:	d1 40       	sbci	r29, 0x01	; 1
    19c6:	f1 50       	subi	r31, 0x01	; 1
    19c8:	c6 5a       	subi	r28, 0xA6	; 166
    19ca:	de 4f       	sbci	r29, 0xFE	; 254
    19cc:	f8 83       	st	Y, r31
    19ce:	ca 55       	subi	r28, 0x5A	; 90
    19d0:	d1 40       	sbci	r29, 0x01	; 1
    19d2:	c6 5a       	subi	r28, 0xA6	; 166
    19d4:	de 4f       	sbci	r29, 0xFE	; 254
    19d6:	88 81       	ld	r24, Y
    19d8:	ca 55       	subi	r28, 0x5A	; 90
    19da:	d1 40       	sbci	r29, 0x01	; 1
    19dc:	88 23       	and	r24, r24
    19de:	31 f6       	brne	.-116    	; 0x196c <main+0x18c>
	uint8  Local_u8MyPattern4[8] ={ 0B00000,0B11111,0B00000,0B00000,0B00000,0B00000,0B00000,0B00000};
    19e0:	ce 01       	movw	r24, r28
    19e2:	8c 5c       	subi	r24, 0xCC	; 204
    19e4:	9e 4f       	sbci	r25, 0xFE	; 254
    19e6:	28 e0       	ldi	r18, 0x08	; 8
    19e8:	fc 01       	movw	r30, r24
    19ea:	df 01       	movw	r26, r30
    19ec:	82 2f       	mov	r24, r18
    19ee:	1d 92       	st	X+, r1
    19f0:	8a 95       	dec	r24
    19f2:	e9 f7       	brne	.-6      	; 0x19ee <main+0x20e>
    19f4:	fe 01       	movw	r30, r28
    19f6:	ec 5c       	subi	r30, 0xCC	; 204
    19f8:	fe 4f       	sbci	r31, 0xFE	; 254
    19fa:	8f e1       	ldi	r24, 0x1F	; 31
    19fc:	81 83       	std	Z+1, r24	; 0x01
	uint8  Local_u8MyPattern5[8] ={0B00000,0B00000,0B11001,0B01111,0B11001,0B00000,0B00000,0B00000};
    19fe:	ce 01       	movw	r24, r28
    1a00:	84 5c       	subi	r24, 0xC4	; 196
    1a02:	9e 4f       	sbci	r25, 0xFE	; 254
    1a04:	c5 5a       	subi	r28, 0xA5	; 165
    1a06:	de 4f       	sbci	r29, 0xFE	; 254
    1a08:	99 83       	std	Y+1, r25	; 0x01
    1a0a:	88 83       	st	Y, r24
    1a0c:	cb 55       	subi	r28, 0x5B	; 91
    1a0e:	d1 40       	sbci	r29, 0x01	; 1
    1a10:	a2 eb       	ldi	r26, 0xB2	; 178
    1a12:	b0 e0       	ldi	r27, 0x00	; 0
    1a14:	c3 5a       	subi	r28, 0xA3	; 163
    1a16:	de 4f       	sbci	r29, 0xFE	; 254
    1a18:	b9 83       	std	Y+1, r27	; 0x01
    1a1a:	a8 83       	st	Y, r26
    1a1c:	cd 55       	subi	r28, 0x5D	; 93
    1a1e:	d1 40       	sbci	r29, 0x01	; 1
    1a20:	b8 e0       	ldi	r27, 0x08	; 8
    1a22:	c1 5a       	subi	r28, 0xA1	; 161
    1a24:	de 4f       	sbci	r29, 0xFE	; 254
    1a26:	b8 83       	st	Y, r27
    1a28:	cf 55       	subi	r28, 0x5F	; 95
    1a2a:	d1 40       	sbci	r29, 0x01	; 1
    1a2c:	c3 5a       	subi	r28, 0xA3	; 163
    1a2e:	de 4f       	sbci	r29, 0xFE	; 254
    1a30:	e8 81       	ld	r30, Y
    1a32:	f9 81       	ldd	r31, Y+1	; 0x01
    1a34:	cd 55       	subi	r28, 0x5D	; 93
    1a36:	d1 40       	sbci	r29, 0x01	; 1
    1a38:	00 80       	ld	r0, Z
    1a3a:	c3 5a       	subi	r28, 0xA3	; 163
    1a3c:	de 4f       	sbci	r29, 0xFE	; 254
    1a3e:	88 81       	ld	r24, Y
    1a40:	99 81       	ldd	r25, Y+1	; 0x01
    1a42:	cd 55       	subi	r28, 0x5D	; 93
    1a44:	d1 40       	sbci	r29, 0x01	; 1
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	c3 5a       	subi	r28, 0xA3	; 163
    1a4a:	de 4f       	sbci	r29, 0xFE	; 254
    1a4c:	99 83       	std	Y+1, r25	; 0x01
    1a4e:	88 83       	st	Y, r24
    1a50:	cd 55       	subi	r28, 0x5D	; 93
    1a52:	d1 40       	sbci	r29, 0x01	; 1
    1a54:	c5 5a       	subi	r28, 0xA5	; 165
    1a56:	de 4f       	sbci	r29, 0xFE	; 254
    1a58:	a8 81       	ld	r26, Y
    1a5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a5c:	cb 55       	subi	r28, 0x5B	; 91
    1a5e:	d1 40       	sbci	r29, 0x01	; 1
    1a60:	0c 92       	st	X, r0
    1a62:	c5 5a       	subi	r28, 0xA5	; 165
    1a64:	de 4f       	sbci	r29, 0xFE	; 254
    1a66:	e8 81       	ld	r30, Y
    1a68:	f9 81       	ldd	r31, Y+1	; 0x01
    1a6a:	cb 55       	subi	r28, 0x5B	; 91
    1a6c:	d1 40       	sbci	r29, 0x01	; 1
    1a6e:	31 96       	adiw	r30, 0x01	; 1
    1a70:	c5 5a       	subi	r28, 0xA5	; 165
    1a72:	de 4f       	sbci	r29, 0xFE	; 254
    1a74:	f9 83       	std	Y+1, r31	; 0x01
    1a76:	e8 83       	st	Y, r30
    1a78:	cb 55       	subi	r28, 0x5B	; 91
    1a7a:	d1 40       	sbci	r29, 0x01	; 1
    1a7c:	c1 5a       	subi	r28, 0xA1	; 161
    1a7e:	de 4f       	sbci	r29, 0xFE	; 254
    1a80:	f8 81       	ld	r31, Y
    1a82:	cf 55       	subi	r28, 0x5F	; 95
    1a84:	d1 40       	sbci	r29, 0x01	; 1
    1a86:	f1 50       	subi	r31, 0x01	; 1
    1a88:	c1 5a       	subi	r28, 0xA1	; 161
    1a8a:	de 4f       	sbci	r29, 0xFE	; 254
    1a8c:	f8 83       	st	Y, r31
    1a8e:	cf 55       	subi	r28, 0x5F	; 95
    1a90:	d1 40       	sbci	r29, 0x01	; 1
    1a92:	c1 5a       	subi	r28, 0xA1	; 161
    1a94:	de 4f       	sbci	r29, 0xFE	; 254
    1a96:	88 81       	ld	r24, Y
    1a98:	cf 55       	subi	r28, 0x5F	; 95
    1a9a:	d1 40       	sbci	r29, 0x01	; 1
    1a9c:	88 23       	and	r24, r24
    1a9e:	31 f6       	brne	.-116    	; 0x1a2c <main+0x24c>
	uint8  Local_u8MyPattern6[8] ={ 0B00000,0B00000,0B00000,0B00000,0B00000,0B01110,0B01110,0B01110};
    1aa0:	ce 01       	movw	r24, r28
    1aa2:	8c 5b       	subi	r24, 0xBC	; 188
    1aa4:	9e 4f       	sbci	r25, 0xFE	; 254
    1aa6:	c0 5a       	subi	r28, 0xA0	; 160
    1aa8:	de 4f       	sbci	r29, 0xFE	; 254
    1aaa:	99 83       	std	Y+1, r25	; 0x01
    1aac:	88 83       	st	Y, r24
    1aae:	c0 56       	subi	r28, 0x60	; 96
    1ab0:	d1 40       	sbci	r29, 0x01	; 1
    1ab2:	aa ea       	ldi	r26, 0xAA	; 170
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	ce 59       	subi	r28, 0x9E	; 158
    1ab8:	de 4f       	sbci	r29, 0xFE	; 254
    1aba:	b9 83       	std	Y+1, r27	; 0x01
    1abc:	a8 83       	st	Y, r26
    1abe:	c2 56       	subi	r28, 0x62	; 98
    1ac0:	d1 40       	sbci	r29, 0x01	; 1
    1ac2:	b8 e0       	ldi	r27, 0x08	; 8
    1ac4:	cc 59       	subi	r28, 0x9C	; 156
    1ac6:	de 4f       	sbci	r29, 0xFE	; 254
    1ac8:	b8 83       	st	Y, r27
    1aca:	c4 56       	subi	r28, 0x64	; 100
    1acc:	d1 40       	sbci	r29, 0x01	; 1
    1ace:	ce 59       	subi	r28, 0x9E	; 158
    1ad0:	de 4f       	sbci	r29, 0xFE	; 254
    1ad2:	e8 81       	ld	r30, Y
    1ad4:	f9 81       	ldd	r31, Y+1	; 0x01
    1ad6:	c2 56       	subi	r28, 0x62	; 98
    1ad8:	d1 40       	sbci	r29, 0x01	; 1
    1ada:	00 80       	ld	r0, Z
    1adc:	ce 59       	subi	r28, 0x9E	; 158
    1ade:	de 4f       	sbci	r29, 0xFE	; 254
    1ae0:	88 81       	ld	r24, Y
    1ae2:	99 81       	ldd	r25, Y+1	; 0x01
    1ae4:	c2 56       	subi	r28, 0x62	; 98
    1ae6:	d1 40       	sbci	r29, 0x01	; 1
    1ae8:	01 96       	adiw	r24, 0x01	; 1
    1aea:	ce 59       	subi	r28, 0x9E	; 158
    1aec:	de 4f       	sbci	r29, 0xFE	; 254
    1aee:	99 83       	std	Y+1, r25	; 0x01
    1af0:	88 83       	st	Y, r24
    1af2:	c2 56       	subi	r28, 0x62	; 98
    1af4:	d1 40       	sbci	r29, 0x01	; 1
    1af6:	c0 5a       	subi	r28, 0xA0	; 160
    1af8:	de 4f       	sbci	r29, 0xFE	; 254
    1afa:	a8 81       	ld	r26, Y
    1afc:	b9 81       	ldd	r27, Y+1	; 0x01
    1afe:	c0 56       	subi	r28, 0x60	; 96
    1b00:	d1 40       	sbci	r29, 0x01	; 1
    1b02:	0c 92       	st	X, r0
    1b04:	c0 5a       	subi	r28, 0xA0	; 160
    1b06:	de 4f       	sbci	r29, 0xFE	; 254
    1b08:	e8 81       	ld	r30, Y
    1b0a:	f9 81       	ldd	r31, Y+1	; 0x01
    1b0c:	c0 56       	subi	r28, 0x60	; 96
    1b0e:	d1 40       	sbci	r29, 0x01	; 1
    1b10:	31 96       	adiw	r30, 0x01	; 1
    1b12:	c0 5a       	subi	r28, 0xA0	; 160
    1b14:	de 4f       	sbci	r29, 0xFE	; 254
    1b16:	f9 83       	std	Y+1, r31	; 0x01
    1b18:	e8 83       	st	Y, r30
    1b1a:	c0 56       	subi	r28, 0x60	; 96
    1b1c:	d1 40       	sbci	r29, 0x01	; 1
    1b1e:	cc 59       	subi	r28, 0x9C	; 156
    1b20:	de 4f       	sbci	r29, 0xFE	; 254
    1b22:	f8 81       	ld	r31, Y
    1b24:	c4 56       	subi	r28, 0x64	; 100
    1b26:	d1 40       	sbci	r29, 0x01	; 1
    1b28:	f1 50       	subi	r31, 0x01	; 1
    1b2a:	cc 59       	subi	r28, 0x9C	; 156
    1b2c:	de 4f       	sbci	r29, 0xFE	; 254
    1b2e:	f8 83       	st	Y, r31
    1b30:	c4 56       	subi	r28, 0x64	; 100
    1b32:	d1 40       	sbci	r29, 0x01	; 1
    1b34:	cc 59       	subi	r28, 0x9C	; 156
    1b36:	de 4f       	sbci	r29, 0xFE	; 254
    1b38:	88 81       	ld	r24, Y
    1b3a:	c4 56       	subi	r28, 0x64	; 100
    1b3c:	d1 40       	sbci	r29, 0x01	; 1
    1b3e:	88 23       	and	r24, r24
    1b40:	31 f6       	brne	.-116    	; 0x1ace <main+0x2ee>

	uint8 Local_u8Xpos=0;
    1b42:	fe 01       	movw	r30, r28
    1b44:	e5 5e       	subi	r30, 0xE5	; 229
    1b46:	fe 4f       	sbci	r31, 0xFE	; 254
    1b48:	10 82       	st	Z, r1
	uint8 Local_u8Ypos=0;
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	e6 5e       	subi	r30, 0xE6	; 230
    1b4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b50:	10 82       	st	Z, r1
	uint8 Local_u8counter;
	PORT_voidInit();
    1b52:	0e 94 cf 0b 	call	0x179e	; 0x179e <PORT_voidInit>
	CLCD_voidInit ();
    1b56:	0e 94 90 06 	call	0xd20	; 0xd20 <CLCD_voidInit>
	CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    1b5a:	9e 01       	movw	r18, r28
    1b5c:	24 5e       	subi	r18, 0xE4	; 228
    1b5e:	3e 4f       	sbci	r19, 0xFE	; 254
    1b60:	fe 01       	movw	r30, r28
    1b62:	e5 5e       	subi	r30, 0xE5	; 229
    1b64:	fe 4f       	sbci	r31, 0xFE	; 254
    1b66:	de 01       	movw	r26, r28
    1b68:	a6 5e       	subi	r26, 0xE6	; 230
    1b6a:	be 4f       	sbci	r27, 0xFE	; 254
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	b9 01       	movw	r22, r18
    1b70:	40 81       	ld	r20, Z
    1b72:	2c 91       	ld	r18, X
    1b74:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>

	while(1)
	{
		CLCD_u8SendStringAtPos(0u,1u,"Hi I'm HAMOKSHA");
    1b78:	20 e6       	ldi	r18, 0x60	; 96
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	80 e0       	ldi	r24, 0x00	; 0
    1b7e:	61 e0       	ldi	r22, 0x01	; 1
    1b80:	a9 01       	movw	r20, r18
    1b82:	0e 94 6d 08 	call	0x10da	; 0x10da <CLCD_u8SendStringAtPos>
    1b86:	fe 01       	movw	r30, r28
    1b88:	eb 5e       	subi	r30, 0xEB	; 235
    1b8a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	aa e7       	ldi	r26, 0x7A	; 122
    1b92:	b4 e4       	ldi	r27, 0x44	; 68
    1b94:	80 83       	st	Z, r24
    1b96:	91 83       	std	Z+1, r25	; 0x01
    1b98:	a2 83       	std	Z+2, r26	; 0x02
    1b9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b9c:	8e 01       	movw	r16, r28
    1b9e:	0f 5e       	subi	r16, 0xEF	; 239
    1ba0:	1e 4f       	sbci	r17, 0xFE	; 254
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	eb 5e       	subi	r30, 0xEB	; 235
    1ba6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba8:	60 81       	ld	r22, Z
    1baa:	71 81       	ldd	r23, Z+1	; 0x01
    1bac:	82 81       	ldd	r24, Z+2	; 0x02
    1bae:	93 81       	ldd	r25, Z+3	; 0x03
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	4a ef       	ldi	r20, 0xFA	; 250
    1bb6:	54 e4       	ldi	r21, 0x44	; 68
    1bb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	f8 01       	movw	r30, r16
    1bc2:	80 83       	st	Z, r24
    1bc4:	91 83       	std	Z+1, r25	; 0x01
    1bc6:	a2 83       	std	Z+2, r26	; 0x02
    1bc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bca:	fe 01       	movw	r30, r28
    1bcc:	ef 5e       	subi	r30, 0xEF	; 239
    1bce:	fe 4f       	sbci	r31, 0xFE	; 254
    1bd0:	60 81       	ld	r22, Z
    1bd2:	71 81       	ldd	r23, Z+1	; 0x01
    1bd4:	82 81       	ldd	r24, Z+2	; 0x02
    1bd6:	93 81       	ldd	r25, Z+3	; 0x03
    1bd8:	20 e0       	ldi	r18, 0x00	; 0
    1bda:	30 e0       	ldi	r19, 0x00	; 0
    1bdc:	40 e8       	ldi	r20, 0x80	; 128
    1bde:	5f e3       	ldi	r21, 0x3F	; 63
    1be0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1be4:	88 23       	and	r24, r24
    1be6:	44 f4       	brge	.+16     	; 0x1bf8 <main+0x418>
		__ticks = 1;
    1be8:	fe 01       	movw	r30, r28
    1bea:	e1 5f       	subi	r30, 0xF1	; 241
    1bec:	fe 4f       	sbci	r31, 0xFE	; 254
    1bee:	81 e0       	ldi	r24, 0x01	; 1
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	91 83       	std	Z+1, r25	; 0x01
    1bf4:	80 83       	st	Z, r24
    1bf6:	64 c0       	rjmp	.+200    	; 0x1cc0 <main+0x4e0>
	else if (__tmp > 65535)
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	ef 5e       	subi	r30, 0xEF	; 239
    1bfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1bfe:	60 81       	ld	r22, Z
    1c00:	71 81       	ldd	r23, Z+1	; 0x01
    1c02:	82 81       	ldd	r24, Z+2	; 0x02
    1c04:	93 81       	ldd	r25, Z+3	; 0x03
    1c06:	20 e0       	ldi	r18, 0x00	; 0
    1c08:	3f ef       	ldi	r19, 0xFF	; 255
    1c0a:	4f e7       	ldi	r20, 0x7F	; 127
    1c0c:	57 e4       	ldi	r21, 0x47	; 71
    1c0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c12:	18 16       	cp	r1, r24
    1c14:	0c f0       	brlt	.+2      	; 0x1c18 <main+0x438>
    1c16:	43 c0       	rjmp	.+134    	; 0x1c9e <main+0x4be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c18:	fe 01       	movw	r30, r28
    1c1a:	eb 5e       	subi	r30, 0xEB	; 235
    1c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c1e:	60 81       	ld	r22, Z
    1c20:	71 81       	ldd	r23, Z+1	; 0x01
    1c22:	82 81       	ldd	r24, Z+2	; 0x02
    1c24:	93 81       	ldd	r25, Z+3	; 0x03
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	30 e0       	ldi	r19, 0x00	; 0
    1c2a:	40 e2       	ldi	r20, 0x20	; 32
    1c2c:	51 e4       	ldi	r21, 0x41	; 65
    1c2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c32:	dc 01       	movw	r26, r24
    1c34:	cb 01       	movw	r24, r22
    1c36:	8e 01       	movw	r16, r28
    1c38:	01 5f       	subi	r16, 0xF1	; 241
    1c3a:	1e 4f       	sbci	r17, 0xFE	; 254
    1c3c:	bc 01       	movw	r22, r24
    1c3e:	cd 01       	movw	r24, r26
    1c40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	f8 01       	movw	r30, r16
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
    1c4e:	1f c0       	rjmp	.+62     	; 0x1c8e <main+0x4ae>
    1c50:	fe 01       	movw	r30, r28
    1c52:	e3 5f       	subi	r30, 0xF3	; 243
    1c54:	fe 4f       	sbci	r31, 0xFE	; 254
    1c56:	88 ec       	ldi	r24, 0xC8	; 200
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e3 5f       	subi	r30, 0xF3	; 243
    1c62:	fe 4f       	sbci	r31, 0xFE	; 254
    1c64:	80 81       	ld	r24, Z
    1c66:	91 81       	ldd	r25, Z+1	; 0x01
    1c68:	01 97       	sbiw	r24, 0x01	; 1
    1c6a:	f1 f7       	brne	.-4      	; 0x1c68 <main+0x488>
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	e3 5f       	subi	r30, 0xF3	; 243
    1c70:	fe 4f       	sbci	r31, 0xFE	; 254
    1c72:	91 83       	std	Z+1, r25	; 0x01
    1c74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c76:	de 01       	movw	r26, r28
    1c78:	a1 5f       	subi	r26, 0xF1	; 241
    1c7a:	be 4f       	sbci	r27, 0xFE	; 254
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e1 5f       	subi	r30, 0xF1	; 241
    1c80:	fe 4f       	sbci	r31, 0xFE	; 254
    1c82:	80 81       	ld	r24, Z
    1c84:	91 81       	ldd	r25, Z+1	; 0x01
    1c86:	01 97       	sbiw	r24, 0x01	; 1
    1c88:	11 96       	adiw	r26, 0x01	; 1
    1c8a:	9c 93       	st	X, r25
    1c8c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c8e:	fe 01       	movw	r30, r28
    1c90:	e1 5f       	subi	r30, 0xF1	; 241
    1c92:	fe 4f       	sbci	r31, 0xFE	; 254
    1c94:	80 81       	ld	r24, Z
    1c96:	91 81       	ldd	r25, Z+1	; 0x01
    1c98:	00 97       	sbiw	r24, 0x00	; 0
    1c9a:	d1 f6       	brne	.-76     	; 0x1c50 <main+0x470>
    1c9c:	27 c0       	rjmp	.+78     	; 0x1cec <main+0x50c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c9e:	8e 01       	movw	r16, r28
    1ca0:	01 5f       	subi	r16, 0xF1	; 241
    1ca2:	1e 4f       	sbci	r17, 0xFE	; 254
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	ef 5e       	subi	r30, 0xEF	; 239
    1ca8:	fe 4f       	sbci	r31, 0xFE	; 254
    1caa:	60 81       	ld	r22, Z
    1cac:	71 81       	ldd	r23, Z+1	; 0x01
    1cae:	82 81       	ldd	r24, Z+2	; 0x02
    1cb0:	93 81       	ldd	r25, Z+3	; 0x03
    1cb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	f8 01       	movw	r30, r16
    1cbc:	91 83       	std	Z+1, r25	; 0x01
    1cbe:	80 83       	st	Z, r24
    1cc0:	de 01       	movw	r26, r28
    1cc2:	a5 5f       	subi	r26, 0xF5	; 245
    1cc4:	be 4f       	sbci	r27, 0xFE	; 254
    1cc6:	fe 01       	movw	r30, r28
    1cc8:	e1 5f       	subi	r30, 0xF1	; 241
    1cca:	fe 4f       	sbci	r31, 0xFE	; 254
    1ccc:	80 81       	ld	r24, Z
    1cce:	91 81       	ldd	r25, Z+1	; 0x01
    1cd0:	8d 93       	st	X+, r24
    1cd2:	9c 93       	st	X, r25
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	e5 5f       	subi	r30, 0xF5	; 245
    1cd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cda:	80 81       	ld	r24, Z
    1cdc:	91 81       	ldd	r25, Z+1	; 0x01
    1cde:	01 97       	sbiw	r24, 0x01	; 1
    1ce0:	f1 f7       	brne	.-4      	; 0x1cde <main+0x4fe>
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	e5 5f       	subi	r30, 0xF5	; 245
    1ce6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce8:	91 83       	std	Z+1, r25	; 0x01
    1cea:	80 83       	st	Z, r24
		_delay_ms(1000);
		/*Display clear */
		CLCD_voidSendCommand(1);
    1cec:	81 e0       	ldi	r24, 0x01	; 1
    1cee:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
		CLCD_u8SendStringAtPos(2u,1u,"I CAN RUN");
    1cf2:	20 e7       	ldi	r18, 0x70	; 112
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	82 e0       	ldi	r24, 0x02	; 2
    1cf8:	61 e0       	ldi	r22, 0x01	; 1
    1cfa:	a9 01       	movw	r20, r18
    1cfc:	0e 94 6d 08 	call	0x10da	; 0x10da <CLCD_u8SendStringAtPos>
		for (Local_u8Xpos=0;Local_u8Xpos<=15;Local_u8Xpos++)
    1d00:	fe 01       	movw	r30, r28
    1d02:	e5 5e       	subi	r30, 0xE5	; 229
    1d04:	fe 4f       	sbci	r31, 0xFE	; 254
    1d06:	10 82       	st	Z, r1
    1d08:	09 c3       	rjmp	.+1554   	; 0x231c <main+0xb3c>
		{
			CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    1d0a:	9e 01       	movw	r18, r28
    1d0c:	24 5e       	subi	r18, 0xE4	; 228
    1d0e:	3e 4f       	sbci	r19, 0xFE	; 254
    1d10:	fe 01       	movw	r30, r28
    1d12:	e5 5e       	subi	r30, 0xE5	; 229
    1d14:	fe 4f       	sbci	r31, 0xFE	; 254
    1d16:	de 01       	movw	r26, r28
    1d18:	a6 5e       	subi	r26, 0xE6	; 230
    1d1a:	be 4f       	sbci	r27, 0xFE	; 254
    1d1c:	80 e0       	ldi	r24, 0x00	; 0
    1d1e:	b9 01       	movw	r22, r18
    1d20:	40 81       	ld	r20, Z
    1d22:	2c 91       	ld	r18, X
    1d24:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    1d28:	fe 01       	movw	r30, r28
    1d2a:	e9 5f       	subi	r30, 0xF9	; 249
    1d2c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	a6 e1       	ldi	r26, 0x16	; 22
    1d34:	b3 e4       	ldi	r27, 0x43	; 67
    1d36:	80 83       	st	Z, r24
    1d38:	91 83       	std	Z+1, r25	; 0x01
    1d3a:	a2 83       	std	Z+2, r26	; 0x02
    1d3c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d3e:	8e 01       	movw	r16, r28
    1d40:	0d 5f       	subi	r16, 0xFD	; 253
    1d42:	1e 4f       	sbci	r17, 0xFE	; 254
    1d44:	fe 01       	movw	r30, r28
    1d46:	e9 5f       	subi	r30, 0xF9	; 249
    1d48:	fe 4f       	sbci	r31, 0xFE	; 254
    1d4a:	60 81       	ld	r22, Z
    1d4c:	71 81       	ldd	r23, Z+1	; 0x01
    1d4e:	82 81       	ldd	r24, Z+2	; 0x02
    1d50:	93 81       	ldd	r25, Z+3	; 0x03
    1d52:	20 e0       	ldi	r18, 0x00	; 0
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	4a ef       	ldi	r20, 0xFA	; 250
    1d58:	54 e4       	ldi	r21, 0x44	; 68
    1d5a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d5e:	dc 01       	movw	r26, r24
    1d60:	cb 01       	movw	r24, r22
    1d62:	f8 01       	movw	r30, r16
    1d64:	80 83       	st	Z, r24
    1d66:	91 83       	std	Z+1, r25	; 0x01
    1d68:	a2 83       	std	Z+2, r26	; 0x02
    1d6a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d6c:	fe 01       	movw	r30, r28
    1d6e:	ed 5f       	subi	r30, 0xFD	; 253
    1d70:	fe 4f       	sbci	r31, 0xFE	; 254
    1d72:	60 81       	ld	r22, Z
    1d74:	71 81       	ldd	r23, Z+1	; 0x01
    1d76:	82 81       	ldd	r24, Z+2	; 0x02
    1d78:	93 81       	ldd	r25, Z+3	; 0x03
    1d7a:	20 e0       	ldi	r18, 0x00	; 0
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	40 e8       	ldi	r20, 0x80	; 128
    1d80:	5f e3       	ldi	r21, 0x3F	; 63
    1d82:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d86:	88 23       	and	r24, r24
    1d88:	44 f4       	brge	.+16     	; 0x1d9a <main+0x5ba>
		__ticks = 1;
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	ef 5f       	subi	r30, 0xFF	; 255
    1d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	91 83       	std	Z+1, r25	; 0x01
    1d96:	80 83       	st	Z, r24
    1d98:	64 c0       	rjmp	.+200    	; 0x1e62 <main+0x682>
	else if (__tmp > 65535)
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	ed 5f       	subi	r30, 0xFD	; 253
    1d9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1da0:	60 81       	ld	r22, Z
    1da2:	71 81       	ldd	r23, Z+1	; 0x01
    1da4:	82 81       	ldd	r24, Z+2	; 0x02
    1da6:	93 81       	ldd	r25, Z+3	; 0x03
    1da8:	20 e0       	ldi	r18, 0x00	; 0
    1daa:	3f ef       	ldi	r19, 0xFF	; 255
    1dac:	4f e7       	ldi	r20, 0x7F	; 127
    1dae:	57 e4       	ldi	r21, 0x47	; 71
    1db0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1db4:	18 16       	cp	r1, r24
    1db6:	0c f0       	brlt	.+2      	; 0x1dba <main+0x5da>
    1db8:	43 c0       	rjmp	.+134    	; 0x1e40 <main+0x660>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dba:	fe 01       	movw	r30, r28
    1dbc:	e9 5f       	subi	r30, 0xF9	; 249
    1dbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc0:	60 81       	ld	r22, Z
    1dc2:	71 81       	ldd	r23, Z+1	; 0x01
    1dc4:	82 81       	ldd	r24, Z+2	; 0x02
    1dc6:	93 81       	ldd	r25, Z+3	; 0x03
    1dc8:	20 e0       	ldi	r18, 0x00	; 0
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	40 e2       	ldi	r20, 0x20	; 32
    1dce:	51 e4       	ldi	r21, 0x41	; 65
    1dd0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dd4:	dc 01       	movw	r26, r24
    1dd6:	cb 01       	movw	r24, r22
    1dd8:	8e 01       	movw	r16, r28
    1dda:	0f 5f       	subi	r16, 0xFF	; 255
    1ddc:	1e 4f       	sbci	r17, 0xFE	; 254
    1dde:	bc 01       	movw	r22, r24
    1de0:	cd 01       	movw	r24, r26
    1de2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1de6:	dc 01       	movw	r26, r24
    1de8:	cb 01       	movw	r24, r22
    1dea:	f8 01       	movw	r30, r16
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	80 83       	st	Z, r24
    1df0:	1f c0       	rjmp	.+62     	; 0x1e30 <main+0x650>
    1df2:	fe 01       	movw	r30, r28
    1df4:	e1 50       	subi	r30, 0x01	; 1
    1df6:	ff 4f       	sbci	r31, 0xFF	; 255
    1df8:	88 ec       	ldi	r24, 0xC8	; 200
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	91 83       	std	Z+1, r25	; 0x01
    1dfe:	80 83       	st	Z, r24
    1e00:	fe 01       	movw	r30, r28
    1e02:	e1 50       	subi	r30, 0x01	; 1
    1e04:	ff 4f       	sbci	r31, 0xFF	; 255
    1e06:	80 81       	ld	r24, Z
    1e08:	91 81       	ldd	r25, Z+1	; 0x01
    1e0a:	01 97       	sbiw	r24, 0x01	; 1
    1e0c:	f1 f7       	brne	.-4      	; 0x1e0a <main+0x62a>
    1e0e:	fe 01       	movw	r30, r28
    1e10:	e1 50       	subi	r30, 0x01	; 1
    1e12:	ff 4f       	sbci	r31, 0xFF	; 255
    1e14:	91 83       	std	Z+1, r25	; 0x01
    1e16:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e18:	de 01       	movw	r26, r28
    1e1a:	af 5f       	subi	r26, 0xFF	; 255
    1e1c:	be 4f       	sbci	r27, 0xFE	; 254
    1e1e:	fe 01       	movw	r30, r28
    1e20:	ef 5f       	subi	r30, 0xFF	; 255
    1e22:	fe 4f       	sbci	r31, 0xFE	; 254
    1e24:	80 81       	ld	r24, Z
    1e26:	91 81       	ldd	r25, Z+1	; 0x01
    1e28:	01 97       	sbiw	r24, 0x01	; 1
    1e2a:	11 96       	adiw	r26, 0x01	; 1
    1e2c:	9c 93       	st	X, r25
    1e2e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e30:	fe 01       	movw	r30, r28
    1e32:	ef 5f       	subi	r30, 0xFF	; 255
    1e34:	fe 4f       	sbci	r31, 0xFE	; 254
    1e36:	80 81       	ld	r24, Z
    1e38:	91 81       	ldd	r25, Z+1	; 0x01
    1e3a:	00 97       	sbiw	r24, 0x00	; 0
    1e3c:	d1 f6       	brne	.-76     	; 0x1df2 <main+0x612>
    1e3e:	27 c0       	rjmp	.+78     	; 0x1e8e <main+0x6ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e40:	8e 01       	movw	r16, r28
    1e42:	0f 5f       	subi	r16, 0xFF	; 255
    1e44:	1e 4f       	sbci	r17, 0xFE	; 254
    1e46:	fe 01       	movw	r30, r28
    1e48:	ed 5f       	subi	r30, 0xFD	; 253
    1e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e4c:	60 81       	ld	r22, Z
    1e4e:	71 81       	ldd	r23, Z+1	; 0x01
    1e50:	82 81       	ldd	r24, Z+2	; 0x02
    1e52:	93 81       	ldd	r25, Z+3	; 0x03
    1e54:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e58:	dc 01       	movw	r26, r24
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	f8 01       	movw	r30, r16
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	80 83       	st	Z, r24
    1e62:	de 01       	movw	r26, r28
    1e64:	a3 50       	subi	r26, 0x03	; 3
    1e66:	bf 4f       	sbci	r27, 0xFF	; 255
    1e68:	fe 01       	movw	r30, r28
    1e6a:	ef 5f       	subi	r30, 0xFF	; 255
    1e6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e6e:	80 81       	ld	r24, Z
    1e70:	91 81       	ldd	r25, Z+1	; 0x01
    1e72:	8d 93       	st	X+, r24
    1e74:	9c 93       	st	X, r25
    1e76:	fe 01       	movw	r30, r28
    1e78:	e3 50       	subi	r30, 0x03	; 3
    1e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7c:	80 81       	ld	r24, Z
    1e7e:	91 81       	ldd	r25, Z+1	; 0x01
    1e80:	01 97       	sbiw	r24, 0x01	; 1
    1e82:	f1 f7       	brne	.-4      	; 0x1e80 <main+0x6a0>
    1e84:	fe 01       	movw	r30, r28
    1e86:	e3 50       	subi	r30, 0x03	; 3
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	91 83       	std	Z+1, r25	; 0x01
    1e8c:	80 83       	st	Z, r24
			_delay_ms(150);
			CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
    1e8e:	fe 01       	movw	r30, r28
    1e90:	e5 5e       	subi	r30, 0xE5	; 229
    1e92:	fe 4f       	sbci	r31, 0xFE	; 254
    1e94:	de 01       	movw	r26, r28
    1e96:	a6 5e       	subi	r26, 0xE6	; 230
    1e98:	be 4f       	sbci	r27, 0xFE	; 254
    1e9a:	80 81       	ld	r24, Z
    1e9c:	6c 91       	ld	r22, X
    1e9e:	41 e0       	ldi	r20, 0x01	; 1
    1ea0:	0e 94 4d 08 	call	0x109a	; 0x109a <CLCD_voidClearGide>
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e7 50       	subi	r30, 0x07	; 7
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	80 e0       	ldi	r24, 0x00	; 0
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	a6 e1       	ldi	r26, 0x16	; 22
    1eb0:	b3 e4       	ldi	r27, 0x43	; 67
    1eb2:	80 83       	st	Z, r24
    1eb4:	91 83       	std	Z+1, r25	; 0x01
    1eb6:	a2 83       	std	Z+2, r26	; 0x02
    1eb8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eba:	8e 01       	movw	r16, r28
    1ebc:	0b 50       	subi	r16, 0x0B	; 11
    1ebe:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	e7 50       	subi	r30, 0x07	; 7
    1ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec6:	60 81       	ld	r22, Z
    1ec8:	71 81       	ldd	r23, Z+1	; 0x01
    1eca:	82 81       	ldd	r24, Z+2	; 0x02
    1ecc:	93 81       	ldd	r25, Z+3	; 0x03
    1ece:	20 e0       	ldi	r18, 0x00	; 0
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	4a ef       	ldi	r20, 0xFA	; 250
    1ed4:	54 e4       	ldi	r21, 0x44	; 68
    1ed6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eda:	dc 01       	movw	r26, r24
    1edc:	cb 01       	movw	r24, r22
    1ede:	f8 01       	movw	r30, r16
    1ee0:	80 83       	st	Z, r24
    1ee2:	91 83       	std	Z+1, r25	; 0x01
    1ee4:	a2 83       	std	Z+2, r26	; 0x02
    1ee6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ee8:	fe 01       	movw	r30, r28
    1eea:	eb 50       	subi	r30, 0x0B	; 11
    1eec:	ff 4f       	sbci	r31, 0xFF	; 255
    1eee:	60 81       	ld	r22, Z
    1ef0:	71 81       	ldd	r23, Z+1	; 0x01
    1ef2:	82 81       	ldd	r24, Z+2	; 0x02
    1ef4:	93 81       	ldd	r25, Z+3	; 0x03
    1ef6:	20 e0       	ldi	r18, 0x00	; 0
    1ef8:	30 e0       	ldi	r19, 0x00	; 0
    1efa:	40 e8       	ldi	r20, 0x80	; 128
    1efc:	5f e3       	ldi	r21, 0x3F	; 63
    1efe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f02:	88 23       	and	r24, r24
    1f04:	44 f4       	brge	.+16     	; 0x1f16 <main+0x736>
		__ticks = 1;
    1f06:	fe 01       	movw	r30, r28
    1f08:	ed 50       	subi	r30, 0x0D	; 13
    1f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	91 83       	std	Z+1, r25	; 0x01
    1f12:	80 83       	st	Z, r24
    1f14:	64 c0       	rjmp	.+200    	; 0x1fde <main+0x7fe>
	else if (__tmp > 65535)
    1f16:	fe 01       	movw	r30, r28
    1f18:	eb 50       	subi	r30, 0x0B	; 11
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	60 81       	ld	r22, Z
    1f1e:	71 81       	ldd	r23, Z+1	; 0x01
    1f20:	82 81       	ldd	r24, Z+2	; 0x02
    1f22:	93 81       	ldd	r25, Z+3	; 0x03
    1f24:	20 e0       	ldi	r18, 0x00	; 0
    1f26:	3f ef       	ldi	r19, 0xFF	; 255
    1f28:	4f e7       	ldi	r20, 0x7F	; 127
    1f2a:	57 e4       	ldi	r21, 0x47	; 71
    1f2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f30:	18 16       	cp	r1, r24
    1f32:	0c f0       	brlt	.+2      	; 0x1f36 <main+0x756>
    1f34:	43 c0       	rjmp	.+134    	; 0x1fbc <main+0x7dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f36:	fe 01       	movw	r30, r28
    1f38:	e7 50       	subi	r30, 0x07	; 7
    1f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3c:	60 81       	ld	r22, Z
    1f3e:	71 81       	ldd	r23, Z+1	; 0x01
    1f40:	82 81       	ldd	r24, Z+2	; 0x02
    1f42:	93 81       	ldd	r25, Z+3	; 0x03
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	40 e2       	ldi	r20, 0x20	; 32
    1f4a:	51 e4       	ldi	r21, 0x41	; 65
    1f4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f50:	dc 01       	movw	r26, r24
    1f52:	cb 01       	movw	r24, r22
    1f54:	8e 01       	movw	r16, r28
    1f56:	0d 50       	subi	r16, 0x0D	; 13
    1f58:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5a:	bc 01       	movw	r22, r24
    1f5c:	cd 01       	movw	r24, r26
    1f5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f62:	dc 01       	movw	r26, r24
    1f64:	cb 01       	movw	r24, r22
    1f66:	f8 01       	movw	r30, r16
    1f68:	91 83       	std	Z+1, r25	; 0x01
    1f6a:	80 83       	st	Z, r24
    1f6c:	1f c0       	rjmp	.+62     	; 0x1fac <main+0x7cc>
    1f6e:	fe 01       	movw	r30, r28
    1f70:	ef 50       	subi	r30, 0x0F	; 15
    1f72:	ff 4f       	sbci	r31, 0xFF	; 255
    1f74:	88 ec       	ldi	r24, 0xC8	; 200
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	91 83       	std	Z+1, r25	; 0x01
    1f7a:	80 83       	st	Z, r24
    1f7c:	fe 01       	movw	r30, r28
    1f7e:	ef 50       	subi	r30, 0x0F	; 15
    1f80:	ff 4f       	sbci	r31, 0xFF	; 255
    1f82:	80 81       	ld	r24, Z
    1f84:	91 81       	ldd	r25, Z+1	; 0x01
    1f86:	01 97       	sbiw	r24, 0x01	; 1
    1f88:	f1 f7       	brne	.-4      	; 0x1f86 <main+0x7a6>
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	ef 50       	subi	r30, 0x0F	; 15
    1f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f90:	91 83       	std	Z+1, r25	; 0x01
    1f92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f94:	de 01       	movw	r26, r28
    1f96:	ad 50       	subi	r26, 0x0D	; 13
    1f98:	bf 4f       	sbci	r27, 0xFF	; 255
    1f9a:	fe 01       	movw	r30, r28
    1f9c:	ed 50       	subi	r30, 0x0D	; 13
    1f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa0:	80 81       	ld	r24, Z
    1fa2:	91 81       	ldd	r25, Z+1	; 0x01
    1fa4:	01 97       	sbiw	r24, 0x01	; 1
    1fa6:	11 96       	adiw	r26, 0x01	; 1
    1fa8:	9c 93       	st	X, r25
    1faa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fac:	fe 01       	movw	r30, r28
    1fae:	ed 50       	subi	r30, 0x0D	; 13
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	80 81       	ld	r24, Z
    1fb4:	91 81       	ldd	r25, Z+1	; 0x01
    1fb6:	00 97       	sbiw	r24, 0x00	; 0
    1fb8:	d1 f6       	brne	.-76     	; 0x1f6e <main+0x78e>
    1fba:	27 c0       	rjmp	.+78     	; 0x200a <main+0x82a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fbc:	8e 01       	movw	r16, r28
    1fbe:	0d 50       	subi	r16, 0x0D	; 13
    1fc0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc2:	fe 01       	movw	r30, r28
    1fc4:	eb 50       	subi	r30, 0x0B	; 11
    1fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc8:	60 81       	ld	r22, Z
    1fca:	71 81       	ldd	r23, Z+1	; 0x01
    1fcc:	82 81       	ldd	r24, Z+2	; 0x02
    1fce:	93 81       	ldd	r25, Z+3	; 0x03
    1fd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fd4:	dc 01       	movw	r26, r24
    1fd6:	cb 01       	movw	r24, r22
    1fd8:	f8 01       	movw	r30, r16
    1fda:	91 83       	std	Z+1, r25	; 0x01
    1fdc:	80 83       	st	Z, r24
    1fde:	de 01       	movw	r26, r28
    1fe0:	a1 51       	subi	r26, 0x11	; 17
    1fe2:	bf 4f       	sbci	r27, 0xFF	; 255
    1fe4:	fe 01       	movw	r30, r28
    1fe6:	ed 50       	subi	r30, 0x0D	; 13
    1fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fea:	80 81       	ld	r24, Z
    1fec:	91 81       	ldd	r25, Z+1	; 0x01
    1fee:	8d 93       	st	X+, r24
    1ff0:	9c 93       	st	X, r25
    1ff2:	fe 01       	movw	r30, r28
    1ff4:	e1 51       	subi	r30, 0x11	; 17
    1ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff8:	80 81       	ld	r24, Z
    1ffa:	91 81       	ldd	r25, Z+1	; 0x01
    1ffc:	01 97       	sbiw	r24, 0x01	; 1
    1ffe:	f1 f7       	brne	.-4      	; 0x1ffc <main+0x81c>
    2000:	fe 01       	movw	r30, r28
    2002:	e1 51       	subi	r30, 0x11	; 17
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	91 83       	std	Z+1, r25	; 0x01
    2008:	80 83       	st	Z, r24
			_delay_ms(150);

			CLCD_u8WriteSpecialCharacter(1u,Local_u8MyPattern2,Local_u8Xpos,Local_u8Ypos);
    200a:	9e 01       	movw	r18, r28
    200c:	2c 5d       	subi	r18, 0xDC	; 220
    200e:	3e 4f       	sbci	r19, 0xFE	; 254
    2010:	fe 01       	movw	r30, r28
    2012:	e5 5e       	subi	r30, 0xE5	; 229
    2014:	fe 4f       	sbci	r31, 0xFE	; 254
    2016:	de 01       	movw	r26, r28
    2018:	a6 5e       	subi	r26, 0xE6	; 230
    201a:	be 4f       	sbci	r27, 0xFE	; 254
    201c:	81 e0       	ldi	r24, 0x01	; 1
    201e:	b9 01       	movw	r22, r18
    2020:	40 81       	ld	r20, Z
    2022:	2c 91       	ld	r18, X
    2024:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    2028:	fe 01       	movw	r30, r28
    202a:	e5 51       	subi	r30, 0x15	; 21
    202c:	ff 4f       	sbci	r31, 0xFF	; 255
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	a6 e1       	ldi	r26, 0x16	; 22
    2034:	b3 e4       	ldi	r27, 0x43	; 67
    2036:	80 83       	st	Z, r24
    2038:	91 83       	std	Z+1, r25	; 0x01
    203a:	a2 83       	std	Z+2, r26	; 0x02
    203c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    203e:	8e 01       	movw	r16, r28
    2040:	09 51       	subi	r16, 0x19	; 25
    2042:	1f 4f       	sbci	r17, 0xFF	; 255
    2044:	fe 01       	movw	r30, r28
    2046:	e5 51       	subi	r30, 0x15	; 21
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	60 81       	ld	r22, Z
    204c:	71 81       	ldd	r23, Z+1	; 0x01
    204e:	82 81       	ldd	r24, Z+2	; 0x02
    2050:	93 81       	ldd	r25, Z+3	; 0x03
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	4a ef       	ldi	r20, 0xFA	; 250
    2058:	54 e4       	ldi	r21, 0x44	; 68
    205a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    205e:	dc 01       	movw	r26, r24
    2060:	cb 01       	movw	r24, r22
    2062:	f8 01       	movw	r30, r16
    2064:	80 83       	st	Z, r24
    2066:	91 83       	std	Z+1, r25	; 0x01
    2068:	a2 83       	std	Z+2, r26	; 0x02
    206a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    206c:	fe 01       	movw	r30, r28
    206e:	e9 51       	subi	r30, 0x19	; 25
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	60 81       	ld	r22, Z
    2074:	71 81       	ldd	r23, Z+1	; 0x01
    2076:	82 81       	ldd	r24, Z+2	; 0x02
    2078:	93 81       	ldd	r25, Z+3	; 0x03
    207a:	20 e0       	ldi	r18, 0x00	; 0
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	40 e8       	ldi	r20, 0x80	; 128
    2080:	5f e3       	ldi	r21, 0x3F	; 63
    2082:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2086:	88 23       	and	r24, r24
    2088:	44 f4       	brge	.+16     	; 0x209a <main+0x8ba>
		__ticks = 1;
    208a:	fe 01       	movw	r30, r28
    208c:	eb 51       	subi	r30, 0x1B	; 27
    208e:	ff 4f       	sbci	r31, 0xFF	; 255
    2090:	81 e0       	ldi	r24, 0x01	; 1
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	91 83       	std	Z+1, r25	; 0x01
    2096:	80 83       	st	Z, r24
    2098:	64 c0       	rjmp	.+200    	; 0x2162 <main+0x982>
	else if (__tmp > 65535)
    209a:	fe 01       	movw	r30, r28
    209c:	e9 51       	subi	r30, 0x19	; 25
    209e:	ff 4f       	sbci	r31, 0xFF	; 255
    20a0:	60 81       	ld	r22, Z
    20a2:	71 81       	ldd	r23, Z+1	; 0x01
    20a4:	82 81       	ldd	r24, Z+2	; 0x02
    20a6:	93 81       	ldd	r25, Z+3	; 0x03
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	3f ef       	ldi	r19, 0xFF	; 255
    20ac:	4f e7       	ldi	r20, 0x7F	; 127
    20ae:	57 e4       	ldi	r21, 0x47	; 71
    20b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20b4:	18 16       	cp	r1, r24
    20b6:	0c f0       	brlt	.+2      	; 0x20ba <main+0x8da>
    20b8:	43 c0       	rjmp	.+134    	; 0x2140 <main+0x960>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20ba:	fe 01       	movw	r30, r28
    20bc:	e5 51       	subi	r30, 0x15	; 21
    20be:	ff 4f       	sbci	r31, 0xFF	; 255
    20c0:	60 81       	ld	r22, Z
    20c2:	71 81       	ldd	r23, Z+1	; 0x01
    20c4:	82 81       	ldd	r24, Z+2	; 0x02
    20c6:	93 81       	ldd	r25, Z+3	; 0x03
    20c8:	20 e0       	ldi	r18, 0x00	; 0
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	40 e2       	ldi	r20, 0x20	; 32
    20ce:	51 e4       	ldi	r21, 0x41	; 65
    20d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d4:	dc 01       	movw	r26, r24
    20d6:	cb 01       	movw	r24, r22
    20d8:	8e 01       	movw	r16, r28
    20da:	0b 51       	subi	r16, 0x1B	; 27
    20dc:	1f 4f       	sbci	r17, 0xFF	; 255
    20de:	bc 01       	movw	r22, r24
    20e0:	cd 01       	movw	r24, r26
    20e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20e6:	dc 01       	movw	r26, r24
    20e8:	cb 01       	movw	r24, r22
    20ea:	f8 01       	movw	r30, r16
    20ec:	91 83       	std	Z+1, r25	; 0x01
    20ee:	80 83       	st	Z, r24
    20f0:	1f c0       	rjmp	.+62     	; 0x2130 <main+0x950>
    20f2:	fe 01       	movw	r30, r28
    20f4:	ed 51       	subi	r30, 0x1D	; 29
    20f6:	ff 4f       	sbci	r31, 0xFF	; 255
    20f8:	88 ec       	ldi	r24, 0xC8	; 200
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	91 83       	std	Z+1, r25	; 0x01
    20fe:	80 83       	st	Z, r24
    2100:	fe 01       	movw	r30, r28
    2102:	ed 51       	subi	r30, 0x1D	; 29
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	80 81       	ld	r24, Z
    2108:	91 81       	ldd	r25, Z+1	; 0x01
    210a:	01 97       	sbiw	r24, 0x01	; 1
    210c:	f1 f7       	brne	.-4      	; 0x210a <main+0x92a>
    210e:	fe 01       	movw	r30, r28
    2110:	ed 51       	subi	r30, 0x1D	; 29
    2112:	ff 4f       	sbci	r31, 0xFF	; 255
    2114:	91 83       	std	Z+1, r25	; 0x01
    2116:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2118:	de 01       	movw	r26, r28
    211a:	ab 51       	subi	r26, 0x1B	; 27
    211c:	bf 4f       	sbci	r27, 0xFF	; 255
    211e:	fe 01       	movw	r30, r28
    2120:	eb 51       	subi	r30, 0x1B	; 27
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	80 81       	ld	r24, Z
    2126:	91 81       	ldd	r25, Z+1	; 0x01
    2128:	01 97       	sbiw	r24, 0x01	; 1
    212a:	11 96       	adiw	r26, 0x01	; 1
    212c:	9c 93       	st	X, r25
    212e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2130:	fe 01       	movw	r30, r28
    2132:	eb 51       	subi	r30, 0x1B	; 27
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	80 81       	ld	r24, Z
    2138:	91 81       	ldd	r25, Z+1	; 0x01
    213a:	00 97       	sbiw	r24, 0x00	; 0
    213c:	d1 f6       	brne	.-76     	; 0x20f2 <main+0x912>
    213e:	27 c0       	rjmp	.+78     	; 0x218e <main+0x9ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2140:	8e 01       	movw	r16, r28
    2142:	0b 51       	subi	r16, 0x1B	; 27
    2144:	1f 4f       	sbci	r17, 0xFF	; 255
    2146:	fe 01       	movw	r30, r28
    2148:	e9 51       	subi	r30, 0x19	; 25
    214a:	ff 4f       	sbci	r31, 0xFF	; 255
    214c:	60 81       	ld	r22, Z
    214e:	71 81       	ldd	r23, Z+1	; 0x01
    2150:	82 81       	ldd	r24, Z+2	; 0x02
    2152:	93 81       	ldd	r25, Z+3	; 0x03
    2154:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2158:	dc 01       	movw	r26, r24
    215a:	cb 01       	movw	r24, r22
    215c:	f8 01       	movw	r30, r16
    215e:	91 83       	std	Z+1, r25	; 0x01
    2160:	80 83       	st	Z, r24
    2162:	de 01       	movw	r26, r28
    2164:	af 51       	subi	r26, 0x1F	; 31
    2166:	bf 4f       	sbci	r27, 0xFF	; 255
    2168:	fe 01       	movw	r30, r28
    216a:	eb 51       	subi	r30, 0x1B	; 27
    216c:	ff 4f       	sbci	r31, 0xFF	; 255
    216e:	80 81       	ld	r24, Z
    2170:	91 81       	ldd	r25, Z+1	; 0x01
    2172:	8d 93       	st	X+, r24
    2174:	9c 93       	st	X, r25
    2176:	fe 01       	movw	r30, r28
    2178:	ef 51       	subi	r30, 0x1F	; 31
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	80 81       	ld	r24, Z
    217e:	91 81       	ldd	r25, Z+1	; 0x01
    2180:	01 97       	sbiw	r24, 0x01	; 1
    2182:	f1 f7       	brne	.-4      	; 0x2180 <main+0x9a0>
    2184:	fe 01       	movw	r30, r28
    2186:	ef 51       	subi	r30, 0x1F	; 31
    2188:	ff 4f       	sbci	r31, 0xFF	; 255
    218a:	91 83       	std	Z+1, r25	; 0x01
    218c:	80 83       	st	Z, r24
			_delay_ms(150);
			CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
    218e:	fe 01       	movw	r30, r28
    2190:	e5 5e       	subi	r30, 0xE5	; 229
    2192:	fe 4f       	sbci	r31, 0xFE	; 254
    2194:	de 01       	movw	r26, r28
    2196:	a6 5e       	subi	r26, 0xE6	; 230
    2198:	be 4f       	sbci	r27, 0xFE	; 254
    219a:	80 81       	ld	r24, Z
    219c:	6c 91       	ld	r22, X
    219e:	41 e0       	ldi	r20, 0x01	; 1
    21a0:	0e 94 4d 08 	call	0x109a	; 0x109a <CLCD_voidClearGide>
    21a4:	fe 01       	movw	r30, r28
    21a6:	e3 52       	subi	r30, 0x23	; 35
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	80 e0       	ldi	r24, 0x00	; 0
    21ac:	90 e0       	ldi	r25, 0x00	; 0
    21ae:	a6 e1       	ldi	r26, 0x16	; 22
    21b0:	b3 e4       	ldi	r27, 0x43	; 67
    21b2:	80 83       	st	Z, r24
    21b4:	91 83       	std	Z+1, r25	; 0x01
    21b6:	a2 83       	std	Z+2, r26	; 0x02
    21b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ba:	8e 01       	movw	r16, r28
    21bc:	07 52       	subi	r16, 0x27	; 39
    21be:	1f 4f       	sbci	r17, 0xFF	; 255
    21c0:	fe 01       	movw	r30, r28
    21c2:	e3 52       	subi	r30, 0x23	; 35
    21c4:	ff 4f       	sbci	r31, 0xFF	; 255
    21c6:	60 81       	ld	r22, Z
    21c8:	71 81       	ldd	r23, Z+1	; 0x01
    21ca:	82 81       	ldd	r24, Z+2	; 0x02
    21cc:	93 81       	ldd	r25, Z+3	; 0x03
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	4a ef       	ldi	r20, 0xFA	; 250
    21d4:	54 e4       	ldi	r21, 0x44	; 68
    21d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	f8 01       	movw	r30, r16
    21e0:	80 83       	st	Z, r24
    21e2:	91 83       	std	Z+1, r25	; 0x01
    21e4:	a2 83       	std	Z+2, r26	; 0x02
    21e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21e8:	fe 01       	movw	r30, r28
    21ea:	e7 52       	subi	r30, 0x27	; 39
    21ec:	ff 4f       	sbci	r31, 0xFF	; 255
    21ee:	60 81       	ld	r22, Z
    21f0:	71 81       	ldd	r23, Z+1	; 0x01
    21f2:	82 81       	ldd	r24, Z+2	; 0x02
    21f4:	93 81       	ldd	r25, Z+3	; 0x03
    21f6:	20 e0       	ldi	r18, 0x00	; 0
    21f8:	30 e0       	ldi	r19, 0x00	; 0
    21fa:	40 e8       	ldi	r20, 0x80	; 128
    21fc:	5f e3       	ldi	r21, 0x3F	; 63
    21fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2202:	88 23       	and	r24, r24
    2204:	44 f4       	brge	.+16     	; 0x2216 <main+0xa36>
		__ticks = 1;
    2206:	fe 01       	movw	r30, r28
    2208:	e9 52       	subi	r30, 0x29	; 41
    220a:	ff 4f       	sbci	r31, 0xFF	; 255
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	91 83       	std	Z+1, r25	; 0x01
    2212:	80 83       	st	Z, r24
    2214:	64 c0       	rjmp	.+200    	; 0x22de <main+0xafe>
	else if (__tmp > 65535)
    2216:	fe 01       	movw	r30, r28
    2218:	e7 52       	subi	r30, 0x27	; 39
    221a:	ff 4f       	sbci	r31, 0xFF	; 255
    221c:	60 81       	ld	r22, Z
    221e:	71 81       	ldd	r23, Z+1	; 0x01
    2220:	82 81       	ldd	r24, Z+2	; 0x02
    2222:	93 81       	ldd	r25, Z+3	; 0x03
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	3f ef       	ldi	r19, 0xFF	; 255
    2228:	4f e7       	ldi	r20, 0x7F	; 127
    222a:	57 e4       	ldi	r21, 0x47	; 71
    222c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2230:	18 16       	cp	r1, r24
    2232:	0c f0       	brlt	.+2      	; 0x2236 <main+0xa56>
    2234:	43 c0       	rjmp	.+134    	; 0x22bc <main+0xadc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2236:	fe 01       	movw	r30, r28
    2238:	e3 52       	subi	r30, 0x23	; 35
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	60 81       	ld	r22, Z
    223e:	71 81       	ldd	r23, Z+1	; 0x01
    2240:	82 81       	ldd	r24, Z+2	; 0x02
    2242:	93 81       	ldd	r25, Z+3	; 0x03
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	40 e2       	ldi	r20, 0x20	; 32
    224a:	51 e4       	ldi	r21, 0x41	; 65
    224c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2250:	dc 01       	movw	r26, r24
    2252:	cb 01       	movw	r24, r22
    2254:	8e 01       	movw	r16, r28
    2256:	09 52       	subi	r16, 0x29	; 41
    2258:	1f 4f       	sbci	r17, 0xFF	; 255
    225a:	bc 01       	movw	r22, r24
    225c:	cd 01       	movw	r24, r26
    225e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	f8 01       	movw	r30, r16
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	1f c0       	rjmp	.+62     	; 0x22ac <main+0xacc>
    226e:	fe 01       	movw	r30, r28
    2270:	eb 52       	subi	r30, 0x2B	; 43
    2272:	ff 4f       	sbci	r31, 0xFF	; 255
    2274:	88 ec       	ldi	r24, 0xC8	; 200
    2276:	90 e0       	ldi	r25, 0x00	; 0
    2278:	91 83       	std	Z+1, r25	; 0x01
    227a:	80 83       	st	Z, r24
    227c:	fe 01       	movw	r30, r28
    227e:	eb 52       	subi	r30, 0x2B	; 43
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	80 81       	ld	r24, Z
    2284:	91 81       	ldd	r25, Z+1	; 0x01
    2286:	01 97       	sbiw	r24, 0x01	; 1
    2288:	f1 f7       	brne	.-4      	; 0x2286 <main+0xaa6>
    228a:	fe 01       	movw	r30, r28
    228c:	eb 52       	subi	r30, 0x2B	; 43
    228e:	ff 4f       	sbci	r31, 0xFF	; 255
    2290:	91 83       	std	Z+1, r25	; 0x01
    2292:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2294:	de 01       	movw	r26, r28
    2296:	a9 52       	subi	r26, 0x29	; 41
    2298:	bf 4f       	sbci	r27, 0xFF	; 255
    229a:	fe 01       	movw	r30, r28
    229c:	e9 52       	subi	r30, 0x29	; 41
    229e:	ff 4f       	sbci	r31, 0xFF	; 255
    22a0:	80 81       	ld	r24, Z
    22a2:	91 81       	ldd	r25, Z+1	; 0x01
    22a4:	01 97       	sbiw	r24, 0x01	; 1
    22a6:	11 96       	adiw	r26, 0x01	; 1
    22a8:	9c 93       	st	X, r25
    22aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ac:	fe 01       	movw	r30, r28
    22ae:	e9 52       	subi	r30, 0x29	; 41
    22b0:	ff 4f       	sbci	r31, 0xFF	; 255
    22b2:	80 81       	ld	r24, Z
    22b4:	91 81       	ldd	r25, Z+1	; 0x01
    22b6:	00 97       	sbiw	r24, 0x00	; 0
    22b8:	d1 f6       	brne	.-76     	; 0x226e <main+0xa8e>
    22ba:	27 c0       	rjmp	.+78     	; 0x230a <main+0xb2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22bc:	8e 01       	movw	r16, r28
    22be:	09 52       	subi	r16, 0x29	; 41
    22c0:	1f 4f       	sbci	r17, 0xFF	; 255
    22c2:	fe 01       	movw	r30, r28
    22c4:	e7 52       	subi	r30, 0x27	; 39
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	60 81       	ld	r22, Z
    22ca:	71 81       	ldd	r23, Z+1	; 0x01
    22cc:	82 81       	ldd	r24, Z+2	; 0x02
    22ce:	93 81       	ldd	r25, Z+3	; 0x03
    22d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22d4:	dc 01       	movw	r26, r24
    22d6:	cb 01       	movw	r24, r22
    22d8:	f8 01       	movw	r30, r16
    22da:	91 83       	std	Z+1, r25	; 0x01
    22dc:	80 83       	st	Z, r24
    22de:	de 01       	movw	r26, r28
    22e0:	ad 52       	subi	r26, 0x2D	; 45
    22e2:	bf 4f       	sbci	r27, 0xFF	; 255
    22e4:	fe 01       	movw	r30, r28
    22e6:	e9 52       	subi	r30, 0x29	; 41
    22e8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ea:	80 81       	ld	r24, Z
    22ec:	91 81       	ldd	r25, Z+1	; 0x01
    22ee:	8d 93       	st	X+, r24
    22f0:	9c 93       	st	X, r25
    22f2:	fe 01       	movw	r30, r28
    22f4:	ed 52       	subi	r30, 0x2D	; 45
    22f6:	ff 4f       	sbci	r31, 0xFF	; 255
    22f8:	80 81       	ld	r24, Z
    22fa:	91 81       	ldd	r25, Z+1	; 0x01
    22fc:	01 97       	sbiw	r24, 0x01	; 1
    22fe:	f1 f7       	brne	.-4      	; 0x22fc <main+0xb1c>
    2300:	fe 01       	movw	r30, r28
    2302:	ed 52       	subi	r30, 0x2D	; 45
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	91 83       	std	Z+1, r25	; 0x01
    2308:	80 83       	st	Z, r24
		CLCD_u8SendStringAtPos(0u,1u,"Hi I'm HAMOKSHA");
		_delay_ms(1000);
		/*Display clear */
		CLCD_voidSendCommand(1);
		CLCD_u8SendStringAtPos(2u,1u,"I CAN RUN");
		for (Local_u8Xpos=0;Local_u8Xpos<=15;Local_u8Xpos++)
    230a:	de 01       	movw	r26, r28
    230c:	a5 5e       	subi	r26, 0xE5	; 229
    230e:	be 4f       	sbci	r27, 0xFE	; 254
    2310:	fe 01       	movw	r30, r28
    2312:	e5 5e       	subi	r30, 0xE5	; 229
    2314:	fe 4f       	sbci	r31, 0xFE	; 254
    2316:	80 81       	ld	r24, Z
    2318:	8f 5f       	subi	r24, 0xFF	; 255
    231a:	8c 93       	st	X, r24
    231c:	fe 01       	movw	r30, r28
    231e:	e5 5e       	subi	r30, 0xE5	; 229
    2320:	fe 4f       	sbci	r31, 0xFE	; 254
    2322:	80 81       	ld	r24, Z
    2324:	80 31       	cpi	r24, 0x10	; 16
    2326:	08 f4       	brcc	.+2      	; 0x232a <main+0xb4a>
    2328:	f0 cc       	rjmp	.-1568   	; 0x1d0a <main+0x52a>
			_delay_ms(150);

		}

		/*Display clear */
		CLCD_voidSendCommand(1);
    232a:	81 e0       	ldi	r24, 0x01	; 1
    232c:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
		CLCD_u8SendStringAtPos(2u,1u,"I CAN DANCE");
    2330:	2a e7       	ldi	r18, 0x7A	; 122
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	82 e0       	ldi	r24, 0x02	; 2
    2336:	61 e0       	ldi	r22, 0x01	; 1
    2338:	a9 01       	movw	r20, r18
    233a:	0e 94 6d 08 	call	0x10da	; 0x10da <CLCD_u8SendStringAtPos>
    233e:	fe 01       	movw	r30, r28
    2340:	e1 53       	subi	r30, 0x31	; 49
    2342:	ff 4f       	sbci	r31, 0xFF	; 255
    2344:	80 e0       	ldi	r24, 0x00	; 0
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	aa e7       	ldi	r26, 0x7A	; 122
    234a:	b4 e4       	ldi	r27, 0x44	; 68
    234c:	80 83       	st	Z, r24
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	a2 83       	std	Z+2, r26	; 0x02
    2352:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2354:	8e 01       	movw	r16, r28
    2356:	05 53       	subi	r16, 0x35	; 53
    2358:	1f 4f       	sbci	r17, 0xFF	; 255
    235a:	fe 01       	movw	r30, r28
    235c:	e1 53       	subi	r30, 0x31	; 49
    235e:	ff 4f       	sbci	r31, 0xFF	; 255
    2360:	60 81       	ld	r22, Z
    2362:	71 81       	ldd	r23, Z+1	; 0x01
    2364:	82 81       	ldd	r24, Z+2	; 0x02
    2366:	93 81       	ldd	r25, Z+3	; 0x03
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	4a ef       	ldi	r20, 0xFA	; 250
    236e:	54 e4       	ldi	r21, 0x44	; 68
    2370:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2374:	dc 01       	movw	r26, r24
    2376:	cb 01       	movw	r24, r22
    2378:	f8 01       	movw	r30, r16
    237a:	80 83       	st	Z, r24
    237c:	91 83       	std	Z+1, r25	; 0x01
    237e:	a2 83       	std	Z+2, r26	; 0x02
    2380:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2382:	fe 01       	movw	r30, r28
    2384:	e5 53       	subi	r30, 0x35	; 53
    2386:	ff 4f       	sbci	r31, 0xFF	; 255
    2388:	60 81       	ld	r22, Z
    238a:	71 81       	ldd	r23, Z+1	; 0x01
    238c:	82 81       	ldd	r24, Z+2	; 0x02
    238e:	93 81       	ldd	r25, Z+3	; 0x03
    2390:	20 e0       	ldi	r18, 0x00	; 0
    2392:	30 e0       	ldi	r19, 0x00	; 0
    2394:	40 e8       	ldi	r20, 0x80	; 128
    2396:	5f e3       	ldi	r21, 0x3F	; 63
    2398:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    239c:	88 23       	and	r24, r24
    239e:	44 f4       	brge	.+16     	; 0x23b0 <main+0xbd0>
		__ticks = 1;
    23a0:	fe 01       	movw	r30, r28
    23a2:	e7 53       	subi	r30, 0x37	; 55
    23a4:	ff 4f       	sbci	r31, 0xFF	; 255
    23a6:	81 e0       	ldi	r24, 0x01	; 1
    23a8:	90 e0       	ldi	r25, 0x00	; 0
    23aa:	91 83       	std	Z+1, r25	; 0x01
    23ac:	80 83       	st	Z, r24
    23ae:	64 c0       	rjmp	.+200    	; 0x2478 <main+0xc98>
	else if (__tmp > 65535)
    23b0:	fe 01       	movw	r30, r28
    23b2:	e5 53       	subi	r30, 0x35	; 53
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	60 81       	ld	r22, Z
    23b8:	71 81       	ldd	r23, Z+1	; 0x01
    23ba:	82 81       	ldd	r24, Z+2	; 0x02
    23bc:	93 81       	ldd	r25, Z+3	; 0x03
    23be:	20 e0       	ldi	r18, 0x00	; 0
    23c0:	3f ef       	ldi	r19, 0xFF	; 255
    23c2:	4f e7       	ldi	r20, 0x7F	; 127
    23c4:	57 e4       	ldi	r21, 0x47	; 71
    23c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23ca:	18 16       	cp	r1, r24
    23cc:	0c f0       	brlt	.+2      	; 0x23d0 <main+0xbf0>
    23ce:	43 c0       	rjmp	.+134    	; 0x2456 <main+0xc76>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23d0:	fe 01       	movw	r30, r28
    23d2:	e1 53       	subi	r30, 0x31	; 49
    23d4:	ff 4f       	sbci	r31, 0xFF	; 255
    23d6:	60 81       	ld	r22, Z
    23d8:	71 81       	ldd	r23, Z+1	; 0x01
    23da:	82 81       	ldd	r24, Z+2	; 0x02
    23dc:	93 81       	ldd	r25, Z+3	; 0x03
    23de:	20 e0       	ldi	r18, 0x00	; 0
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	40 e2       	ldi	r20, 0x20	; 32
    23e4:	51 e4       	ldi	r21, 0x41	; 65
    23e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23ea:	dc 01       	movw	r26, r24
    23ec:	cb 01       	movw	r24, r22
    23ee:	8e 01       	movw	r16, r28
    23f0:	07 53       	subi	r16, 0x37	; 55
    23f2:	1f 4f       	sbci	r17, 0xFF	; 255
    23f4:	bc 01       	movw	r22, r24
    23f6:	cd 01       	movw	r24, r26
    23f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	f8 01       	movw	r30, r16
    2402:	91 83       	std	Z+1, r25	; 0x01
    2404:	80 83       	st	Z, r24
    2406:	1f c0       	rjmp	.+62     	; 0x2446 <main+0xc66>
    2408:	fe 01       	movw	r30, r28
    240a:	e9 53       	subi	r30, 0x39	; 57
    240c:	ff 4f       	sbci	r31, 0xFF	; 255
    240e:	88 ec       	ldi	r24, 0xC8	; 200
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	91 83       	std	Z+1, r25	; 0x01
    2414:	80 83       	st	Z, r24
    2416:	fe 01       	movw	r30, r28
    2418:	e9 53       	subi	r30, 0x39	; 57
    241a:	ff 4f       	sbci	r31, 0xFF	; 255
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	01 97       	sbiw	r24, 0x01	; 1
    2422:	f1 f7       	brne	.-4      	; 0x2420 <main+0xc40>
    2424:	fe 01       	movw	r30, r28
    2426:	e9 53       	subi	r30, 0x39	; 57
    2428:	ff 4f       	sbci	r31, 0xFF	; 255
    242a:	91 83       	std	Z+1, r25	; 0x01
    242c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    242e:	de 01       	movw	r26, r28
    2430:	a7 53       	subi	r26, 0x37	; 55
    2432:	bf 4f       	sbci	r27, 0xFF	; 255
    2434:	fe 01       	movw	r30, r28
    2436:	e7 53       	subi	r30, 0x37	; 55
    2438:	ff 4f       	sbci	r31, 0xFF	; 255
    243a:	80 81       	ld	r24, Z
    243c:	91 81       	ldd	r25, Z+1	; 0x01
    243e:	01 97       	sbiw	r24, 0x01	; 1
    2440:	11 96       	adiw	r26, 0x01	; 1
    2442:	9c 93       	st	X, r25
    2444:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2446:	fe 01       	movw	r30, r28
    2448:	e7 53       	subi	r30, 0x37	; 55
    244a:	ff 4f       	sbci	r31, 0xFF	; 255
    244c:	80 81       	ld	r24, Z
    244e:	91 81       	ldd	r25, Z+1	; 0x01
    2450:	00 97       	sbiw	r24, 0x00	; 0
    2452:	d1 f6       	brne	.-76     	; 0x2408 <main+0xc28>
    2454:	28 c0       	rjmp	.+80     	; 0x24a6 <main+0xcc6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2456:	8e 01       	movw	r16, r28
    2458:	07 53       	subi	r16, 0x37	; 55
    245a:	1f 4f       	sbci	r17, 0xFF	; 255
    245c:	fe 01       	movw	r30, r28
    245e:	e5 53       	subi	r30, 0x35	; 53
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	60 81       	ld	r22, Z
    2464:	71 81       	ldd	r23, Z+1	; 0x01
    2466:	82 81       	ldd	r24, Z+2	; 0x02
    2468:	93 81       	ldd	r25, Z+3	; 0x03
    246a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    246e:	dc 01       	movw	r26, r24
    2470:	cb 01       	movw	r24, r22
    2472:	f8 01       	movw	r30, r16
    2474:	91 83       	std	Z+1, r25	; 0x01
    2476:	80 83       	st	Z, r24
    2478:	de 01       	movw	r26, r28
    247a:	ab 53       	subi	r26, 0x3B	; 59
    247c:	bf 4f       	sbci	r27, 0xFF	; 255
    247e:	fe 01       	movw	r30, r28
    2480:	e7 53       	subi	r30, 0x37	; 55
    2482:	ff 4f       	sbci	r31, 0xFF	; 255
    2484:	80 81       	ld	r24, Z
    2486:	91 81       	ldd	r25, Z+1	; 0x01
    2488:	11 96       	adiw	r26, 0x01	; 1
    248a:	9c 93       	st	X, r25
    248c:	8e 93       	st	-X, r24
    248e:	fe 01       	movw	r30, r28
    2490:	eb 53       	subi	r30, 0x3B	; 59
    2492:	ff 4f       	sbci	r31, 0xFF	; 255
    2494:	80 81       	ld	r24, Z
    2496:	91 81       	ldd	r25, Z+1	; 0x01
    2498:	01 97       	sbiw	r24, 0x01	; 1
    249a:	f1 f7       	brne	.-4      	; 0x2498 <main+0xcb8>
    249c:	fe 01       	movw	r30, r28
    249e:	eb 53       	subi	r30, 0x3B	; 59
    24a0:	ff 4f       	sbci	r31, 0xFF	; 255
    24a2:	91 83       	std	Z+1, r25	; 0x01
    24a4:	80 83       	st	Z, r24
		_delay_ms(1000);
		for(Local_u8counter=0;Local_u8counter<=10;Local_u8counter++)
    24a6:	fe 01       	movw	r30, r28
    24a8:	e7 5e       	subi	r30, 0xE7	; 231
    24aa:	fe 4f       	sbci	r31, 0xFE	; 254
    24ac:	10 82       	st	Z, r1
    24ae:	81 c1       	rjmp	.+770    	; 0x27b2 <main+0xfd2>
		{
			CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,7u,0u);
    24b0:	9e 01       	movw	r18, r28
    24b2:	24 5e       	subi	r18, 0xE4	; 228
    24b4:	3e 4f       	sbci	r19, 0xFE	; 254
    24b6:	80 e0       	ldi	r24, 0x00	; 0
    24b8:	b9 01       	movw	r22, r18
    24ba:	47 e0       	ldi	r20, 0x07	; 7
    24bc:	20 e0       	ldi	r18, 0x00	; 0
    24be:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    24c2:	fe 01       	movw	r30, r28
    24c4:	ef 53       	subi	r30, 0x3F	; 63
    24c6:	ff 4f       	sbci	r31, 0xFF	; 255
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	a6 e1       	ldi	r26, 0x16	; 22
    24ce:	b3 e4       	ldi	r27, 0x43	; 67
    24d0:	80 83       	st	Z, r24
    24d2:	91 83       	std	Z+1, r25	; 0x01
    24d4:	a2 83       	std	Z+2, r26	; 0x02
    24d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24d8:	8e 01       	movw	r16, r28
    24da:	03 54       	subi	r16, 0x43	; 67
    24dc:	1f 4f       	sbci	r17, 0xFF	; 255
    24de:	fe 01       	movw	r30, r28
    24e0:	ef 53       	subi	r30, 0x3F	; 63
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	20 e0       	ldi	r18, 0x00	; 0
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	4a ef       	ldi	r20, 0xFA	; 250
    24f2:	54 e4       	ldi	r21, 0x44	; 68
    24f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	f8 01       	movw	r30, r16
    24fe:	80 83       	st	Z, r24
    2500:	91 83       	std	Z+1, r25	; 0x01
    2502:	a2 83       	std	Z+2, r26	; 0x02
    2504:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2506:	fe 01       	movw	r30, r28
    2508:	e3 54       	subi	r30, 0x43	; 67
    250a:	ff 4f       	sbci	r31, 0xFF	; 255
    250c:	60 81       	ld	r22, Z
    250e:	71 81       	ldd	r23, Z+1	; 0x01
    2510:	82 81       	ldd	r24, Z+2	; 0x02
    2512:	93 81       	ldd	r25, Z+3	; 0x03
    2514:	20 e0       	ldi	r18, 0x00	; 0
    2516:	30 e0       	ldi	r19, 0x00	; 0
    2518:	40 e8       	ldi	r20, 0x80	; 128
    251a:	5f e3       	ldi	r21, 0x3F	; 63
    251c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2520:	88 23       	and	r24, r24
    2522:	44 f4       	brge	.+16     	; 0x2534 <main+0xd54>
		__ticks = 1;
    2524:	fe 01       	movw	r30, r28
    2526:	e5 54       	subi	r30, 0x45	; 69
    2528:	ff 4f       	sbci	r31, 0xFF	; 255
    252a:	81 e0       	ldi	r24, 0x01	; 1
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	91 83       	std	Z+1, r25	; 0x01
    2530:	80 83       	st	Z, r24
    2532:	64 c0       	rjmp	.+200    	; 0x25fc <main+0xe1c>
	else if (__tmp > 65535)
    2534:	fe 01       	movw	r30, r28
    2536:	e3 54       	subi	r30, 0x43	; 67
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	60 81       	ld	r22, Z
    253c:	71 81       	ldd	r23, Z+1	; 0x01
    253e:	82 81       	ldd	r24, Z+2	; 0x02
    2540:	93 81       	ldd	r25, Z+3	; 0x03
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	3f ef       	ldi	r19, 0xFF	; 255
    2546:	4f e7       	ldi	r20, 0x7F	; 127
    2548:	57 e4       	ldi	r21, 0x47	; 71
    254a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    254e:	18 16       	cp	r1, r24
    2550:	0c f0       	brlt	.+2      	; 0x2554 <main+0xd74>
    2552:	43 c0       	rjmp	.+134    	; 0x25da <main+0xdfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2554:	fe 01       	movw	r30, r28
    2556:	ef 53       	subi	r30, 0x3F	; 63
    2558:	ff 4f       	sbci	r31, 0xFF	; 255
    255a:	60 81       	ld	r22, Z
    255c:	71 81       	ldd	r23, Z+1	; 0x01
    255e:	82 81       	ldd	r24, Z+2	; 0x02
    2560:	93 81       	ldd	r25, Z+3	; 0x03
    2562:	20 e0       	ldi	r18, 0x00	; 0
    2564:	30 e0       	ldi	r19, 0x00	; 0
    2566:	40 e2       	ldi	r20, 0x20	; 32
    2568:	51 e4       	ldi	r21, 0x41	; 65
    256a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	8e 01       	movw	r16, r28
    2574:	05 54       	subi	r16, 0x45	; 69
    2576:	1f 4f       	sbci	r17, 0xFF	; 255
    2578:	bc 01       	movw	r22, r24
    257a:	cd 01       	movw	r24, r26
    257c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2580:	dc 01       	movw	r26, r24
    2582:	cb 01       	movw	r24, r22
    2584:	f8 01       	movw	r30, r16
    2586:	91 83       	std	Z+1, r25	; 0x01
    2588:	80 83       	st	Z, r24
    258a:	1f c0       	rjmp	.+62     	; 0x25ca <main+0xdea>
    258c:	fe 01       	movw	r30, r28
    258e:	e7 54       	subi	r30, 0x47	; 71
    2590:	ff 4f       	sbci	r31, 0xFF	; 255
    2592:	88 ec       	ldi	r24, 0xC8	; 200
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	91 83       	std	Z+1, r25	; 0x01
    2598:	80 83       	st	Z, r24
    259a:	fe 01       	movw	r30, r28
    259c:	e7 54       	subi	r30, 0x47	; 71
    259e:	ff 4f       	sbci	r31, 0xFF	; 255
    25a0:	80 81       	ld	r24, Z
    25a2:	91 81       	ldd	r25, Z+1	; 0x01
    25a4:	01 97       	sbiw	r24, 0x01	; 1
    25a6:	f1 f7       	brne	.-4      	; 0x25a4 <main+0xdc4>
    25a8:	fe 01       	movw	r30, r28
    25aa:	e7 54       	subi	r30, 0x47	; 71
    25ac:	ff 4f       	sbci	r31, 0xFF	; 255
    25ae:	91 83       	std	Z+1, r25	; 0x01
    25b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25b2:	de 01       	movw	r26, r28
    25b4:	a5 54       	subi	r26, 0x45	; 69
    25b6:	bf 4f       	sbci	r27, 0xFF	; 255
    25b8:	fe 01       	movw	r30, r28
    25ba:	e5 54       	subi	r30, 0x45	; 69
    25bc:	ff 4f       	sbci	r31, 0xFF	; 255
    25be:	80 81       	ld	r24, Z
    25c0:	91 81       	ldd	r25, Z+1	; 0x01
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	11 96       	adiw	r26, 0x01	; 1
    25c6:	9c 93       	st	X, r25
    25c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25ca:	fe 01       	movw	r30, r28
    25cc:	e5 54       	subi	r30, 0x45	; 69
    25ce:	ff 4f       	sbci	r31, 0xFF	; 255
    25d0:	80 81       	ld	r24, Z
    25d2:	91 81       	ldd	r25, Z+1	; 0x01
    25d4:	00 97       	sbiw	r24, 0x00	; 0
    25d6:	d1 f6       	brne	.-76     	; 0x258c <main+0xdac>
    25d8:	27 c0       	rjmp	.+78     	; 0x2628 <main+0xe48>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25da:	8e 01       	movw	r16, r28
    25dc:	05 54       	subi	r16, 0x45	; 69
    25de:	1f 4f       	sbci	r17, 0xFF	; 255
    25e0:	fe 01       	movw	r30, r28
    25e2:	e3 54       	subi	r30, 0x43	; 67
    25e4:	ff 4f       	sbci	r31, 0xFF	; 255
    25e6:	60 81       	ld	r22, Z
    25e8:	71 81       	ldd	r23, Z+1	; 0x01
    25ea:	82 81       	ldd	r24, Z+2	; 0x02
    25ec:	93 81       	ldd	r25, Z+3	; 0x03
    25ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f2:	dc 01       	movw	r26, r24
    25f4:	cb 01       	movw	r24, r22
    25f6:	f8 01       	movw	r30, r16
    25f8:	91 83       	std	Z+1, r25	; 0x01
    25fa:	80 83       	st	Z, r24
    25fc:	de 01       	movw	r26, r28
    25fe:	a9 54       	subi	r26, 0x49	; 73
    2600:	bf 4f       	sbci	r27, 0xFF	; 255
    2602:	fe 01       	movw	r30, r28
    2604:	e5 54       	subi	r30, 0x45	; 69
    2606:	ff 4f       	sbci	r31, 0xFF	; 255
    2608:	80 81       	ld	r24, Z
    260a:	91 81       	ldd	r25, Z+1	; 0x01
    260c:	8d 93       	st	X+, r24
    260e:	9c 93       	st	X, r25
    2610:	fe 01       	movw	r30, r28
    2612:	e9 54       	subi	r30, 0x49	; 73
    2614:	ff 4f       	sbci	r31, 0xFF	; 255
    2616:	80 81       	ld	r24, Z
    2618:	91 81       	ldd	r25, Z+1	; 0x01
    261a:	01 97       	sbiw	r24, 0x01	; 1
    261c:	f1 f7       	brne	.-4      	; 0x261a <main+0xe3a>
    261e:	fe 01       	movw	r30, r28
    2620:	e9 54       	subi	r30, 0x49	; 73
    2622:	ff 4f       	sbci	r31, 0xFF	; 255
    2624:	91 83       	std	Z+1, r25	; 0x01
    2626:	80 83       	st	Z, r24
			_delay_ms(150);
			CLCD_u8WriteSpecialCharacter(1u,Local_u8MyPattern2,7u,0u);
    2628:	9e 01       	movw	r18, r28
    262a:	2c 5d       	subi	r18, 0xDC	; 220
    262c:	3e 4f       	sbci	r19, 0xFE	; 254
    262e:	81 e0       	ldi	r24, 0x01	; 1
    2630:	b9 01       	movw	r22, r18
    2632:	47 e0       	ldi	r20, 0x07	; 7
    2634:	20 e0       	ldi	r18, 0x00	; 0
    2636:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    263a:	fe 01       	movw	r30, r28
    263c:	ed 54       	subi	r30, 0x4D	; 77
    263e:	ff 4f       	sbci	r31, 0xFF	; 255
    2640:	80 e0       	ldi	r24, 0x00	; 0
    2642:	90 e0       	ldi	r25, 0x00	; 0
    2644:	a6 e1       	ldi	r26, 0x16	; 22
    2646:	b3 e4       	ldi	r27, 0x43	; 67
    2648:	80 83       	st	Z, r24
    264a:	91 83       	std	Z+1, r25	; 0x01
    264c:	a2 83       	std	Z+2, r26	; 0x02
    264e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2650:	8e 01       	movw	r16, r28
    2652:	01 55       	subi	r16, 0x51	; 81
    2654:	1f 4f       	sbci	r17, 0xFF	; 255
    2656:	fe 01       	movw	r30, r28
    2658:	ed 54       	subi	r30, 0x4D	; 77
    265a:	ff 4f       	sbci	r31, 0xFF	; 255
    265c:	60 81       	ld	r22, Z
    265e:	71 81       	ldd	r23, Z+1	; 0x01
    2660:	82 81       	ldd	r24, Z+2	; 0x02
    2662:	93 81       	ldd	r25, Z+3	; 0x03
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	4a ef       	ldi	r20, 0xFA	; 250
    266a:	54 e4       	ldi	r21, 0x44	; 68
    266c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2670:	dc 01       	movw	r26, r24
    2672:	cb 01       	movw	r24, r22
    2674:	f8 01       	movw	r30, r16
    2676:	80 83       	st	Z, r24
    2678:	91 83       	std	Z+1, r25	; 0x01
    267a:	a2 83       	std	Z+2, r26	; 0x02
    267c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    267e:	fe 01       	movw	r30, r28
    2680:	e1 55       	subi	r30, 0x51	; 81
    2682:	ff 4f       	sbci	r31, 0xFF	; 255
    2684:	60 81       	ld	r22, Z
    2686:	71 81       	ldd	r23, Z+1	; 0x01
    2688:	82 81       	ldd	r24, Z+2	; 0x02
    268a:	93 81       	ldd	r25, Z+3	; 0x03
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	30 e0       	ldi	r19, 0x00	; 0
    2690:	40 e8       	ldi	r20, 0x80	; 128
    2692:	5f e3       	ldi	r21, 0x3F	; 63
    2694:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2698:	88 23       	and	r24, r24
    269a:	44 f4       	brge	.+16     	; 0x26ac <main+0xecc>
		__ticks = 1;
    269c:	fe 01       	movw	r30, r28
    269e:	e3 55       	subi	r30, 0x53	; 83
    26a0:	ff 4f       	sbci	r31, 0xFF	; 255
    26a2:	81 e0       	ldi	r24, 0x01	; 1
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	91 83       	std	Z+1, r25	; 0x01
    26a8:	80 83       	st	Z, r24
    26aa:	64 c0       	rjmp	.+200    	; 0x2774 <main+0xf94>
	else if (__tmp > 65535)
    26ac:	fe 01       	movw	r30, r28
    26ae:	e1 55       	subi	r30, 0x51	; 81
    26b0:	ff 4f       	sbci	r31, 0xFF	; 255
    26b2:	60 81       	ld	r22, Z
    26b4:	71 81       	ldd	r23, Z+1	; 0x01
    26b6:	82 81       	ldd	r24, Z+2	; 0x02
    26b8:	93 81       	ldd	r25, Z+3	; 0x03
    26ba:	20 e0       	ldi	r18, 0x00	; 0
    26bc:	3f ef       	ldi	r19, 0xFF	; 255
    26be:	4f e7       	ldi	r20, 0x7F	; 127
    26c0:	57 e4       	ldi	r21, 0x47	; 71
    26c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26c6:	18 16       	cp	r1, r24
    26c8:	0c f0       	brlt	.+2      	; 0x26cc <main+0xeec>
    26ca:	43 c0       	rjmp	.+134    	; 0x2752 <main+0xf72>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26cc:	fe 01       	movw	r30, r28
    26ce:	ed 54       	subi	r30, 0x4D	; 77
    26d0:	ff 4f       	sbci	r31, 0xFF	; 255
    26d2:	60 81       	ld	r22, Z
    26d4:	71 81       	ldd	r23, Z+1	; 0x01
    26d6:	82 81       	ldd	r24, Z+2	; 0x02
    26d8:	93 81       	ldd	r25, Z+3	; 0x03
    26da:	20 e0       	ldi	r18, 0x00	; 0
    26dc:	30 e0       	ldi	r19, 0x00	; 0
    26de:	40 e2       	ldi	r20, 0x20	; 32
    26e0:	51 e4       	ldi	r21, 0x41	; 65
    26e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e6:	dc 01       	movw	r26, r24
    26e8:	cb 01       	movw	r24, r22
    26ea:	8e 01       	movw	r16, r28
    26ec:	03 55       	subi	r16, 0x53	; 83
    26ee:	1f 4f       	sbci	r17, 0xFF	; 255
    26f0:	bc 01       	movw	r22, r24
    26f2:	cd 01       	movw	r24, r26
    26f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26f8:	dc 01       	movw	r26, r24
    26fa:	cb 01       	movw	r24, r22
    26fc:	f8 01       	movw	r30, r16
    26fe:	91 83       	std	Z+1, r25	; 0x01
    2700:	80 83       	st	Z, r24
    2702:	1f c0       	rjmp	.+62     	; 0x2742 <main+0xf62>
    2704:	fe 01       	movw	r30, r28
    2706:	e5 55       	subi	r30, 0x55	; 85
    2708:	ff 4f       	sbci	r31, 0xFF	; 255
    270a:	88 ec       	ldi	r24, 0xC8	; 200
    270c:	90 e0       	ldi	r25, 0x00	; 0
    270e:	91 83       	std	Z+1, r25	; 0x01
    2710:	80 83       	st	Z, r24
    2712:	fe 01       	movw	r30, r28
    2714:	e5 55       	subi	r30, 0x55	; 85
    2716:	ff 4f       	sbci	r31, 0xFF	; 255
    2718:	80 81       	ld	r24, Z
    271a:	91 81       	ldd	r25, Z+1	; 0x01
    271c:	01 97       	sbiw	r24, 0x01	; 1
    271e:	f1 f7       	brne	.-4      	; 0x271c <main+0xf3c>
    2720:	fe 01       	movw	r30, r28
    2722:	e5 55       	subi	r30, 0x55	; 85
    2724:	ff 4f       	sbci	r31, 0xFF	; 255
    2726:	91 83       	std	Z+1, r25	; 0x01
    2728:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    272a:	de 01       	movw	r26, r28
    272c:	a3 55       	subi	r26, 0x53	; 83
    272e:	bf 4f       	sbci	r27, 0xFF	; 255
    2730:	fe 01       	movw	r30, r28
    2732:	e3 55       	subi	r30, 0x53	; 83
    2734:	ff 4f       	sbci	r31, 0xFF	; 255
    2736:	80 81       	ld	r24, Z
    2738:	91 81       	ldd	r25, Z+1	; 0x01
    273a:	01 97       	sbiw	r24, 0x01	; 1
    273c:	11 96       	adiw	r26, 0x01	; 1
    273e:	9c 93       	st	X, r25
    2740:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2742:	fe 01       	movw	r30, r28
    2744:	e3 55       	subi	r30, 0x53	; 83
    2746:	ff 4f       	sbci	r31, 0xFF	; 255
    2748:	80 81       	ld	r24, Z
    274a:	91 81       	ldd	r25, Z+1	; 0x01
    274c:	00 97       	sbiw	r24, 0x00	; 0
    274e:	d1 f6       	brne	.-76     	; 0x2704 <main+0xf24>
    2750:	27 c0       	rjmp	.+78     	; 0x27a0 <main+0xfc0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2752:	8e 01       	movw	r16, r28
    2754:	03 55       	subi	r16, 0x53	; 83
    2756:	1f 4f       	sbci	r17, 0xFF	; 255
    2758:	fe 01       	movw	r30, r28
    275a:	e1 55       	subi	r30, 0x51	; 81
    275c:	ff 4f       	sbci	r31, 0xFF	; 255
    275e:	60 81       	ld	r22, Z
    2760:	71 81       	ldd	r23, Z+1	; 0x01
    2762:	82 81       	ldd	r24, Z+2	; 0x02
    2764:	93 81       	ldd	r25, Z+3	; 0x03
    2766:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    276a:	dc 01       	movw	r26, r24
    276c:	cb 01       	movw	r24, r22
    276e:	f8 01       	movw	r30, r16
    2770:	91 83       	std	Z+1, r25	; 0x01
    2772:	80 83       	st	Z, r24
    2774:	de 01       	movw	r26, r28
    2776:	a7 55       	subi	r26, 0x57	; 87
    2778:	bf 4f       	sbci	r27, 0xFF	; 255
    277a:	fe 01       	movw	r30, r28
    277c:	e3 55       	subi	r30, 0x53	; 83
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	80 81       	ld	r24, Z
    2782:	91 81       	ldd	r25, Z+1	; 0x01
    2784:	8d 93       	st	X+, r24
    2786:	9c 93       	st	X, r25
    2788:	fe 01       	movw	r30, r28
    278a:	e7 55       	subi	r30, 0x57	; 87
    278c:	ff 4f       	sbci	r31, 0xFF	; 255
    278e:	80 81       	ld	r24, Z
    2790:	91 81       	ldd	r25, Z+1	; 0x01
    2792:	01 97       	sbiw	r24, 0x01	; 1
    2794:	f1 f7       	brne	.-4      	; 0x2792 <main+0xfb2>
    2796:	fe 01       	movw	r30, r28
    2798:	e7 55       	subi	r30, 0x57	; 87
    279a:	ff 4f       	sbci	r31, 0xFF	; 255
    279c:	91 83       	std	Z+1, r25	; 0x01
    279e:	80 83       	st	Z, r24

		/*Display clear */
		CLCD_voidSendCommand(1);
		CLCD_u8SendStringAtPos(2u,1u,"I CAN DANCE");
		_delay_ms(1000);
		for(Local_u8counter=0;Local_u8counter<=10;Local_u8counter++)
    27a0:	de 01       	movw	r26, r28
    27a2:	a7 5e       	subi	r26, 0xE7	; 231
    27a4:	be 4f       	sbci	r27, 0xFE	; 254
    27a6:	fe 01       	movw	r30, r28
    27a8:	e7 5e       	subi	r30, 0xE7	; 231
    27aa:	fe 4f       	sbci	r31, 0xFE	; 254
    27ac:	80 81       	ld	r24, Z
    27ae:	8f 5f       	subi	r24, 0xFF	; 255
    27b0:	8c 93       	st	X, r24
    27b2:	fe 01       	movw	r30, r28
    27b4:	e7 5e       	subi	r30, 0xE7	; 231
    27b6:	fe 4f       	sbci	r31, 0xFE	; 254
    27b8:	80 81       	ld	r24, Z
    27ba:	8b 30       	cpi	r24, 0x0B	; 11
    27bc:	08 f4       	brcc	.+2      	; 0x27c0 <main+0xfe0>
    27be:	78 ce       	rjmp	.-784    	; 0x24b0 <main+0xcd0>
			CLCD_u8WriteSpecialCharacter(1u,Local_u8MyPattern2,7u,0u);
			_delay_ms(150);
		}

		/*Display clear */
		CLCD_voidSendCommand(1);
    27c0:	81 e0       	ldi	r24, 0x01	; 1
    27c2:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
		CLCD_u8SendStringAtPos(0u,1u,"I PLAY FOOTBAL");
    27c6:	26 e8       	ldi	r18, 0x86	; 134
    27c8:	30 e0       	ldi	r19, 0x00	; 0
    27ca:	80 e0       	ldi	r24, 0x00	; 0
    27cc:	61 e0       	ldi	r22, 0x01	; 1
    27ce:	a9 01       	movw	r20, r18
    27d0:	0e 94 6d 08 	call	0x10da	; 0x10da <CLCD_u8SendStringAtPos>
    27d4:	fe 01       	movw	r30, r28
    27d6:	eb 55       	subi	r30, 0x5B	; 91
    27d8:	ff 4f       	sbci	r31, 0xFF	; 255
    27da:	80 e0       	ldi	r24, 0x00	; 0
    27dc:	90 e0       	ldi	r25, 0x00	; 0
    27de:	aa e7       	ldi	r26, 0x7A	; 122
    27e0:	b4 e4       	ldi	r27, 0x44	; 68
    27e2:	80 83       	st	Z, r24
    27e4:	91 83       	std	Z+1, r25	; 0x01
    27e6:	a2 83       	std	Z+2, r26	; 0x02
    27e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27ea:	8e 01       	movw	r16, r28
    27ec:	0f 55       	subi	r16, 0x5F	; 95
    27ee:	1f 4f       	sbci	r17, 0xFF	; 255
    27f0:	fe 01       	movw	r30, r28
    27f2:	eb 55       	subi	r30, 0x5B	; 91
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	60 81       	ld	r22, Z
    27f8:	71 81       	ldd	r23, Z+1	; 0x01
    27fa:	82 81       	ldd	r24, Z+2	; 0x02
    27fc:	93 81       	ldd	r25, Z+3	; 0x03
    27fe:	20 e0       	ldi	r18, 0x00	; 0
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	4a ef       	ldi	r20, 0xFA	; 250
    2804:	54 e4       	ldi	r21, 0x44	; 68
    2806:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    280a:	dc 01       	movw	r26, r24
    280c:	cb 01       	movw	r24, r22
    280e:	f8 01       	movw	r30, r16
    2810:	80 83       	st	Z, r24
    2812:	91 83       	std	Z+1, r25	; 0x01
    2814:	a2 83       	std	Z+2, r26	; 0x02
    2816:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2818:	fe 01       	movw	r30, r28
    281a:	ef 55       	subi	r30, 0x5F	; 95
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	60 81       	ld	r22, Z
    2820:	71 81       	ldd	r23, Z+1	; 0x01
    2822:	82 81       	ldd	r24, Z+2	; 0x02
    2824:	93 81       	ldd	r25, Z+3	; 0x03
    2826:	20 e0       	ldi	r18, 0x00	; 0
    2828:	30 e0       	ldi	r19, 0x00	; 0
    282a:	40 e8       	ldi	r20, 0x80	; 128
    282c:	5f e3       	ldi	r21, 0x3F	; 63
    282e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2832:	88 23       	and	r24, r24
    2834:	44 f4       	brge	.+16     	; 0x2846 <main+0x1066>
		__ticks = 1;
    2836:	fe 01       	movw	r30, r28
    2838:	e1 56       	subi	r30, 0x61	; 97
    283a:	ff 4f       	sbci	r31, 0xFF	; 255
    283c:	81 e0       	ldi	r24, 0x01	; 1
    283e:	90 e0       	ldi	r25, 0x00	; 0
    2840:	91 83       	std	Z+1, r25	; 0x01
    2842:	80 83       	st	Z, r24
    2844:	64 c0       	rjmp	.+200    	; 0x290e <main+0x112e>
	else if (__tmp > 65535)
    2846:	fe 01       	movw	r30, r28
    2848:	ef 55       	subi	r30, 0x5F	; 95
    284a:	ff 4f       	sbci	r31, 0xFF	; 255
    284c:	60 81       	ld	r22, Z
    284e:	71 81       	ldd	r23, Z+1	; 0x01
    2850:	82 81       	ldd	r24, Z+2	; 0x02
    2852:	93 81       	ldd	r25, Z+3	; 0x03
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	3f ef       	ldi	r19, 0xFF	; 255
    2858:	4f e7       	ldi	r20, 0x7F	; 127
    285a:	57 e4       	ldi	r21, 0x47	; 71
    285c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2860:	18 16       	cp	r1, r24
    2862:	0c f0       	brlt	.+2      	; 0x2866 <main+0x1086>
    2864:	43 c0       	rjmp	.+134    	; 0x28ec <main+0x110c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2866:	fe 01       	movw	r30, r28
    2868:	eb 55       	subi	r30, 0x5B	; 91
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	40 e2       	ldi	r20, 0x20	; 32
    287a:	51 e4       	ldi	r21, 0x41	; 65
    287c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2880:	dc 01       	movw	r26, r24
    2882:	cb 01       	movw	r24, r22
    2884:	8e 01       	movw	r16, r28
    2886:	01 56       	subi	r16, 0x61	; 97
    2888:	1f 4f       	sbci	r17, 0xFF	; 255
    288a:	bc 01       	movw	r22, r24
    288c:	cd 01       	movw	r24, r26
    288e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2892:	dc 01       	movw	r26, r24
    2894:	cb 01       	movw	r24, r22
    2896:	f8 01       	movw	r30, r16
    2898:	91 83       	std	Z+1, r25	; 0x01
    289a:	80 83       	st	Z, r24
    289c:	1f c0       	rjmp	.+62     	; 0x28dc <main+0x10fc>
    289e:	fe 01       	movw	r30, r28
    28a0:	e3 56       	subi	r30, 0x63	; 99
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	88 ec       	ldi	r24, 0xC8	; 200
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	91 83       	std	Z+1, r25	; 0x01
    28aa:	80 83       	st	Z, r24
    28ac:	fe 01       	movw	r30, r28
    28ae:	e3 56       	subi	r30, 0x63	; 99
    28b0:	ff 4f       	sbci	r31, 0xFF	; 255
    28b2:	80 81       	ld	r24, Z
    28b4:	91 81       	ldd	r25, Z+1	; 0x01
    28b6:	01 97       	sbiw	r24, 0x01	; 1
    28b8:	f1 f7       	brne	.-4      	; 0x28b6 <main+0x10d6>
    28ba:	fe 01       	movw	r30, r28
    28bc:	e3 56       	subi	r30, 0x63	; 99
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28c4:	de 01       	movw	r26, r28
    28c6:	a1 56       	subi	r26, 0x61	; 97
    28c8:	bf 4f       	sbci	r27, 0xFF	; 255
    28ca:	fe 01       	movw	r30, r28
    28cc:	e1 56       	subi	r30, 0x61	; 97
    28ce:	ff 4f       	sbci	r31, 0xFF	; 255
    28d0:	80 81       	ld	r24, Z
    28d2:	91 81       	ldd	r25, Z+1	; 0x01
    28d4:	01 97       	sbiw	r24, 0x01	; 1
    28d6:	11 96       	adiw	r26, 0x01	; 1
    28d8:	9c 93       	st	X, r25
    28da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28dc:	fe 01       	movw	r30, r28
    28de:	e1 56       	subi	r30, 0x61	; 97
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	80 81       	ld	r24, Z
    28e4:	91 81       	ldd	r25, Z+1	; 0x01
    28e6:	00 97       	sbiw	r24, 0x00	; 0
    28e8:	d1 f6       	brne	.-76     	; 0x289e <main+0x10be>
    28ea:	28 c0       	rjmp	.+80     	; 0x293c <main+0x115c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28ec:	8e 01       	movw	r16, r28
    28ee:	01 56       	subi	r16, 0x61	; 97
    28f0:	1f 4f       	sbci	r17, 0xFF	; 255
    28f2:	fe 01       	movw	r30, r28
    28f4:	ef 55       	subi	r30, 0x5F	; 95
    28f6:	ff 4f       	sbci	r31, 0xFF	; 255
    28f8:	60 81       	ld	r22, Z
    28fa:	71 81       	ldd	r23, Z+1	; 0x01
    28fc:	82 81       	ldd	r24, Z+2	; 0x02
    28fe:	93 81       	ldd	r25, Z+3	; 0x03
    2900:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2904:	dc 01       	movw	r26, r24
    2906:	cb 01       	movw	r24, r22
    2908:	f8 01       	movw	r30, r16
    290a:	91 83       	std	Z+1, r25	; 0x01
    290c:	80 83       	st	Z, r24
    290e:	de 01       	movw	r26, r28
    2910:	a5 56       	subi	r26, 0x65	; 101
    2912:	bf 4f       	sbci	r27, 0xFF	; 255
    2914:	fe 01       	movw	r30, r28
    2916:	e1 56       	subi	r30, 0x61	; 97
    2918:	ff 4f       	sbci	r31, 0xFF	; 255
    291a:	80 81       	ld	r24, Z
    291c:	91 81       	ldd	r25, Z+1	; 0x01
    291e:	11 96       	adiw	r26, 0x01	; 1
    2920:	9c 93       	st	X, r25
    2922:	8e 93       	st	-X, r24
    2924:	fe 01       	movw	r30, r28
    2926:	e5 56       	subi	r30, 0x65	; 101
    2928:	ff 4f       	sbci	r31, 0xFF	; 255
    292a:	80 81       	ld	r24, Z
    292c:	91 81       	ldd	r25, Z+1	; 0x01
    292e:	01 97       	sbiw	r24, 0x01	; 1
    2930:	f1 f7       	brne	.-4      	; 0x292e <main+0x114e>
    2932:	fe 01       	movw	r30, r28
    2934:	e5 56       	subi	r30, 0x65	; 101
    2936:	ff 4f       	sbci	r31, 0xFF	; 255
    2938:	91 83       	std	Z+1, r25	; 0x01
    293a:	80 83       	st	Z, r24
		_delay_ms(1000);
		for (Local_u8Xpos=0;Local_u8Xpos<=15;Local_u8Xpos++)
    293c:	fe 01       	movw	r30, r28
    293e:	e5 5e       	subi	r30, 0xE5	; 229
    2940:	fe 4f       	sbci	r31, 0xFE	; 254
    2942:	10 82       	st	Z, r1
    2944:	cb c3       	rjmp	.+1942   	; 0x30dc <main+0x18fc>
		{
			//CLCD_u8SendStringAtPos(Local_u8Xpos,0,".");
			CLCD_u8WriteSpecialCharacter(5u,Local_u8MyPattern6,Local_u8Xpos,Local_u8Ypos);
    2946:	9e 01       	movw	r18, r28
    2948:	2c 5b       	subi	r18, 0xBC	; 188
    294a:	3e 4f       	sbci	r19, 0xFE	; 254
    294c:	fe 01       	movw	r30, r28
    294e:	e5 5e       	subi	r30, 0xE5	; 229
    2950:	fe 4f       	sbci	r31, 0xFE	; 254
    2952:	de 01       	movw	r26, r28
    2954:	a6 5e       	subi	r26, 0xE6	; 230
    2956:	be 4f       	sbci	r27, 0xFE	; 254
    2958:	85 e0       	ldi	r24, 0x05	; 5
    295a:	b9 01       	movw	r22, r18
    295c:	40 81       	ld	r20, Z
    295e:	2c 91       	ld	r18, X
    2960:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    2964:	fe 01       	movw	r30, r28
    2966:	e9 56       	subi	r30, 0x69	; 105
    2968:	ff 4f       	sbci	r31, 0xFF	; 255
    296a:	80 e0       	ldi	r24, 0x00	; 0
    296c:	90 e0       	ldi	r25, 0x00	; 0
    296e:	a8 e4       	ldi	r26, 0x48	; 72
    2970:	b2 e4       	ldi	r27, 0x42	; 66
    2972:	80 83       	st	Z, r24
    2974:	91 83       	std	Z+1, r25	; 0x01
    2976:	a2 83       	std	Z+2, r26	; 0x02
    2978:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    297a:	8e 01       	movw	r16, r28
    297c:	0d 56       	subi	r16, 0x6D	; 109
    297e:	1f 4f       	sbci	r17, 0xFF	; 255
    2980:	fe 01       	movw	r30, r28
    2982:	e9 56       	subi	r30, 0x69	; 105
    2984:	ff 4f       	sbci	r31, 0xFF	; 255
    2986:	60 81       	ld	r22, Z
    2988:	71 81       	ldd	r23, Z+1	; 0x01
    298a:	82 81       	ldd	r24, Z+2	; 0x02
    298c:	93 81       	ldd	r25, Z+3	; 0x03
    298e:	20 e0       	ldi	r18, 0x00	; 0
    2990:	30 e0       	ldi	r19, 0x00	; 0
    2992:	4a ef       	ldi	r20, 0xFA	; 250
    2994:	54 e4       	ldi	r21, 0x44	; 68
    2996:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    299a:	dc 01       	movw	r26, r24
    299c:	cb 01       	movw	r24, r22
    299e:	f8 01       	movw	r30, r16
    29a0:	80 83       	st	Z, r24
    29a2:	91 83       	std	Z+1, r25	; 0x01
    29a4:	a2 83       	std	Z+2, r26	; 0x02
    29a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29a8:	fe 01       	movw	r30, r28
    29aa:	ed 56       	subi	r30, 0x6D	; 109
    29ac:	ff 4f       	sbci	r31, 0xFF	; 255
    29ae:	60 81       	ld	r22, Z
    29b0:	71 81       	ldd	r23, Z+1	; 0x01
    29b2:	82 81       	ldd	r24, Z+2	; 0x02
    29b4:	93 81       	ldd	r25, Z+3	; 0x03
    29b6:	20 e0       	ldi	r18, 0x00	; 0
    29b8:	30 e0       	ldi	r19, 0x00	; 0
    29ba:	40 e8       	ldi	r20, 0x80	; 128
    29bc:	5f e3       	ldi	r21, 0x3F	; 63
    29be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29c2:	88 23       	and	r24, r24
    29c4:	44 f4       	brge	.+16     	; 0x29d6 <main+0x11f6>
		__ticks = 1;
    29c6:	fe 01       	movw	r30, r28
    29c8:	ef 56       	subi	r30, 0x6F	; 111
    29ca:	ff 4f       	sbci	r31, 0xFF	; 255
    29cc:	81 e0       	ldi	r24, 0x01	; 1
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	91 83       	std	Z+1, r25	; 0x01
    29d2:	80 83       	st	Z, r24
    29d4:	64 c0       	rjmp	.+200    	; 0x2a9e <main+0x12be>
	else if (__tmp > 65535)
    29d6:	fe 01       	movw	r30, r28
    29d8:	ed 56       	subi	r30, 0x6D	; 109
    29da:	ff 4f       	sbci	r31, 0xFF	; 255
    29dc:	60 81       	ld	r22, Z
    29de:	71 81       	ldd	r23, Z+1	; 0x01
    29e0:	82 81       	ldd	r24, Z+2	; 0x02
    29e2:	93 81       	ldd	r25, Z+3	; 0x03
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	3f ef       	ldi	r19, 0xFF	; 255
    29e8:	4f e7       	ldi	r20, 0x7F	; 127
    29ea:	57 e4       	ldi	r21, 0x47	; 71
    29ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29f0:	18 16       	cp	r1, r24
    29f2:	0c f0       	brlt	.+2      	; 0x29f6 <main+0x1216>
    29f4:	43 c0       	rjmp	.+134    	; 0x2a7c <main+0x129c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f6:	fe 01       	movw	r30, r28
    29f8:	e9 56       	subi	r30, 0x69	; 105
    29fa:	ff 4f       	sbci	r31, 0xFF	; 255
    29fc:	60 81       	ld	r22, Z
    29fe:	71 81       	ldd	r23, Z+1	; 0x01
    2a00:	82 81       	ldd	r24, Z+2	; 0x02
    2a02:	93 81       	ldd	r25, Z+3	; 0x03
    2a04:	20 e0       	ldi	r18, 0x00	; 0
    2a06:	30 e0       	ldi	r19, 0x00	; 0
    2a08:	40 e2       	ldi	r20, 0x20	; 32
    2a0a:	51 e4       	ldi	r21, 0x41	; 65
    2a0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a10:	dc 01       	movw	r26, r24
    2a12:	cb 01       	movw	r24, r22
    2a14:	8e 01       	movw	r16, r28
    2a16:	0f 56       	subi	r16, 0x6F	; 111
    2a18:	1f 4f       	sbci	r17, 0xFF	; 255
    2a1a:	bc 01       	movw	r22, r24
    2a1c:	cd 01       	movw	r24, r26
    2a1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a22:	dc 01       	movw	r26, r24
    2a24:	cb 01       	movw	r24, r22
    2a26:	f8 01       	movw	r30, r16
    2a28:	91 83       	std	Z+1, r25	; 0x01
    2a2a:	80 83       	st	Z, r24
    2a2c:	1f c0       	rjmp	.+62     	; 0x2a6c <main+0x128c>
    2a2e:	fe 01       	movw	r30, r28
    2a30:	e1 57       	subi	r30, 0x71	; 113
    2a32:	ff 4f       	sbci	r31, 0xFF	; 255
    2a34:	88 ec       	ldi	r24, 0xC8	; 200
    2a36:	90 e0       	ldi	r25, 0x00	; 0
    2a38:	91 83       	std	Z+1, r25	; 0x01
    2a3a:	80 83       	st	Z, r24
    2a3c:	fe 01       	movw	r30, r28
    2a3e:	e1 57       	subi	r30, 0x71	; 113
    2a40:	ff 4f       	sbci	r31, 0xFF	; 255
    2a42:	80 81       	ld	r24, Z
    2a44:	91 81       	ldd	r25, Z+1	; 0x01
    2a46:	01 97       	sbiw	r24, 0x01	; 1
    2a48:	f1 f7       	brne	.-4      	; 0x2a46 <main+0x1266>
    2a4a:	fe 01       	movw	r30, r28
    2a4c:	e1 57       	subi	r30, 0x71	; 113
    2a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a50:	91 83       	std	Z+1, r25	; 0x01
    2a52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a54:	de 01       	movw	r26, r28
    2a56:	af 56       	subi	r26, 0x6F	; 111
    2a58:	bf 4f       	sbci	r27, 0xFF	; 255
    2a5a:	fe 01       	movw	r30, r28
    2a5c:	ef 56       	subi	r30, 0x6F	; 111
    2a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a60:	80 81       	ld	r24, Z
    2a62:	91 81       	ldd	r25, Z+1	; 0x01
    2a64:	01 97       	sbiw	r24, 0x01	; 1
    2a66:	11 96       	adiw	r26, 0x01	; 1
    2a68:	9c 93       	st	X, r25
    2a6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a6c:	fe 01       	movw	r30, r28
    2a6e:	ef 56       	subi	r30, 0x6F	; 111
    2a70:	ff 4f       	sbci	r31, 0xFF	; 255
    2a72:	80 81       	ld	r24, Z
    2a74:	91 81       	ldd	r25, Z+1	; 0x01
    2a76:	00 97       	sbiw	r24, 0x00	; 0
    2a78:	d1 f6       	brne	.-76     	; 0x2a2e <main+0x124e>
    2a7a:	27 c0       	rjmp	.+78     	; 0x2aca <main+0x12ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a7c:	8e 01       	movw	r16, r28
    2a7e:	0f 56       	subi	r16, 0x6F	; 111
    2a80:	1f 4f       	sbci	r17, 0xFF	; 255
    2a82:	fe 01       	movw	r30, r28
    2a84:	ed 56       	subi	r30, 0x6D	; 109
    2a86:	ff 4f       	sbci	r31, 0xFF	; 255
    2a88:	60 81       	ld	r22, Z
    2a8a:	71 81       	ldd	r23, Z+1	; 0x01
    2a8c:	82 81       	ldd	r24, Z+2	; 0x02
    2a8e:	93 81       	ldd	r25, Z+3	; 0x03
    2a90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a94:	dc 01       	movw	r26, r24
    2a96:	cb 01       	movw	r24, r22
    2a98:	f8 01       	movw	r30, r16
    2a9a:	91 83       	std	Z+1, r25	; 0x01
    2a9c:	80 83       	st	Z, r24
    2a9e:	de 01       	movw	r26, r28
    2aa0:	a3 57       	subi	r26, 0x73	; 115
    2aa2:	bf 4f       	sbci	r27, 0xFF	; 255
    2aa4:	fe 01       	movw	r30, r28
    2aa6:	ef 56       	subi	r30, 0x6F	; 111
    2aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aaa:	80 81       	ld	r24, Z
    2aac:	91 81       	ldd	r25, Z+1	; 0x01
    2aae:	8d 93       	st	X+, r24
    2ab0:	9c 93       	st	X, r25
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e3 57       	subi	r30, 0x73	; 115
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	80 81       	ld	r24, Z
    2aba:	91 81       	ldd	r25, Z+1	; 0x01
    2abc:	01 97       	sbiw	r24, 0x01	; 1
    2abe:	f1 f7       	brne	.-4      	; 0x2abc <main+0x12dc>
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e3 57       	subi	r30, 0x73	; 115
    2ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac6:	91 83       	std	Z+1, r25	; 0x01
    2ac8:	80 83       	st	Z, r24
			_delay_ms(50);
			//	CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
			//	_delay_ms(150);
			CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,Local_u8Xpos,Local_u8Ypos);
    2aca:	9e 01       	movw	r18, r28
    2acc:	24 5e       	subi	r18, 0xE4	; 228
    2ace:	3e 4f       	sbci	r19, 0xFE	; 254
    2ad0:	fe 01       	movw	r30, r28
    2ad2:	e5 5e       	subi	r30, 0xE5	; 229
    2ad4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad6:	de 01       	movw	r26, r28
    2ad8:	a6 5e       	subi	r26, 0xE6	; 230
    2ada:	be 4f       	sbci	r27, 0xFE	; 254
    2adc:	80 e0       	ldi	r24, 0x00	; 0
    2ade:	b9 01       	movw	r22, r18
    2ae0:	40 81       	ld	r20, Z
    2ae2:	2c 91       	ld	r18, X
    2ae4:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    2ae8:	fe 01       	movw	r30, r28
    2aea:	e7 57       	subi	r30, 0x77	; 119
    2aec:	ff 4f       	sbci	r31, 0xFF	; 255
    2aee:	80 e0       	ldi	r24, 0x00	; 0
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	a8 e4       	ldi	r26, 0x48	; 72
    2af4:	b2 e4       	ldi	r27, 0x42	; 66
    2af6:	80 83       	st	Z, r24
    2af8:	91 83       	std	Z+1, r25	; 0x01
    2afa:	a2 83       	std	Z+2, r26	; 0x02
    2afc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2afe:	8e 01       	movw	r16, r28
    2b00:	0b 57       	subi	r16, 0x7B	; 123
    2b02:	1f 4f       	sbci	r17, 0xFF	; 255
    2b04:	fe 01       	movw	r30, r28
    2b06:	e7 57       	subi	r30, 0x77	; 119
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	60 81       	ld	r22, Z
    2b0c:	71 81       	ldd	r23, Z+1	; 0x01
    2b0e:	82 81       	ldd	r24, Z+2	; 0x02
    2b10:	93 81       	ldd	r25, Z+3	; 0x03
    2b12:	20 e0       	ldi	r18, 0x00	; 0
    2b14:	30 e0       	ldi	r19, 0x00	; 0
    2b16:	4a ef       	ldi	r20, 0xFA	; 250
    2b18:	54 e4       	ldi	r21, 0x44	; 68
    2b1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b1e:	dc 01       	movw	r26, r24
    2b20:	cb 01       	movw	r24, r22
    2b22:	f8 01       	movw	r30, r16
    2b24:	80 83       	st	Z, r24
    2b26:	91 83       	std	Z+1, r25	; 0x01
    2b28:	a2 83       	std	Z+2, r26	; 0x02
    2b2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b2c:	fe 01       	movw	r30, r28
    2b2e:	eb 57       	subi	r30, 0x7B	; 123
    2b30:	ff 4f       	sbci	r31, 0xFF	; 255
    2b32:	60 81       	ld	r22, Z
    2b34:	71 81       	ldd	r23, Z+1	; 0x01
    2b36:	82 81       	ldd	r24, Z+2	; 0x02
    2b38:	93 81       	ldd	r25, Z+3	; 0x03
    2b3a:	20 e0       	ldi	r18, 0x00	; 0
    2b3c:	30 e0       	ldi	r19, 0x00	; 0
    2b3e:	40 e8       	ldi	r20, 0x80	; 128
    2b40:	5f e3       	ldi	r21, 0x3F	; 63
    2b42:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b46:	88 23       	and	r24, r24
    2b48:	44 f4       	brge	.+16     	; 0x2b5a <main+0x137a>
		__ticks = 1;
    2b4a:	fe 01       	movw	r30, r28
    2b4c:	ed 57       	subi	r30, 0x7D	; 125
    2b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b50:	81 e0       	ldi	r24, 0x01	; 1
    2b52:	90 e0       	ldi	r25, 0x00	; 0
    2b54:	91 83       	std	Z+1, r25	; 0x01
    2b56:	80 83       	st	Z, r24
    2b58:	64 c0       	rjmp	.+200    	; 0x2c22 <main+0x1442>
	else if (__tmp > 65535)
    2b5a:	fe 01       	movw	r30, r28
    2b5c:	eb 57       	subi	r30, 0x7B	; 123
    2b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b60:	60 81       	ld	r22, Z
    2b62:	71 81       	ldd	r23, Z+1	; 0x01
    2b64:	82 81       	ldd	r24, Z+2	; 0x02
    2b66:	93 81       	ldd	r25, Z+3	; 0x03
    2b68:	20 e0       	ldi	r18, 0x00	; 0
    2b6a:	3f ef       	ldi	r19, 0xFF	; 255
    2b6c:	4f e7       	ldi	r20, 0x7F	; 127
    2b6e:	57 e4       	ldi	r21, 0x47	; 71
    2b70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b74:	18 16       	cp	r1, r24
    2b76:	0c f0       	brlt	.+2      	; 0x2b7a <main+0x139a>
    2b78:	43 c0       	rjmp	.+134    	; 0x2c00 <main+0x1420>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b7a:	fe 01       	movw	r30, r28
    2b7c:	e7 57       	subi	r30, 0x77	; 119
    2b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b80:	60 81       	ld	r22, Z
    2b82:	71 81       	ldd	r23, Z+1	; 0x01
    2b84:	82 81       	ldd	r24, Z+2	; 0x02
    2b86:	93 81       	ldd	r25, Z+3	; 0x03
    2b88:	20 e0       	ldi	r18, 0x00	; 0
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	40 e2       	ldi	r20, 0x20	; 32
    2b8e:	51 e4       	ldi	r21, 0x41	; 65
    2b90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b94:	dc 01       	movw	r26, r24
    2b96:	cb 01       	movw	r24, r22
    2b98:	8e 01       	movw	r16, r28
    2b9a:	0d 57       	subi	r16, 0x7D	; 125
    2b9c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b9e:	bc 01       	movw	r22, r24
    2ba0:	cd 01       	movw	r24, r26
    2ba2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ba6:	dc 01       	movw	r26, r24
    2ba8:	cb 01       	movw	r24, r22
    2baa:	f8 01       	movw	r30, r16
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
    2bb0:	1f c0       	rjmp	.+62     	; 0x2bf0 <main+0x1410>
    2bb2:	fe 01       	movw	r30, r28
    2bb4:	ef 57       	subi	r30, 0x7F	; 127
    2bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb8:	88 ec       	ldi	r24, 0xC8	; 200
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	91 83       	std	Z+1, r25	; 0x01
    2bbe:	80 83       	st	Z, r24
    2bc0:	fe 01       	movw	r30, r28
    2bc2:	ef 57       	subi	r30, 0x7F	; 127
    2bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc6:	80 81       	ld	r24, Z
    2bc8:	91 81       	ldd	r25, Z+1	; 0x01
    2bca:	01 97       	sbiw	r24, 0x01	; 1
    2bcc:	f1 f7       	brne	.-4      	; 0x2bca <main+0x13ea>
    2bce:	fe 01       	movw	r30, r28
    2bd0:	ef 57       	subi	r30, 0x7F	; 127
    2bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd4:	91 83       	std	Z+1, r25	; 0x01
    2bd6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bd8:	de 01       	movw	r26, r28
    2bda:	ad 57       	subi	r26, 0x7D	; 125
    2bdc:	bf 4f       	sbci	r27, 0xFF	; 255
    2bde:	fe 01       	movw	r30, r28
    2be0:	ed 57       	subi	r30, 0x7D	; 125
    2be2:	ff 4f       	sbci	r31, 0xFF	; 255
    2be4:	80 81       	ld	r24, Z
    2be6:	91 81       	ldd	r25, Z+1	; 0x01
    2be8:	01 97       	sbiw	r24, 0x01	; 1
    2bea:	11 96       	adiw	r26, 0x01	; 1
    2bec:	9c 93       	st	X, r25
    2bee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	ed 57       	subi	r30, 0x7D	; 125
    2bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf6:	80 81       	ld	r24, Z
    2bf8:	91 81       	ldd	r25, Z+1	; 0x01
    2bfa:	00 97       	sbiw	r24, 0x00	; 0
    2bfc:	d1 f6       	brne	.-76     	; 0x2bb2 <main+0x13d2>
    2bfe:	27 c0       	rjmp	.+78     	; 0x2c4e <main+0x146e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c00:	8e 01       	movw	r16, r28
    2c02:	0d 57       	subi	r16, 0x7D	; 125
    2c04:	1f 4f       	sbci	r17, 0xFF	; 255
    2c06:	fe 01       	movw	r30, r28
    2c08:	eb 57       	subi	r30, 0x7B	; 123
    2c0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0c:	60 81       	ld	r22, Z
    2c0e:	71 81       	ldd	r23, Z+1	; 0x01
    2c10:	82 81       	ldd	r24, Z+2	; 0x02
    2c12:	93 81       	ldd	r25, Z+3	; 0x03
    2c14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c18:	dc 01       	movw	r26, r24
    2c1a:	cb 01       	movw	r24, r22
    2c1c:	f8 01       	movw	r30, r16
    2c1e:	91 83       	std	Z+1, r25	; 0x01
    2c20:	80 83       	st	Z, r24
    2c22:	de 01       	movw	r26, r28
    2c24:	a1 58       	subi	r26, 0x81	; 129
    2c26:	bf 4f       	sbci	r27, 0xFF	; 255
    2c28:	fe 01       	movw	r30, r28
    2c2a:	ed 57       	subi	r30, 0x7D	; 125
    2c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2e:	80 81       	ld	r24, Z
    2c30:	91 81       	ldd	r25, Z+1	; 0x01
    2c32:	8d 93       	st	X+, r24
    2c34:	9c 93       	st	X, r25
    2c36:	fe 01       	movw	r30, r28
    2c38:	e1 58       	subi	r30, 0x81	; 129
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	80 81       	ld	r24, Z
    2c3e:	91 81       	ldd	r25, Z+1	; 0x01
    2c40:	01 97       	sbiw	r24, 0x01	; 1
    2c42:	f1 f7       	brne	.-4      	; 0x2c40 <main+0x1460>
    2c44:	fe 01       	movw	r30, r28
    2c46:	e1 58       	subi	r30, 0x81	; 129
    2c48:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4a:	91 83       	std	Z+1, r25	; 0x01
    2c4c:	80 83       	st	Z, r24
			_delay_ms(50);
			CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
    2c4e:	fe 01       	movw	r30, r28
    2c50:	e5 5e       	subi	r30, 0xE5	; 229
    2c52:	fe 4f       	sbci	r31, 0xFE	; 254
    2c54:	de 01       	movw	r26, r28
    2c56:	a6 5e       	subi	r26, 0xE6	; 230
    2c58:	be 4f       	sbci	r27, 0xFE	; 254
    2c5a:	80 81       	ld	r24, Z
    2c5c:	6c 91       	ld	r22, X
    2c5e:	41 e0       	ldi	r20, 0x01	; 1
    2c60:	0e 94 4d 08 	call	0x109a	; 0x109a <CLCD_voidClearGide>
    2c64:	fe 01       	movw	r30, r28
    2c66:	e5 58       	subi	r30, 0x85	; 133
    2c68:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6a:	80 e0       	ldi	r24, 0x00	; 0
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	a8 e4       	ldi	r26, 0x48	; 72
    2c70:	b2 e4       	ldi	r27, 0x42	; 66
    2c72:	80 83       	st	Z, r24
    2c74:	91 83       	std	Z+1, r25	; 0x01
    2c76:	a2 83       	std	Z+2, r26	; 0x02
    2c78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c7a:	8e 01       	movw	r16, r28
    2c7c:	09 58       	subi	r16, 0x89	; 137
    2c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c80:	fe 01       	movw	r30, r28
    2c82:	e5 58       	subi	r30, 0x85	; 133
    2c84:	ff 4f       	sbci	r31, 0xFF	; 255
    2c86:	60 81       	ld	r22, Z
    2c88:	71 81       	ldd	r23, Z+1	; 0x01
    2c8a:	82 81       	ldd	r24, Z+2	; 0x02
    2c8c:	93 81       	ldd	r25, Z+3	; 0x03
    2c8e:	20 e0       	ldi	r18, 0x00	; 0
    2c90:	30 e0       	ldi	r19, 0x00	; 0
    2c92:	4a ef       	ldi	r20, 0xFA	; 250
    2c94:	54 e4       	ldi	r21, 0x44	; 68
    2c96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c9a:	dc 01       	movw	r26, r24
    2c9c:	cb 01       	movw	r24, r22
    2c9e:	f8 01       	movw	r30, r16
    2ca0:	80 83       	st	Z, r24
    2ca2:	91 83       	std	Z+1, r25	; 0x01
    2ca4:	a2 83       	std	Z+2, r26	; 0x02
    2ca6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ca8:	fe 01       	movw	r30, r28
    2caa:	e9 58       	subi	r30, 0x89	; 137
    2cac:	ff 4f       	sbci	r31, 0xFF	; 255
    2cae:	60 81       	ld	r22, Z
    2cb0:	71 81       	ldd	r23, Z+1	; 0x01
    2cb2:	82 81       	ldd	r24, Z+2	; 0x02
    2cb4:	93 81       	ldd	r25, Z+3	; 0x03
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	30 e0       	ldi	r19, 0x00	; 0
    2cba:	40 e8       	ldi	r20, 0x80	; 128
    2cbc:	5f e3       	ldi	r21, 0x3F	; 63
    2cbe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cc2:	88 23       	and	r24, r24
    2cc4:	44 f4       	brge	.+16     	; 0x2cd6 <main+0x14f6>
		__ticks = 1;
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	eb 58       	subi	r30, 0x8B	; 139
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	81 e0       	ldi	r24, 0x01	; 1
    2cce:	90 e0       	ldi	r25, 0x00	; 0
    2cd0:	91 83       	std	Z+1, r25	; 0x01
    2cd2:	80 83       	st	Z, r24
    2cd4:	64 c0       	rjmp	.+200    	; 0x2d9e <main+0x15be>
	else if (__tmp > 65535)
    2cd6:	fe 01       	movw	r30, r28
    2cd8:	e9 58       	subi	r30, 0x89	; 137
    2cda:	ff 4f       	sbci	r31, 0xFF	; 255
    2cdc:	60 81       	ld	r22, Z
    2cde:	71 81       	ldd	r23, Z+1	; 0x01
    2ce0:	82 81       	ldd	r24, Z+2	; 0x02
    2ce2:	93 81       	ldd	r25, Z+3	; 0x03
    2ce4:	20 e0       	ldi	r18, 0x00	; 0
    2ce6:	3f ef       	ldi	r19, 0xFF	; 255
    2ce8:	4f e7       	ldi	r20, 0x7F	; 127
    2cea:	57 e4       	ldi	r21, 0x47	; 71
    2cec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cf0:	18 16       	cp	r1, r24
    2cf2:	0c f0       	brlt	.+2      	; 0x2cf6 <main+0x1516>
    2cf4:	43 c0       	rjmp	.+134    	; 0x2d7c <main+0x159c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cf6:	fe 01       	movw	r30, r28
    2cf8:	e5 58       	subi	r30, 0x85	; 133
    2cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfc:	60 81       	ld	r22, Z
    2cfe:	71 81       	ldd	r23, Z+1	; 0x01
    2d00:	82 81       	ldd	r24, Z+2	; 0x02
    2d02:	93 81       	ldd	r25, Z+3	; 0x03
    2d04:	20 e0       	ldi	r18, 0x00	; 0
    2d06:	30 e0       	ldi	r19, 0x00	; 0
    2d08:	40 e2       	ldi	r20, 0x20	; 32
    2d0a:	51 e4       	ldi	r21, 0x41	; 65
    2d0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d10:	dc 01       	movw	r26, r24
    2d12:	cb 01       	movw	r24, r22
    2d14:	8e 01       	movw	r16, r28
    2d16:	0b 58       	subi	r16, 0x8B	; 139
    2d18:	1f 4f       	sbci	r17, 0xFF	; 255
    2d1a:	bc 01       	movw	r22, r24
    2d1c:	cd 01       	movw	r24, r26
    2d1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d22:	dc 01       	movw	r26, r24
    2d24:	cb 01       	movw	r24, r22
    2d26:	f8 01       	movw	r30, r16
    2d28:	91 83       	std	Z+1, r25	; 0x01
    2d2a:	80 83       	st	Z, r24
    2d2c:	1f c0       	rjmp	.+62     	; 0x2d6c <main+0x158c>
    2d2e:	fe 01       	movw	r30, r28
    2d30:	ed 58       	subi	r30, 0x8D	; 141
    2d32:	ff 4f       	sbci	r31, 0xFF	; 255
    2d34:	88 ec       	ldi	r24, 0xC8	; 200
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	91 83       	std	Z+1, r25	; 0x01
    2d3a:	80 83       	st	Z, r24
    2d3c:	fe 01       	movw	r30, r28
    2d3e:	ed 58       	subi	r30, 0x8D	; 141
    2d40:	ff 4f       	sbci	r31, 0xFF	; 255
    2d42:	80 81       	ld	r24, Z
    2d44:	91 81       	ldd	r25, Z+1	; 0x01
    2d46:	01 97       	sbiw	r24, 0x01	; 1
    2d48:	f1 f7       	brne	.-4      	; 0x2d46 <main+0x1566>
    2d4a:	fe 01       	movw	r30, r28
    2d4c:	ed 58       	subi	r30, 0x8D	; 141
    2d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d50:	91 83       	std	Z+1, r25	; 0x01
    2d52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d54:	de 01       	movw	r26, r28
    2d56:	ab 58       	subi	r26, 0x8B	; 139
    2d58:	bf 4f       	sbci	r27, 0xFF	; 255
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	eb 58       	subi	r30, 0x8B	; 139
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	80 81       	ld	r24, Z
    2d62:	91 81       	ldd	r25, Z+1	; 0x01
    2d64:	01 97       	sbiw	r24, 0x01	; 1
    2d66:	11 96       	adiw	r26, 0x01	; 1
    2d68:	9c 93       	st	X, r25
    2d6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d6c:	fe 01       	movw	r30, r28
    2d6e:	eb 58       	subi	r30, 0x8B	; 139
    2d70:	ff 4f       	sbci	r31, 0xFF	; 255
    2d72:	80 81       	ld	r24, Z
    2d74:	91 81       	ldd	r25, Z+1	; 0x01
    2d76:	00 97       	sbiw	r24, 0x00	; 0
    2d78:	d1 f6       	brne	.-76     	; 0x2d2e <main+0x154e>
    2d7a:	27 c0       	rjmp	.+78     	; 0x2dca <main+0x15ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d7c:	8e 01       	movw	r16, r28
    2d7e:	0b 58       	subi	r16, 0x8B	; 139
    2d80:	1f 4f       	sbci	r17, 0xFF	; 255
    2d82:	fe 01       	movw	r30, r28
    2d84:	e9 58       	subi	r30, 0x89	; 137
    2d86:	ff 4f       	sbci	r31, 0xFF	; 255
    2d88:	60 81       	ld	r22, Z
    2d8a:	71 81       	ldd	r23, Z+1	; 0x01
    2d8c:	82 81       	ldd	r24, Z+2	; 0x02
    2d8e:	93 81       	ldd	r25, Z+3	; 0x03
    2d90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d94:	dc 01       	movw	r26, r24
    2d96:	cb 01       	movw	r24, r22
    2d98:	f8 01       	movw	r30, r16
    2d9a:	91 83       	std	Z+1, r25	; 0x01
    2d9c:	80 83       	st	Z, r24
    2d9e:	de 01       	movw	r26, r28
    2da0:	af 58       	subi	r26, 0x8F	; 143
    2da2:	bf 4f       	sbci	r27, 0xFF	; 255
    2da4:	fe 01       	movw	r30, r28
    2da6:	eb 58       	subi	r30, 0x8B	; 139
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	80 81       	ld	r24, Z
    2dac:	91 81       	ldd	r25, Z+1	; 0x01
    2dae:	8d 93       	st	X+, r24
    2db0:	9c 93       	st	X, r25
    2db2:	fe 01       	movw	r30, r28
    2db4:	ef 58       	subi	r30, 0x8F	; 143
    2db6:	ff 4f       	sbci	r31, 0xFF	; 255
    2db8:	80 81       	ld	r24, Z
    2dba:	91 81       	ldd	r25, Z+1	; 0x01
    2dbc:	01 97       	sbiw	r24, 0x01	; 1
    2dbe:	f1 f7       	brne	.-4      	; 0x2dbc <main+0x15dc>
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	ef 58       	subi	r30, 0x8F	; 143
    2dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc6:	91 83       	std	Z+1, r25	; 0x01
    2dc8:	80 83       	st	Z, r24
			_delay_ms(50);

			CLCD_u8WriteSpecialCharacter(1u,Local_u8MyPattern2,Local_u8Xpos,Local_u8Ypos);
    2dca:	9e 01       	movw	r18, r28
    2dcc:	2c 5d       	subi	r18, 0xDC	; 220
    2dce:	3e 4f       	sbci	r19, 0xFE	; 254
    2dd0:	fe 01       	movw	r30, r28
    2dd2:	e5 5e       	subi	r30, 0xE5	; 229
    2dd4:	fe 4f       	sbci	r31, 0xFE	; 254
    2dd6:	de 01       	movw	r26, r28
    2dd8:	a6 5e       	subi	r26, 0xE6	; 230
    2dda:	be 4f       	sbci	r27, 0xFE	; 254
    2ddc:	81 e0       	ldi	r24, 0x01	; 1
    2dde:	b9 01       	movw	r22, r18
    2de0:	40 81       	ld	r20, Z
    2de2:	2c 91       	ld	r18, X
    2de4:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    2de8:	fe 01       	movw	r30, r28
    2dea:	e3 59       	subi	r30, 0x93	; 147
    2dec:	ff 4f       	sbci	r31, 0xFF	; 255
    2dee:	80 e0       	ldi	r24, 0x00	; 0
    2df0:	90 e0       	ldi	r25, 0x00	; 0
    2df2:	a8 e4       	ldi	r26, 0x48	; 72
    2df4:	b2 e4       	ldi	r27, 0x42	; 66
    2df6:	80 83       	st	Z, r24
    2df8:	91 83       	std	Z+1, r25	; 0x01
    2dfa:	a2 83       	std	Z+2, r26	; 0x02
    2dfc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dfe:	8e 01       	movw	r16, r28
    2e00:	07 59       	subi	r16, 0x97	; 151
    2e02:	1f 4f       	sbci	r17, 0xFF	; 255
    2e04:	fe 01       	movw	r30, r28
    2e06:	e3 59       	subi	r30, 0x93	; 147
    2e08:	ff 4f       	sbci	r31, 0xFF	; 255
    2e0a:	60 81       	ld	r22, Z
    2e0c:	71 81       	ldd	r23, Z+1	; 0x01
    2e0e:	82 81       	ldd	r24, Z+2	; 0x02
    2e10:	93 81       	ldd	r25, Z+3	; 0x03
    2e12:	20 e0       	ldi	r18, 0x00	; 0
    2e14:	30 e0       	ldi	r19, 0x00	; 0
    2e16:	4a ef       	ldi	r20, 0xFA	; 250
    2e18:	54 e4       	ldi	r21, 0x44	; 68
    2e1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e1e:	dc 01       	movw	r26, r24
    2e20:	cb 01       	movw	r24, r22
    2e22:	f8 01       	movw	r30, r16
    2e24:	80 83       	st	Z, r24
    2e26:	91 83       	std	Z+1, r25	; 0x01
    2e28:	a2 83       	std	Z+2, r26	; 0x02
    2e2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	e7 59       	subi	r30, 0x97	; 151
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	60 81       	ld	r22, Z
    2e34:	71 81       	ldd	r23, Z+1	; 0x01
    2e36:	82 81       	ldd	r24, Z+2	; 0x02
    2e38:	93 81       	ldd	r25, Z+3	; 0x03
    2e3a:	20 e0       	ldi	r18, 0x00	; 0
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	40 e8       	ldi	r20, 0x80	; 128
    2e40:	5f e3       	ldi	r21, 0x3F	; 63
    2e42:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e46:	88 23       	and	r24, r24
    2e48:	44 f4       	brge	.+16     	; 0x2e5a <main+0x167a>
		__ticks = 1;
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	e9 59       	subi	r30, 0x99	; 153
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	81 e0       	ldi	r24, 0x01	; 1
    2e52:	90 e0       	ldi	r25, 0x00	; 0
    2e54:	91 83       	std	Z+1, r25	; 0x01
    2e56:	80 83       	st	Z, r24
    2e58:	64 c0       	rjmp	.+200    	; 0x2f22 <main+0x1742>
	else if (__tmp > 65535)
    2e5a:	fe 01       	movw	r30, r28
    2e5c:	e7 59       	subi	r30, 0x97	; 151
    2e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e60:	60 81       	ld	r22, Z
    2e62:	71 81       	ldd	r23, Z+1	; 0x01
    2e64:	82 81       	ldd	r24, Z+2	; 0x02
    2e66:	93 81       	ldd	r25, Z+3	; 0x03
    2e68:	20 e0       	ldi	r18, 0x00	; 0
    2e6a:	3f ef       	ldi	r19, 0xFF	; 255
    2e6c:	4f e7       	ldi	r20, 0x7F	; 127
    2e6e:	57 e4       	ldi	r21, 0x47	; 71
    2e70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e74:	18 16       	cp	r1, r24
    2e76:	0c f0       	brlt	.+2      	; 0x2e7a <main+0x169a>
    2e78:	43 c0       	rjmp	.+134    	; 0x2f00 <main+0x1720>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e7a:	fe 01       	movw	r30, r28
    2e7c:	e3 59       	subi	r30, 0x93	; 147
    2e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e80:	60 81       	ld	r22, Z
    2e82:	71 81       	ldd	r23, Z+1	; 0x01
    2e84:	82 81       	ldd	r24, Z+2	; 0x02
    2e86:	93 81       	ldd	r25, Z+3	; 0x03
    2e88:	20 e0       	ldi	r18, 0x00	; 0
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	40 e2       	ldi	r20, 0x20	; 32
    2e8e:	51 e4       	ldi	r21, 0x41	; 65
    2e90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e94:	dc 01       	movw	r26, r24
    2e96:	cb 01       	movw	r24, r22
    2e98:	8e 01       	movw	r16, r28
    2e9a:	09 59       	subi	r16, 0x99	; 153
    2e9c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e9e:	bc 01       	movw	r22, r24
    2ea0:	cd 01       	movw	r24, r26
    2ea2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ea6:	dc 01       	movw	r26, r24
    2ea8:	cb 01       	movw	r24, r22
    2eaa:	f8 01       	movw	r30, r16
    2eac:	91 83       	std	Z+1, r25	; 0x01
    2eae:	80 83       	st	Z, r24
    2eb0:	1f c0       	rjmp	.+62     	; 0x2ef0 <main+0x1710>
    2eb2:	fe 01       	movw	r30, r28
    2eb4:	eb 59       	subi	r30, 0x9B	; 155
    2eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb8:	88 ec       	ldi	r24, 0xC8	; 200
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	91 83       	std	Z+1, r25	; 0x01
    2ebe:	80 83       	st	Z, r24
    2ec0:	fe 01       	movw	r30, r28
    2ec2:	eb 59       	subi	r30, 0x9B	; 155
    2ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec6:	80 81       	ld	r24, Z
    2ec8:	91 81       	ldd	r25, Z+1	; 0x01
    2eca:	01 97       	sbiw	r24, 0x01	; 1
    2ecc:	f1 f7       	brne	.-4      	; 0x2eca <main+0x16ea>
    2ece:	fe 01       	movw	r30, r28
    2ed0:	eb 59       	subi	r30, 0x9B	; 155
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	91 83       	std	Z+1, r25	; 0x01
    2ed6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ed8:	de 01       	movw	r26, r28
    2eda:	a9 59       	subi	r26, 0x99	; 153
    2edc:	bf 4f       	sbci	r27, 0xFF	; 255
    2ede:	fe 01       	movw	r30, r28
    2ee0:	e9 59       	subi	r30, 0x99	; 153
    2ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee4:	80 81       	ld	r24, Z
    2ee6:	91 81       	ldd	r25, Z+1	; 0x01
    2ee8:	01 97       	sbiw	r24, 0x01	; 1
    2eea:	11 96       	adiw	r26, 0x01	; 1
    2eec:	9c 93       	st	X, r25
    2eee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ef0:	fe 01       	movw	r30, r28
    2ef2:	e9 59       	subi	r30, 0x99	; 153
    2ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef6:	80 81       	ld	r24, Z
    2ef8:	91 81       	ldd	r25, Z+1	; 0x01
    2efa:	00 97       	sbiw	r24, 0x00	; 0
    2efc:	d1 f6       	brne	.-76     	; 0x2eb2 <main+0x16d2>
    2efe:	27 c0       	rjmp	.+78     	; 0x2f4e <main+0x176e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f00:	8e 01       	movw	r16, r28
    2f02:	09 59       	subi	r16, 0x99	; 153
    2f04:	1f 4f       	sbci	r17, 0xFF	; 255
    2f06:	fe 01       	movw	r30, r28
    2f08:	e7 59       	subi	r30, 0x97	; 151
    2f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0c:	60 81       	ld	r22, Z
    2f0e:	71 81       	ldd	r23, Z+1	; 0x01
    2f10:	82 81       	ldd	r24, Z+2	; 0x02
    2f12:	93 81       	ldd	r25, Z+3	; 0x03
    2f14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	f8 01       	movw	r30, r16
    2f1e:	91 83       	std	Z+1, r25	; 0x01
    2f20:	80 83       	st	Z, r24
    2f22:	de 01       	movw	r26, r28
    2f24:	ad 59       	subi	r26, 0x9D	; 157
    2f26:	bf 4f       	sbci	r27, 0xFF	; 255
    2f28:	fe 01       	movw	r30, r28
    2f2a:	e9 59       	subi	r30, 0x99	; 153
    2f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2e:	80 81       	ld	r24, Z
    2f30:	91 81       	ldd	r25, Z+1	; 0x01
    2f32:	8d 93       	st	X+, r24
    2f34:	9c 93       	st	X, r25
    2f36:	fe 01       	movw	r30, r28
    2f38:	ed 59       	subi	r30, 0x9D	; 157
    2f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3c:	80 81       	ld	r24, Z
    2f3e:	91 81       	ldd	r25, Z+1	; 0x01
    2f40:	01 97       	sbiw	r24, 0x01	; 1
    2f42:	f1 f7       	brne	.-4      	; 0x2f40 <main+0x1760>
    2f44:	fe 01       	movw	r30, r28
    2f46:	ed 59       	subi	r30, 0x9D	; 157
    2f48:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4a:	91 83       	std	Z+1, r25	; 0x01
    2f4c:	80 83       	st	Z, r24
			_delay_ms(50);
			CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
    2f4e:	fe 01       	movw	r30, r28
    2f50:	e5 5e       	subi	r30, 0xE5	; 229
    2f52:	fe 4f       	sbci	r31, 0xFE	; 254
    2f54:	de 01       	movw	r26, r28
    2f56:	a6 5e       	subi	r26, 0xE6	; 230
    2f58:	be 4f       	sbci	r27, 0xFE	; 254
    2f5a:	80 81       	ld	r24, Z
    2f5c:	6c 91       	ld	r22, X
    2f5e:	41 e0       	ldi	r20, 0x01	; 1
    2f60:	0e 94 4d 08 	call	0x109a	; 0x109a <CLCD_voidClearGide>
    2f64:	fe 01       	movw	r30, r28
    2f66:	e1 5a       	subi	r30, 0xA1	; 161
    2f68:	ff 4f       	sbci	r31, 0xFF	; 255
    2f6a:	80 e0       	ldi	r24, 0x00	; 0
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	a8 e4       	ldi	r26, 0x48	; 72
    2f70:	b2 e4       	ldi	r27, 0x42	; 66
    2f72:	80 83       	st	Z, r24
    2f74:	91 83       	std	Z+1, r25	; 0x01
    2f76:	a2 83       	std	Z+2, r26	; 0x02
    2f78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f7a:	8e 01       	movw	r16, r28
    2f7c:	05 5a       	subi	r16, 0xA5	; 165
    2f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f80:	fe 01       	movw	r30, r28
    2f82:	e1 5a       	subi	r30, 0xA1	; 161
    2f84:	ff 4f       	sbci	r31, 0xFF	; 255
    2f86:	60 81       	ld	r22, Z
    2f88:	71 81       	ldd	r23, Z+1	; 0x01
    2f8a:	82 81       	ldd	r24, Z+2	; 0x02
    2f8c:	93 81       	ldd	r25, Z+3	; 0x03
    2f8e:	20 e0       	ldi	r18, 0x00	; 0
    2f90:	30 e0       	ldi	r19, 0x00	; 0
    2f92:	4a ef       	ldi	r20, 0xFA	; 250
    2f94:	54 e4       	ldi	r21, 0x44	; 68
    2f96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f9a:	dc 01       	movw	r26, r24
    2f9c:	cb 01       	movw	r24, r22
    2f9e:	f8 01       	movw	r30, r16
    2fa0:	80 83       	st	Z, r24
    2fa2:	91 83       	std	Z+1, r25	; 0x01
    2fa4:	a2 83       	std	Z+2, r26	; 0x02
    2fa6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e5 5a       	subi	r30, 0xA5	; 165
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	60 81       	ld	r22, Z
    2fb0:	71 81       	ldd	r23, Z+1	; 0x01
    2fb2:	82 81       	ldd	r24, Z+2	; 0x02
    2fb4:	93 81       	ldd	r25, Z+3	; 0x03
    2fb6:	20 e0       	ldi	r18, 0x00	; 0
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	40 e8       	ldi	r20, 0x80	; 128
    2fbc:	5f e3       	ldi	r21, 0x3F	; 63
    2fbe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fc2:	88 23       	and	r24, r24
    2fc4:	44 f4       	brge	.+16     	; 0x2fd6 <main+0x17f6>
		__ticks = 1;
    2fc6:	fe 01       	movw	r30, r28
    2fc8:	e7 5a       	subi	r30, 0xA7	; 167
    2fca:	ff 4f       	sbci	r31, 0xFF	; 255
    2fcc:	81 e0       	ldi	r24, 0x01	; 1
    2fce:	90 e0       	ldi	r25, 0x00	; 0
    2fd0:	91 83       	std	Z+1, r25	; 0x01
    2fd2:	80 83       	st	Z, r24
    2fd4:	64 c0       	rjmp	.+200    	; 0x309e <main+0x18be>
	else if (__tmp > 65535)
    2fd6:	fe 01       	movw	r30, r28
    2fd8:	e5 5a       	subi	r30, 0xA5	; 165
    2fda:	ff 4f       	sbci	r31, 0xFF	; 255
    2fdc:	60 81       	ld	r22, Z
    2fde:	71 81       	ldd	r23, Z+1	; 0x01
    2fe0:	82 81       	ldd	r24, Z+2	; 0x02
    2fe2:	93 81       	ldd	r25, Z+3	; 0x03
    2fe4:	20 e0       	ldi	r18, 0x00	; 0
    2fe6:	3f ef       	ldi	r19, 0xFF	; 255
    2fe8:	4f e7       	ldi	r20, 0x7F	; 127
    2fea:	57 e4       	ldi	r21, 0x47	; 71
    2fec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ff0:	18 16       	cp	r1, r24
    2ff2:	0c f0       	brlt	.+2      	; 0x2ff6 <main+0x1816>
    2ff4:	43 c0       	rjmp	.+134    	; 0x307c <main+0x189c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ff6:	fe 01       	movw	r30, r28
    2ff8:	e1 5a       	subi	r30, 0xA1	; 161
    2ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffc:	60 81       	ld	r22, Z
    2ffe:	71 81       	ldd	r23, Z+1	; 0x01
    3000:	82 81       	ldd	r24, Z+2	; 0x02
    3002:	93 81       	ldd	r25, Z+3	; 0x03
    3004:	20 e0       	ldi	r18, 0x00	; 0
    3006:	30 e0       	ldi	r19, 0x00	; 0
    3008:	40 e2       	ldi	r20, 0x20	; 32
    300a:	51 e4       	ldi	r21, 0x41	; 65
    300c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3010:	dc 01       	movw	r26, r24
    3012:	cb 01       	movw	r24, r22
    3014:	8e 01       	movw	r16, r28
    3016:	07 5a       	subi	r16, 0xA7	; 167
    3018:	1f 4f       	sbci	r17, 0xFF	; 255
    301a:	bc 01       	movw	r22, r24
    301c:	cd 01       	movw	r24, r26
    301e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3022:	dc 01       	movw	r26, r24
    3024:	cb 01       	movw	r24, r22
    3026:	f8 01       	movw	r30, r16
    3028:	91 83       	std	Z+1, r25	; 0x01
    302a:	80 83       	st	Z, r24
    302c:	1f c0       	rjmp	.+62     	; 0x306c <main+0x188c>
    302e:	fe 01       	movw	r30, r28
    3030:	e9 5a       	subi	r30, 0xA9	; 169
    3032:	ff 4f       	sbci	r31, 0xFF	; 255
    3034:	88 ec       	ldi	r24, 0xC8	; 200
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	91 83       	std	Z+1, r25	; 0x01
    303a:	80 83       	st	Z, r24
    303c:	fe 01       	movw	r30, r28
    303e:	e9 5a       	subi	r30, 0xA9	; 169
    3040:	ff 4f       	sbci	r31, 0xFF	; 255
    3042:	80 81       	ld	r24, Z
    3044:	91 81       	ldd	r25, Z+1	; 0x01
    3046:	01 97       	sbiw	r24, 0x01	; 1
    3048:	f1 f7       	brne	.-4      	; 0x3046 <main+0x1866>
    304a:	fe 01       	movw	r30, r28
    304c:	e9 5a       	subi	r30, 0xA9	; 169
    304e:	ff 4f       	sbci	r31, 0xFF	; 255
    3050:	91 83       	std	Z+1, r25	; 0x01
    3052:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3054:	de 01       	movw	r26, r28
    3056:	a7 5a       	subi	r26, 0xA7	; 167
    3058:	bf 4f       	sbci	r27, 0xFF	; 255
    305a:	fe 01       	movw	r30, r28
    305c:	e7 5a       	subi	r30, 0xA7	; 167
    305e:	ff 4f       	sbci	r31, 0xFF	; 255
    3060:	80 81       	ld	r24, Z
    3062:	91 81       	ldd	r25, Z+1	; 0x01
    3064:	01 97       	sbiw	r24, 0x01	; 1
    3066:	11 96       	adiw	r26, 0x01	; 1
    3068:	9c 93       	st	X, r25
    306a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    306c:	fe 01       	movw	r30, r28
    306e:	e7 5a       	subi	r30, 0xA7	; 167
    3070:	ff 4f       	sbci	r31, 0xFF	; 255
    3072:	80 81       	ld	r24, Z
    3074:	91 81       	ldd	r25, Z+1	; 0x01
    3076:	00 97       	sbiw	r24, 0x00	; 0
    3078:	d1 f6       	brne	.-76     	; 0x302e <main+0x184e>
    307a:	27 c0       	rjmp	.+78     	; 0x30ca <main+0x18ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    307c:	8e 01       	movw	r16, r28
    307e:	07 5a       	subi	r16, 0xA7	; 167
    3080:	1f 4f       	sbci	r17, 0xFF	; 255
    3082:	fe 01       	movw	r30, r28
    3084:	e5 5a       	subi	r30, 0xA5	; 165
    3086:	ff 4f       	sbci	r31, 0xFF	; 255
    3088:	60 81       	ld	r22, Z
    308a:	71 81       	ldd	r23, Z+1	; 0x01
    308c:	82 81       	ldd	r24, Z+2	; 0x02
    308e:	93 81       	ldd	r25, Z+3	; 0x03
    3090:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3094:	dc 01       	movw	r26, r24
    3096:	cb 01       	movw	r24, r22
    3098:	f8 01       	movw	r30, r16
    309a:	91 83       	std	Z+1, r25	; 0x01
    309c:	80 83       	st	Z, r24
    309e:	de 01       	movw	r26, r28
    30a0:	ab 5a       	subi	r26, 0xAB	; 171
    30a2:	bf 4f       	sbci	r27, 0xFF	; 255
    30a4:	fe 01       	movw	r30, r28
    30a6:	e7 5a       	subi	r30, 0xA7	; 167
    30a8:	ff 4f       	sbci	r31, 0xFF	; 255
    30aa:	80 81       	ld	r24, Z
    30ac:	91 81       	ldd	r25, Z+1	; 0x01
    30ae:	8d 93       	st	X+, r24
    30b0:	9c 93       	st	X, r25
    30b2:	fe 01       	movw	r30, r28
    30b4:	eb 5a       	subi	r30, 0xAB	; 171
    30b6:	ff 4f       	sbci	r31, 0xFF	; 255
    30b8:	80 81       	ld	r24, Z
    30ba:	91 81       	ldd	r25, Z+1	; 0x01
    30bc:	01 97       	sbiw	r24, 0x01	; 1
    30be:	f1 f7       	brne	.-4      	; 0x30bc <main+0x18dc>
    30c0:	fe 01       	movw	r30, r28
    30c2:	eb 5a       	subi	r30, 0xAB	; 171
    30c4:	ff 4f       	sbci	r31, 0xFF	; 255
    30c6:	91 83       	std	Z+1, r25	; 0x01
    30c8:	80 83       	st	Z, r24

		/*Display clear */
		CLCD_voidSendCommand(1);
		CLCD_u8SendStringAtPos(0u,1u,"I PLAY FOOTBAL");
		_delay_ms(1000);
		for (Local_u8Xpos=0;Local_u8Xpos<=15;Local_u8Xpos++)
    30ca:	de 01       	movw	r26, r28
    30cc:	a5 5e       	subi	r26, 0xE5	; 229
    30ce:	be 4f       	sbci	r27, 0xFE	; 254
    30d0:	fe 01       	movw	r30, r28
    30d2:	e5 5e       	subi	r30, 0xE5	; 229
    30d4:	fe 4f       	sbci	r31, 0xFE	; 254
    30d6:	80 81       	ld	r24, Z
    30d8:	8f 5f       	subi	r24, 0xFF	; 255
    30da:	8c 93       	st	X, r24
    30dc:	fe 01       	movw	r30, r28
    30de:	e5 5e       	subi	r30, 0xE5	; 229
    30e0:	fe 4f       	sbci	r31, 0xFE	; 254
    30e2:	80 81       	ld	r24, Z
    30e4:	80 31       	cpi	r24, 0x10	; 16
    30e6:	08 f4       	brcc	.+2      	; 0x30ea <main+0x190a>
    30e8:	2e cc       	rjmp	.-1956   	; 0x2946 <main+0x1166>


		}

		/*Display clear */
		CLCD_voidSendCommand(1);
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
		CLCD_u8SendStringAtPos(0u,1u,"DONT KILL ME");
    30f0:	25 e9       	ldi	r18, 0x95	; 149
    30f2:	30 e0       	ldi	r19, 0x00	; 0
    30f4:	80 e0       	ldi	r24, 0x00	; 0
    30f6:	61 e0       	ldi	r22, 0x01	; 1
    30f8:	a9 01       	movw	r20, r18
    30fa:	0e 94 6d 08 	call	0x10da	; 0x10da <CLCD_u8SendStringAtPos>
    30fe:	fe 01       	movw	r30, r28
    3100:	ef 5a       	subi	r30, 0xAF	; 175
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	80 e0       	ldi	r24, 0x00	; 0
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	aa e7       	ldi	r26, 0x7A	; 122
    310a:	b4 e4       	ldi	r27, 0x44	; 68
    310c:	80 83       	st	Z, r24
    310e:	91 83       	std	Z+1, r25	; 0x01
    3110:	a2 83       	std	Z+2, r26	; 0x02
    3112:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3114:	8e 01       	movw	r16, r28
    3116:	03 5b       	subi	r16, 0xB3	; 179
    3118:	1f 4f       	sbci	r17, 0xFF	; 255
    311a:	fe 01       	movw	r30, r28
    311c:	ef 5a       	subi	r30, 0xAF	; 175
    311e:	ff 4f       	sbci	r31, 0xFF	; 255
    3120:	60 81       	ld	r22, Z
    3122:	71 81       	ldd	r23, Z+1	; 0x01
    3124:	82 81       	ldd	r24, Z+2	; 0x02
    3126:	93 81       	ldd	r25, Z+3	; 0x03
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	30 e0       	ldi	r19, 0x00	; 0
    312c:	4a ef       	ldi	r20, 0xFA	; 250
    312e:	54 e4       	ldi	r21, 0x44	; 68
    3130:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3134:	dc 01       	movw	r26, r24
    3136:	cb 01       	movw	r24, r22
    3138:	f8 01       	movw	r30, r16
    313a:	80 83       	st	Z, r24
    313c:	91 83       	std	Z+1, r25	; 0x01
    313e:	a2 83       	std	Z+2, r26	; 0x02
    3140:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3142:	fe 01       	movw	r30, r28
    3144:	e3 5b       	subi	r30, 0xB3	; 179
    3146:	ff 4f       	sbci	r31, 0xFF	; 255
    3148:	60 81       	ld	r22, Z
    314a:	71 81       	ldd	r23, Z+1	; 0x01
    314c:	82 81       	ldd	r24, Z+2	; 0x02
    314e:	93 81       	ldd	r25, Z+3	; 0x03
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	40 e8       	ldi	r20, 0x80	; 128
    3156:	5f e3       	ldi	r21, 0x3F	; 63
    3158:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    315c:	88 23       	and	r24, r24
    315e:	44 f4       	brge	.+16     	; 0x3170 <main+0x1990>
		__ticks = 1;
    3160:	fe 01       	movw	r30, r28
    3162:	e5 5b       	subi	r30, 0xB5	; 181
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	90 e0       	ldi	r25, 0x00	; 0
    316a:	91 83       	std	Z+1, r25	; 0x01
    316c:	80 83       	st	Z, r24
    316e:	64 c0       	rjmp	.+200    	; 0x3238 <main+0x1a58>
	else if (__tmp > 65535)
    3170:	fe 01       	movw	r30, r28
    3172:	e3 5b       	subi	r30, 0xB3	; 179
    3174:	ff 4f       	sbci	r31, 0xFF	; 255
    3176:	60 81       	ld	r22, Z
    3178:	71 81       	ldd	r23, Z+1	; 0x01
    317a:	82 81       	ldd	r24, Z+2	; 0x02
    317c:	93 81       	ldd	r25, Z+3	; 0x03
    317e:	20 e0       	ldi	r18, 0x00	; 0
    3180:	3f ef       	ldi	r19, 0xFF	; 255
    3182:	4f e7       	ldi	r20, 0x7F	; 127
    3184:	57 e4       	ldi	r21, 0x47	; 71
    3186:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    318a:	18 16       	cp	r1, r24
    318c:	0c f0       	brlt	.+2      	; 0x3190 <main+0x19b0>
    318e:	43 c0       	rjmp	.+134    	; 0x3216 <main+0x1a36>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3190:	fe 01       	movw	r30, r28
    3192:	ef 5a       	subi	r30, 0xAF	; 175
    3194:	ff 4f       	sbci	r31, 0xFF	; 255
    3196:	60 81       	ld	r22, Z
    3198:	71 81       	ldd	r23, Z+1	; 0x01
    319a:	82 81       	ldd	r24, Z+2	; 0x02
    319c:	93 81       	ldd	r25, Z+3	; 0x03
    319e:	20 e0       	ldi	r18, 0x00	; 0
    31a0:	30 e0       	ldi	r19, 0x00	; 0
    31a2:	40 e2       	ldi	r20, 0x20	; 32
    31a4:	51 e4       	ldi	r21, 0x41	; 65
    31a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31aa:	dc 01       	movw	r26, r24
    31ac:	cb 01       	movw	r24, r22
    31ae:	8e 01       	movw	r16, r28
    31b0:	05 5b       	subi	r16, 0xB5	; 181
    31b2:	1f 4f       	sbci	r17, 0xFF	; 255
    31b4:	bc 01       	movw	r22, r24
    31b6:	cd 01       	movw	r24, r26
    31b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31bc:	dc 01       	movw	r26, r24
    31be:	cb 01       	movw	r24, r22
    31c0:	f8 01       	movw	r30, r16
    31c2:	91 83       	std	Z+1, r25	; 0x01
    31c4:	80 83       	st	Z, r24
    31c6:	1f c0       	rjmp	.+62     	; 0x3206 <main+0x1a26>
    31c8:	fe 01       	movw	r30, r28
    31ca:	e7 5b       	subi	r30, 0xB7	; 183
    31cc:	ff 4f       	sbci	r31, 0xFF	; 255
    31ce:	88 ec       	ldi	r24, 0xC8	; 200
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	91 83       	std	Z+1, r25	; 0x01
    31d4:	80 83       	st	Z, r24
    31d6:	fe 01       	movw	r30, r28
    31d8:	e7 5b       	subi	r30, 0xB7	; 183
    31da:	ff 4f       	sbci	r31, 0xFF	; 255
    31dc:	80 81       	ld	r24, Z
    31de:	91 81       	ldd	r25, Z+1	; 0x01
    31e0:	01 97       	sbiw	r24, 0x01	; 1
    31e2:	f1 f7       	brne	.-4      	; 0x31e0 <main+0x1a00>
    31e4:	fe 01       	movw	r30, r28
    31e6:	e7 5b       	subi	r30, 0xB7	; 183
    31e8:	ff 4f       	sbci	r31, 0xFF	; 255
    31ea:	91 83       	std	Z+1, r25	; 0x01
    31ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ee:	de 01       	movw	r26, r28
    31f0:	a5 5b       	subi	r26, 0xB5	; 181
    31f2:	bf 4f       	sbci	r27, 0xFF	; 255
    31f4:	fe 01       	movw	r30, r28
    31f6:	e5 5b       	subi	r30, 0xB5	; 181
    31f8:	ff 4f       	sbci	r31, 0xFF	; 255
    31fa:	80 81       	ld	r24, Z
    31fc:	91 81       	ldd	r25, Z+1	; 0x01
    31fe:	01 97       	sbiw	r24, 0x01	; 1
    3200:	11 96       	adiw	r26, 0x01	; 1
    3202:	9c 93       	st	X, r25
    3204:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3206:	fe 01       	movw	r30, r28
    3208:	e5 5b       	subi	r30, 0xB5	; 181
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	80 81       	ld	r24, Z
    320e:	91 81       	ldd	r25, Z+1	; 0x01
    3210:	00 97       	sbiw	r24, 0x00	; 0
    3212:	d1 f6       	brne	.-76     	; 0x31c8 <main+0x19e8>
    3214:	27 c0       	rjmp	.+78     	; 0x3264 <main+0x1a84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3216:	8e 01       	movw	r16, r28
    3218:	05 5b       	subi	r16, 0xB5	; 181
    321a:	1f 4f       	sbci	r17, 0xFF	; 255
    321c:	fe 01       	movw	r30, r28
    321e:	e3 5b       	subi	r30, 0xB3	; 179
    3220:	ff 4f       	sbci	r31, 0xFF	; 255
    3222:	60 81       	ld	r22, Z
    3224:	71 81       	ldd	r23, Z+1	; 0x01
    3226:	82 81       	ldd	r24, Z+2	; 0x02
    3228:	93 81       	ldd	r25, Z+3	; 0x03
    322a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    322e:	dc 01       	movw	r26, r24
    3230:	cb 01       	movw	r24, r22
    3232:	f8 01       	movw	r30, r16
    3234:	91 83       	std	Z+1, r25	; 0x01
    3236:	80 83       	st	Z, r24
    3238:	de 01       	movw	r26, r28
    323a:	a9 5b       	subi	r26, 0xB9	; 185
    323c:	bf 4f       	sbci	r27, 0xFF	; 255
    323e:	fe 01       	movw	r30, r28
    3240:	e5 5b       	subi	r30, 0xB5	; 181
    3242:	ff 4f       	sbci	r31, 0xFF	; 255
    3244:	80 81       	ld	r24, Z
    3246:	91 81       	ldd	r25, Z+1	; 0x01
    3248:	8d 93       	st	X+, r24
    324a:	9c 93       	st	X, r25
    324c:	fe 01       	movw	r30, r28
    324e:	e9 5b       	subi	r30, 0xB9	; 185
    3250:	ff 4f       	sbci	r31, 0xFF	; 255
    3252:	80 81       	ld	r24, Z
    3254:	91 81       	ldd	r25, Z+1	; 0x01
    3256:	01 97       	sbiw	r24, 0x01	; 1
    3258:	f1 f7       	brne	.-4      	; 0x3256 <main+0x1a76>
    325a:	fe 01       	movw	r30, r28
    325c:	e9 5b       	subi	r30, 0xB9	; 185
    325e:	ff 4f       	sbci	r31, 0xFF	; 255
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24
		_delay_ms(1000);

		CLCD_u8WriteSpecialCharacter(2u,Local_u8MyPattern3,0u,0u);
    3264:	9e 01       	movw	r18, r28
    3266:	24 5d       	subi	r18, 0xD4	; 212
    3268:	3e 4f       	sbci	r19, 0xFE	; 254
    326a:	82 e0       	ldi	r24, 0x02	; 2
    326c:	b9 01       	movw	r22, r18
    326e:	40 e0       	ldi	r20, 0x00	; 0
    3270:	20 e0       	ldi	r18, 0x00	; 0
    3272:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,15,0);
    3276:	9e 01       	movw	r18, r28
    3278:	24 5e       	subi	r18, 0xE4	; 228
    327a:	3e 4f       	sbci	r19, 0xFE	; 254
    327c:	80 e0       	ldi	r24, 0x00	; 0
    327e:	b9 01       	movw	r22, r18
    3280:	4f e0       	ldi	r20, 0x0F	; 15
    3282:	20 e0       	ldi	r18, 0x00	; 0
    3284:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    3288:	fe 01       	movw	r30, r28
    328a:	ed 5b       	subi	r30, 0xBD	; 189
    328c:	ff 4f       	sbci	r31, 0xFF	; 255
    328e:	80 e0       	ldi	r24, 0x00	; 0
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	aa e7       	ldi	r26, 0x7A	; 122
    3294:	b4 e4       	ldi	r27, 0x44	; 68
    3296:	80 83       	st	Z, r24
    3298:	91 83       	std	Z+1, r25	; 0x01
    329a:	a2 83       	std	Z+2, r26	; 0x02
    329c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    329e:	8e 01       	movw	r16, r28
    32a0:	01 5c       	subi	r16, 0xC1	; 193
    32a2:	1f 4f       	sbci	r17, 0xFF	; 255
    32a4:	fe 01       	movw	r30, r28
    32a6:	ed 5b       	subi	r30, 0xBD	; 189
    32a8:	ff 4f       	sbci	r31, 0xFF	; 255
    32aa:	60 81       	ld	r22, Z
    32ac:	71 81       	ldd	r23, Z+1	; 0x01
    32ae:	82 81       	ldd	r24, Z+2	; 0x02
    32b0:	93 81       	ldd	r25, Z+3	; 0x03
    32b2:	20 e0       	ldi	r18, 0x00	; 0
    32b4:	30 e0       	ldi	r19, 0x00	; 0
    32b6:	4a ef       	ldi	r20, 0xFA	; 250
    32b8:	54 e4       	ldi	r21, 0x44	; 68
    32ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32be:	dc 01       	movw	r26, r24
    32c0:	cb 01       	movw	r24, r22
    32c2:	f8 01       	movw	r30, r16
    32c4:	80 83       	st	Z, r24
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	a2 83       	std	Z+2, r26	; 0x02
    32ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32cc:	fe 01       	movw	r30, r28
    32ce:	ff 96       	adiw	r30, 0x3f	; 63
    32d0:	60 81       	ld	r22, Z
    32d2:	71 81       	ldd	r23, Z+1	; 0x01
    32d4:	82 81       	ldd	r24, Z+2	; 0x02
    32d6:	93 81       	ldd	r25, Z+3	; 0x03
    32d8:	20 e0       	ldi	r18, 0x00	; 0
    32da:	30 e0       	ldi	r19, 0x00	; 0
    32dc:	40 e8       	ldi	r20, 0x80	; 128
    32de:	5f e3       	ldi	r21, 0x3F	; 63
    32e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32e4:	88 23       	and	r24, r24
    32e6:	2c f4       	brge	.+10     	; 0x32f2 <main+0x1b12>
		__ticks = 1;
    32e8:	81 e0       	ldi	r24, 0x01	; 1
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	9e af       	std	Y+62, r25	; 0x3e
    32ee:	8d af       	std	Y+61, r24	; 0x3d
    32f0:	46 c0       	rjmp	.+140    	; 0x337e <main+0x1b9e>
	else if (__tmp > 65535)
    32f2:	fe 01       	movw	r30, r28
    32f4:	ff 96       	adiw	r30, 0x3f	; 63
    32f6:	60 81       	ld	r22, Z
    32f8:	71 81       	ldd	r23, Z+1	; 0x01
    32fa:	82 81       	ldd	r24, Z+2	; 0x02
    32fc:	93 81       	ldd	r25, Z+3	; 0x03
    32fe:	20 e0       	ldi	r18, 0x00	; 0
    3300:	3f ef       	ldi	r19, 0xFF	; 255
    3302:	4f e7       	ldi	r20, 0x7F	; 127
    3304:	57 e4       	ldi	r21, 0x47	; 71
    3306:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    330a:	18 16       	cp	r1, r24
    330c:	64 f5       	brge	.+88     	; 0x3366 <main+0x1b86>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    330e:	fe 01       	movw	r30, r28
    3310:	ed 5b       	subi	r30, 0xBD	; 189
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	60 81       	ld	r22, Z
    3316:	71 81       	ldd	r23, Z+1	; 0x01
    3318:	82 81       	ldd	r24, Z+2	; 0x02
    331a:	93 81       	ldd	r25, Z+3	; 0x03
    331c:	20 e0       	ldi	r18, 0x00	; 0
    331e:	30 e0       	ldi	r19, 0x00	; 0
    3320:	40 e2       	ldi	r20, 0x20	; 32
    3322:	51 e4       	ldi	r21, 0x41	; 65
    3324:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3328:	dc 01       	movw	r26, r24
    332a:	cb 01       	movw	r24, r22
    332c:	bc 01       	movw	r22, r24
    332e:	cd 01       	movw	r24, r26
    3330:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3334:	dc 01       	movw	r26, r24
    3336:	cb 01       	movw	r24, r22
    3338:	9e af       	std	Y+62, r25	; 0x3e
    333a:	8d af       	std	Y+61, r24	; 0x3d
    333c:	0f c0       	rjmp	.+30     	; 0x335c <main+0x1b7c>
    333e:	88 ec       	ldi	r24, 0xC8	; 200
    3340:	90 e0       	ldi	r25, 0x00	; 0
    3342:	9c af       	std	Y+60, r25	; 0x3c
    3344:	8b af       	std	Y+59, r24	; 0x3b
    3346:	8b ad       	ldd	r24, Y+59	; 0x3b
    3348:	9c ad       	ldd	r25, Y+60	; 0x3c
    334a:	01 97       	sbiw	r24, 0x01	; 1
    334c:	f1 f7       	brne	.-4      	; 0x334a <main+0x1b6a>
    334e:	9c af       	std	Y+60, r25	; 0x3c
    3350:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3352:	8d ad       	ldd	r24, Y+61	; 0x3d
    3354:	9e ad       	ldd	r25, Y+62	; 0x3e
    3356:	01 97       	sbiw	r24, 0x01	; 1
    3358:	9e af       	std	Y+62, r25	; 0x3e
    335a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    335c:	8d ad       	ldd	r24, Y+61	; 0x3d
    335e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3360:	00 97       	sbiw	r24, 0x00	; 0
    3362:	69 f7       	brne	.-38     	; 0x333e <main+0x1b5e>
    3364:	16 c0       	rjmp	.+44     	; 0x3392 <main+0x1bb2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3366:	fe 01       	movw	r30, r28
    3368:	ff 96       	adiw	r30, 0x3f	; 63
    336a:	60 81       	ld	r22, Z
    336c:	71 81       	ldd	r23, Z+1	; 0x01
    336e:	82 81       	ldd	r24, Z+2	; 0x02
    3370:	93 81       	ldd	r25, Z+3	; 0x03
    3372:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3376:	dc 01       	movw	r26, r24
    3378:	cb 01       	movw	r24, r22
    337a:	9e af       	std	Y+62, r25	; 0x3e
    337c:	8d af       	std	Y+61, r24	; 0x3d
    337e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3380:	9e ad       	ldd	r25, Y+62	; 0x3e
    3382:	9a af       	std	Y+58, r25	; 0x3a
    3384:	89 af       	std	Y+57, r24	; 0x39
    3386:	89 ad       	ldd	r24, Y+57	; 0x39
    3388:	9a ad       	ldd	r25, Y+58	; 0x3a
    338a:	01 97       	sbiw	r24, 0x01	; 1
    338c:	f1 f7       	brne	.-4      	; 0x338a <main+0x1baa>
    338e:	9a af       	std	Y+58, r25	; 0x3a
    3390:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1000);
		for (Local_u8Xpos=1;Local_u8Xpos<=14;Local_u8Xpos++)
    3392:	fe 01       	movw	r30, r28
    3394:	e5 5e       	subi	r30, 0xE5	; 229
    3396:	fe 4f       	sbci	r31, 0xFE	; 254
    3398:	81 e0       	ldi	r24, 0x01	; 1
    339a:	80 83       	st	Z, r24
    339c:	07 c1       	rjmp	.+526    	; 0x35ac <main+0x1dcc>
		{
			CLCD_u8WriteSpecialCharacter(3u,Local_u8MyPattern4,Local_u8Xpos,Local_u8Ypos);
    339e:	9e 01       	movw	r18, r28
    33a0:	2c 5c       	subi	r18, 0xCC	; 204
    33a2:	3e 4f       	sbci	r19, 0xFE	; 254
    33a4:	fe 01       	movw	r30, r28
    33a6:	e5 5e       	subi	r30, 0xE5	; 229
    33a8:	fe 4f       	sbci	r31, 0xFE	; 254
    33aa:	de 01       	movw	r26, r28
    33ac:	a6 5e       	subi	r26, 0xE6	; 230
    33ae:	be 4f       	sbci	r27, 0xFE	; 254
    33b0:	83 e0       	ldi	r24, 0x03	; 3
    33b2:	b9 01       	movw	r22, r18
    33b4:	40 81       	ld	r20, Z
    33b6:	2c 91       	ld	r18, X
    33b8:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    33bc:	80 e0       	ldi	r24, 0x00	; 0
    33be:	90 e0       	ldi	r25, 0x00	; 0
    33c0:	a8 e4       	ldi	r26, 0x48	; 72
    33c2:	b2 e4       	ldi	r27, 0x42	; 66
    33c4:	8d ab       	std	Y+53, r24	; 0x35
    33c6:	9e ab       	std	Y+54, r25	; 0x36
    33c8:	af ab       	std	Y+55, r26	; 0x37
    33ca:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33cc:	6d a9       	ldd	r22, Y+53	; 0x35
    33ce:	7e a9       	ldd	r23, Y+54	; 0x36
    33d0:	8f a9       	ldd	r24, Y+55	; 0x37
    33d2:	98 ad       	ldd	r25, Y+56	; 0x38
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	30 e0       	ldi	r19, 0x00	; 0
    33d8:	4a ef       	ldi	r20, 0xFA	; 250
    33da:	54 e4       	ldi	r21, 0x44	; 68
    33dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33e0:	dc 01       	movw	r26, r24
    33e2:	cb 01       	movw	r24, r22
    33e4:	89 ab       	std	Y+49, r24	; 0x31
    33e6:	9a ab       	std	Y+50, r25	; 0x32
    33e8:	ab ab       	std	Y+51, r26	; 0x33
    33ea:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    33ec:	69 a9       	ldd	r22, Y+49	; 0x31
    33ee:	7a a9       	ldd	r23, Y+50	; 0x32
    33f0:	8b a9       	ldd	r24, Y+51	; 0x33
    33f2:	9c a9       	ldd	r25, Y+52	; 0x34
    33f4:	20 e0       	ldi	r18, 0x00	; 0
    33f6:	30 e0       	ldi	r19, 0x00	; 0
    33f8:	40 e8       	ldi	r20, 0x80	; 128
    33fa:	5f e3       	ldi	r21, 0x3F	; 63
    33fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3400:	88 23       	and	r24, r24
    3402:	2c f4       	brge	.+10     	; 0x340e <main+0x1c2e>
		__ticks = 1;
    3404:	81 e0       	ldi	r24, 0x01	; 1
    3406:	90 e0       	ldi	r25, 0x00	; 0
    3408:	98 ab       	std	Y+48, r25	; 0x30
    340a:	8f a7       	std	Y+47, r24	; 0x2f
    340c:	3f c0       	rjmp	.+126    	; 0x348c <main+0x1cac>
	else if (__tmp > 65535)
    340e:	69 a9       	ldd	r22, Y+49	; 0x31
    3410:	7a a9       	ldd	r23, Y+50	; 0x32
    3412:	8b a9       	ldd	r24, Y+51	; 0x33
    3414:	9c a9       	ldd	r25, Y+52	; 0x34
    3416:	20 e0       	ldi	r18, 0x00	; 0
    3418:	3f ef       	ldi	r19, 0xFF	; 255
    341a:	4f e7       	ldi	r20, 0x7F	; 127
    341c:	57 e4       	ldi	r21, 0x47	; 71
    341e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3422:	18 16       	cp	r1, r24
    3424:	4c f5       	brge	.+82     	; 0x3478 <main+0x1c98>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3426:	6d a9       	ldd	r22, Y+53	; 0x35
    3428:	7e a9       	ldd	r23, Y+54	; 0x36
    342a:	8f a9       	ldd	r24, Y+55	; 0x37
    342c:	98 ad       	ldd	r25, Y+56	; 0x38
    342e:	20 e0       	ldi	r18, 0x00	; 0
    3430:	30 e0       	ldi	r19, 0x00	; 0
    3432:	40 e2       	ldi	r20, 0x20	; 32
    3434:	51 e4       	ldi	r21, 0x41	; 65
    3436:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    343a:	dc 01       	movw	r26, r24
    343c:	cb 01       	movw	r24, r22
    343e:	bc 01       	movw	r22, r24
    3440:	cd 01       	movw	r24, r26
    3442:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3446:	dc 01       	movw	r26, r24
    3448:	cb 01       	movw	r24, r22
    344a:	98 ab       	std	Y+48, r25	; 0x30
    344c:	8f a7       	std	Y+47, r24	; 0x2f
    344e:	0f c0       	rjmp	.+30     	; 0x346e <main+0x1c8e>
    3450:	88 ec       	ldi	r24, 0xC8	; 200
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	9e a7       	std	Y+46, r25	; 0x2e
    3456:	8d a7       	std	Y+45, r24	; 0x2d
    3458:	8d a5       	ldd	r24, Y+45	; 0x2d
    345a:	9e a5       	ldd	r25, Y+46	; 0x2e
    345c:	01 97       	sbiw	r24, 0x01	; 1
    345e:	f1 f7       	brne	.-4      	; 0x345c <main+0x1c7c>
    3460:	9e a7       	std	Y+46, r25	; 0x2e
    3462:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3464:	8f a5       	ldd	r24, Y+47	; 0x2f
    3466:	98 a9       	ldd	r25, Y+48	; 0x30
    3468:	01 97       	sbiw	r24, 0x01	; 1
    346a:	98 ab       	std	Y+48, r25	; 0x30
    346c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    346e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3470:	98 a9       	ldd	r25, Y+48	; 0x30
    3472:	00 97       	sbiw	r24, 0x00	; 0
    3474:	69 f7       	brne	.-38     	; 0x3450 <main+0x1c70>
    3476:	14 c0       	rjmp	.+40     	; 0x34a0 <main+0x1cc0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3478:	69 a9       	ldd	r22, Y+49	; 0x31
    347a:	7a a9       	ldd	r23, Y+50	; 0x32
    347c:	8b a9       	ldd	r24, Y+51	; 0x33
    347e:	9c a9       	ldd	r25, Y+52	; 0x34
    3480:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3484:	dc 01       	movw	r26, r24
    3486:	cb 01       	movw	r24, r22
    3488:	98 ab       	std	Y+48, r25	; 0x30
    348a:	8f a7       	std	Y+47, r24	; 0x2f
    348c:	8f a5       	ldd	r24, Y+47	; 0x2f
    348e:	98 a9       	ldd	r25, Y+48	; 0x30
    3490:	9c a7       	std	Y+44, r25	; 0x2c
    3492:	8b a7       	std	Y+43, r24	; 0x2b
    3494:	8b a5       	ldd	r24, Y+43	; 0x2b
    3496:	9c a5       	ldd	r25, Y+44	; 0x2c
    3498:	01 97       	sbiw	r24, 0x01	; 1
    349a:	f1 f7       	brne	.-4      	; 0x3498 <main+0x1cb8>
    349c:	9c a7       	std	Y+44, r25	; 0x2c
    349e:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(50);
				CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
    34a0:	fe 01       	movw	r30, r28
    34a2:	e5 5e       	subi	r30, 0xE5	; 229
    34a4:	fe 4f       	sbci	r31, 0xFE	; 254
    34a6:	de 01       	movw	r26, r28
    34a8:	a6 5e       	subi	r26, 0xE6	; 230
    34aa:	be 4f       	sbci	r27, 0xFE	; 254
    34ac:	80 81       	ld	r24, Z
    34ae:	6c 91       	ld	r22, X
    34b0:	41 e0       	ldi	r20, 0x01	; 1
    34b2:	0e 94 4d 08 	call	0x109a	; 0x109a <CLCD_voidClearGide>
    34b6:	80 e0       	ldi	r24, 0x00	; 0
    34b8:	90 e0       	ldi	r25, 0x00	; 0
    34ba:	a8 e4       	ldi	r26, 0x48	; 72
    34bc:	b2 e4       	ldi	r27, 0x42	; 66
    34be:	8f a3       	std	Y+39, r24	; 0x27
    34c0:	98 a7       	std	Y+40, r25	; 0x28
    34c2:	a9 a7       	std	Y+41, r26	; 0x29
    34c4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34c6:	6f a1       	ldd	r22, Y+39	; 0x27
    34c8:	78 a5       	ldd	r23, Y+40	; 0x28
    34ca:	89 a5       	ldd	r24, Y+41	; 0x29
    34cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    34ce:	20 e0       	ldi	r18, 0x00	; 0
    34d0:	30 e0       	ldi	r19, 0x00	; 0
    34d2:	4a ef       	ldi	r20, 0xFA	; 250
    34d4:	54 e4       	ldi	r21, 0x44	; 68
    34d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34da:	dc 01       	movw	r26, r24
    34dc:	cb 01       	movw	r24, r22
    34de:	8b a3       	std	Y+35, r24	; 0x23
    34e0:	9c a3       	std	Y+36, r25	; 0x24
    34e2:	ad a3       	std	Y+37, r26	; 0x25
    34e4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    34e6:	6b a1       	ldd	r22, Y+35	; 0x23
    34e8:	7c a1       	ldd	r23, Y+36	; 0x24
    34ea:	8d a1       	ldd	r24, Y+37	; 0x25
    34ec:	9e a1       	ldd	r25, Y+38	; 0x26
    34ee:	20 e0       	ldi	r18, 0x00	; 0
    34f0:	30 e0       	ldi	r19, 0x00	; 0
    34f2:	40 e8       	ldi	r20, 0x80	; 128
    34f4:	5f e3       	ldi	r21, 0x3F	; 63
    34f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34fa:	88 23       	and	r24, r24
    34fc:	2c f4       	brge	.+10     	; 0x3508 <main+0x1d28>
		__ticks = 1;
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	9a a3       	std	Y+34, r25	; 0x22
    3504:	89 a3       	std	Y+33, r24	; 0x21
    3506:	3f c0       	rjmp	.+126    	; 0x3586 <main+0x1da6>
	else if (__tmp > 65535)
    3508:	6b a1       	ldd	r22, Y+35	; 0x23
    350a:	7c a1       	ldd	r23, Y+36	; 0x24
    350c:	8d a1       	ldd	r24, Y+37	; 0x25
    350e:	9e a1       	ldd	r25, Y+38	; 0x26
    3510:	20 e0       	ldi	r18, 0x00	; 0
    3512:	3f ef       	ldi	r19, 0xFF	; 255
    3514:	4f e7       	ldi	r20, 0x7F	; 127
    3516:	57 e4       	ldi	r21, 0x47	; 71
    3518:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    351c:	18 16       	cp	r1, r24
    351e:	4c f5       	brge	.+82     	; 0x3572 <main+0x1d92>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3520:	6f a1       	ldd	r22, Y+39	; 0x27
    3522:	78 a5       	ldd	r23, Y+40	; 0x28
    3524:	89 a5       	ldd	r24, Y+41	; 0x29
    3526:	9a a5       	ldd	r25, Y+42	; 0x2a
    3528:	20 e0       	ldi	r18, 0x00	; 0
    352a:	30 e0       	ldi	r19, 0x00	; 0
    352c:	40 e2       	ldi	r20, 0x20	; 32
    352e:	51 e4       	ldi	r21, 0x41	; 65
    3530:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3534:	dc 01       	movw	r26, r24
    3536:	cb 01       	movw	r24, r22
    3538:	bc 01       	movw	r22, r24
    353a:	cd 01       	movw	r24, r26
    353c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3540:	dc 01       	movw	r26, r24
    3542:	cb 01       	movw	r24, r22
    3544:	9a a3       	std	Y+34, r25	; 0x22
    3546:	89 a3       	std	Y+33, r24	; 0x21
    3548:	0f c0       	rjmp	.+30     	; 0x3568 <main+0x1d88>
    354a:	88 ec       	ldi	r24, 0xC8	; 200
    354c:	90 e0       	ldi	r25, 0x00	; 0
    354e:	98 a3       	std	Y+32, r25	; 0x20
    3550:	8f 8f       	std	Y+31, r24	; 0x1f
    3552:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3554:	98 a1       	ldd	r25, Y+32	; 0x20
    3556:	01 97       	sbiw	r24, 0x01	; 1
    3558:	f1 f7       	brne	.-4      	; 0x3556 <main+0x1d76>
    355a:	98 a3       	std	Y+32, r25	; 0x20
    355c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    355e:	89 a1       	ldd	r24, Y+33	; 0x21
    3560:	9a a1       	ldd	r25, Y+34	; 0x22
    3562:	01 97       	sbiw	r24, 0x01	; 1
    3564:	9a a3       	std	Y+34, r25	; 0x22
    3566:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3568:	89 a1       	ldd	r24, Y+33	; 0x21
    356a:	9a a1       	ldd	r25, Y+34	; 0x22
    356c:	00 97       	sbiw	r24, 0x00	; 0
    356e:	69 f7       	brne	.-38     	; 0x354a <main+0x1d6a>
    3570:	14 c0       	rjmp	.+40     	; 0x359a <main+0x1dba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3572:	6b a1       	ldd	r22, Y+35	; 0x23
    3574:	7c a1       	ldd	r23, Y+36	; 0x24
    3576:	8d a1       	ldd	r24, Y+37	; 0x25
    3578:	9e a1       	ldd	r25, Y+38	; 0x26
    357a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    357e:	dc 01       	movw	r26, r24
    3580:	cb 01       	movw	r24, r22
    3582:	9a a3       	std	Y+34, r25	; 0x22
    3584:	89 a3       	std	Y+33, r24	; 0x21
    3586:	89 a1       	ldd	r24, Y+33	; 0x21
    3588:	9a a1       	ldd	r25, Y+34	; 0x22
    358a:	9e 8f       	std	Y+30, r25	; 0x1e
    358c:	8d 8f       	std	Y+29, r24	; 0x1d
    358e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3590:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3592:	01 97       	sbiw	r24, 0x01	; 1
    3594:	f1 f7       	brne	.-4      	; 0x3592 <main+0x1db2>
    3596:	9e 8f       	std	Y+30, r25	; 0x1e
    3598:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1000);

		CLCD_u8WriteSpecialCharacter(2u,Local_u8MyPattern3,0u,0u);
		CLCD_u8WriteSpecialCharacter(0u,Local_u8MyPattern,15,0);
		_delay_ms(1000);
		for (Local_u8Xpos=1;Local_u8Xpos<=14;Local_u8Xpos++)
    359a:	de 01       	movw	r26, r28
    359c:	a5 5e       	subi	r26, 0xE5	; 229
    359e:	be 4f       	sbci	r27, 0xFE	; 254
    35a0:	fe 01       	movw	r30, r28
    35a2:	e5 5e       	subi	r30, 0xE5	; 229
    35a4:	fe 4f       	sbci	r31, 0xFE	; 254
    35a6:	80 81       	ld	r24, Z
    35a8:	8f 5f       	subi	r24, 0xFF	; 255
    35aa:	8c 93       	st	X, r24
    35ac:	fe 01       	movw	r30, r28
    35ae:	e5 5e       	subi	r30, 0xE5	; 229
    35b0:	fe 4f       	sbci	r31, 0xFE	; 254
    35b2:	80 81       	ld	r24, Z
    35b4:	8f 30       	cpi	r24, 0x0F	; 15
    35b6:	08 f4       	brcc	.+2      	; 0x35ba <main+0x1dda>
    35b8:	f2 ce       	rjmp	.-540    	; 0x339e <main+0x1bbe>
				CLCD_voidClearGide(Local_u8Xpos,Local_u8Ypos,1 );
				_delay_ms(50);

		}

		CLCD_u8WriteSpecialCharacter(4u,Local_u8MyPattern5,15,0);
    35ba:	9e 01       	movw	r18, r28
    35bc:	24 5c       	subi	r18, 0xC4	; 196
    35be:	3e 4f       	sbci	r19, 0xFE	; 254
    35c0:	84 e0       	ldi	r24, 0x04	; 4
    35c2:	b9 01       	movw	r22, r18
    35c4:	4f e0       	ldi	r20, 0x0F	; 15
    35c6:	20 e0       	ldi	r18, 0x00	; 0
    35c8:	0e 94 02 08 	call	0x1004	; 0x1004 <CLCD_u8WriteSpecialCharacter>
    35cc:	80 e0       	ldi	r24, 0x00	; 0
    35ce:	90 e0       	ldi	r25, 0x00	; 0
    35d0:	aa e7       	ldi	r26, 0x7A	; 122
    35d2:	b4 e4       	ldi	r27, 0x44	; 68
    35d4:	89 8f       	std	Y+25, r24	; 0x19
    35d6:	9a 8f       	std	Y+26, r25	; 0x1a
    35d8:	ab 8f       	std	Y+27, r26	; 0x1b
    35da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35dc:	69 8d       	ldd	r22, Y+25	; 0x19
    35de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35e4:	20 e0       	ldi	r18, 0x00	; 0
    35e6:	30 e0       	ldi	r19, 0x00	; 0
    35e8:	4a ef       	ldi	r20, 0xFA	; 250
    35ea:	54 e4       	ldi	r21, 0x44	; 68
    35ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35f0:	dc 01       	movw	r26, r24
    35f2:	cb 01       	movw	r24, r22
    35f4:	8d 8b       	std	Y+21, r24	; 0x15
    35f6:	9e 8b       	std	Y+22, r25	; 0x16
    35f8:	af 8b       	std	Y+23, r26	; 0x17
    35fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    35fc:	6d 89       	ldd	r22, Y+21	; 0x15
    35fe:	7e 89       	ldd	r23, Y+22	; 0x16
    3600:	8f 89       	ldd	r24, Y+23	; 0x17
    3602:	98 8d       	ldd	r25, Y+24	; 0x18
    3604:	20 e0       	ldi	r18, 0x00	; 0
    3606:	30 e0       	ldi	r19, 0x00	; 0
    3608:	40 e8       	ldi	r20, 0x80	; 128
    360a:	5f e3       	ldi	r21, 0x3F	; 63
    360c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3610:	88 23       	and	r24, r24
    3612:	2c f4       	brge	.+10     	; 0x361e <main+0x1e3e>
		__ticks = 1;
    3614:	81 e0       	ldi	r24, 0x01	; 1
    3616:	90 e0       	ldi	r25, 0x00	; 0
    3618:	9c 8b       	std	Y+20, r25	; 0x14
    361a:	8b 8b       	std	Y+19, r24	; 0x13
    361c:	3f c0       	rjmp	.+126    	; 0x369c <main+0x1ebc>
	else if (__tmp > 65535)
    361e:	6d 89       	ldd	r22, Y+21	; 0x15
    3620:	7e 89       	ldd	r23, Y+22	; 0x16
    3622:	8f 89       	ldd	r24, Y+23	; 0x17
    3624:	98 8d       	ldd	r25, Y+24	; 0x18
    3626:	20 e0       	ldi	r18, 0x00	; 0
    3628:	3f ef       	ldi	r19, 0xFF	; 255
    362a:	4f e7       	ldi	r20, 0x7F	; 127
    362c:	57 e4       	ldi	r21, 0x47	; 71
    362e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3632:	18 16       	cp	r1, r24
    3634:	4c f5       	brge	.+82     	; 0x3688 <main+0x1ea8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3636:	69 8d       	ldd	r22, Y+25	; 0x19
    3638:	7a 8d       	ldd	r23, Y+26	; 0x1a
    363a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    363c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    363e:	20 e0       	ldi	r18, 0x00	; 0
    3640:	30 e0       	ldi	r19, 0x00	; 0
    3642:	40 e2       	ldi	r20, 0x20	; 32
    3644:	51 e4       	ldi	r21, 0x41	; 65
    3646:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    364a:	dc 01       	movw	r26, r24
    364c:	cb 01       	movw	r24, r22
    364e:	bc 01       	movw	r22, r24
    3650:	cd 01       	movw	r24, r26
    3652:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3656:	dc 01       	movw	r26, r24
    3658:	cb 01       	movw	r24, r22
    365a:	9c 8b       	std	Y+20, r25	; 0x14
    365c:	8b 8b       	std	Y+19, r24	; 0x13
    365e:	0f c0       	rjmp	.+30     	; 0x367e <main+0x1e9e>
    3660:	88 ec       	ldi	r24, 0xC8	; 200
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	9a 8b       	std	Y+18, r25	; 0x12
    3666:	89 8b       	std	Y+17, r24	; 0x11
    3668:	89 89       	ldd	r24, Y+17	; 0x11
    366a:	9a 89       	ldd	r25, Y+18	; 0x12
    366c:	01 97       	sbiw	r24, 0x01	; 1
    366e:	f1 f7       	brne	.-4      	; 0x366c <main+0x1e8c>
    3670:	9a 8b       	std	Y+18, r25	; 0x12
    3672:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3674:	8b 89       	ldd	r24, Y+19	; 0x13
    3676:	9c 89       	ldd	r25, Y+20	; 0x14
    3678:	01 97       	sbiw	r24, 0x01	; 1
    367a:	9c 8b       	std	Y+20, r25	; 0x14
    367c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    367e:	8b 89       	ldd	r24, Y+19	; 0x13
    3680:	9c 89       	ldd	r25, Y+20	; 0x14
    3682:	00 97       	sbiw	r24, 0x00	; 0
    3684:	69 f7       	brne	.-38     	; 0x3660 <main+0x1e80>
    3686:	14 c0       	rjmp	.+40     	; 0x36b0 <main+0x1ed0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3688:	6d 89       	ldd	r22, Y+21	; 0x15
    368a:	7e 89       	ldd	r23, Y+22	; 0x16
    368c:	8f 89       	ldd	r24, Y+23	; 0x17
    368e:	98 8d       	ldd	r25, Y+24	; 0x18
    3690:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3694:	dc 01       	movw	r26, r24
    3696:	cb 01       	movw	r24, r22
    3698:	9c 8b       	std	Y+20, r25	; 0x14
    369a:	8b 8b       	std	Y+19, r24	; 0x13
    369c:	8b 89       	ldd	r24, Y+19	; 0x13
    369e:	9c 89       	ldd	r25, Y+20	; 0x14
    36a0:	98 8b       	std	Y+16, r25	; 0x10
    36a2:	8f 87       	std	Y+15, r24	; 0x0f
    36a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    36a6:	98 89       	ldd	r25, Y+16	; 0x10
    36a8:	01 97       	sbiw	r24, 0x01	; 1
    36aa:	f1 f7       	brne	.-4      	; 0x36a8 <main+0x1ec8>
    36ac:	98 8b       	std	Y+16, r25	; 0x10
    36ae:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1000);
		/*Display clear */
			CLCD_voidSendCommand(1);
    36b0:	81 e0       	ldi	r24, 0x01	; 1
    36b2:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCommand>
    36b6:	80 e0       	ldi	r24, 0x00	; 0
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	aa e7       	ldi	r26, 0x7A	; 122
    36bc:	b4 e4       	ldi	r27, 0x44	; 68
    36be:	8b 87       	std	Y+11, r24	; 0x0b
    36c0:	9c 87       	std	Y+12, r25	; 0x0c
    36c2:	ad 87       	std	Y+13, r26	; 0x0d
    36c4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    36c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    36ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    36cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    36ce:	20 e0       	ldi	r18, 0x00	; 0
    36d0:	30 e0       	ldi	r19, 0x00	; 0
    36d2:	4a ef       	ldi	r20, 0xFA	; 250
    36d4:	54 e4       	ldi	r21, 0x44	; 68
    36d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36da:	dc 01       	movw	r26, r24
    36dc:	cb 01       	movw	r24, r22
    36de:	8f 83       	std	Y+7, r24	; 0x07
    36e0:	98 87       	std	Y+8, r25	; 0x08
    36e2:	a9 87       	std	Y+9, r26	; 0x09
    36e4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    36e6:	6f 81       	ldd	r22, Y+7	; 0x07
    36e8:	78 85       	ldd	r23, Y+8	; 0x08
    36ea:	89 85       	ldd	r24, Y+9	; 0x09
    36ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    36ee:	20 e0       	ldi	r18, 0x00	; 0
    36f0:	30 e0       	ldi	r19, 0x00	; 0
    36f2:	40 e8       	ldi	r20, 0x80	; 128
    36f4:	5f e3       	ldi	r21, 0x3F	; 63
    36f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    36fa:	88 23       	and	r24, r24
    36fc:	2c f4       	brge	.+10     	; 0x3708 <main+0x1f28>
		__ticks = 1;
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	90 e0       	ldi	r25, 0x00	; 0
    3702:	9e 83       	std	Y+6, r25	; 0x06
    3704:	8d 83       	std	Y+5, r24	; 0x05
    3706:	40 c0       	rjmp	.+128    	; 0x3788 <main+0x1fa8>
	else if (__tmp > 65535)
    3708:	6f 81       	ldd	r22, Y+7	; 0x07
    370a:	78 85       	ldd	r23, Y+8	; 0x08
    370c:	89 85       	ldd	r24, Y+9	; 0x09
    370e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3710:	20 e0       	ldi	r18, 0x00	; 0
    3712:	3f ef       	ldi	r19, 0xFF	; 255
    3714:	4f e7       	ldi	r20, 0x7F	; 127
    3716:	57 e4       	ldi	r21, 0x47	; 71
    3718:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    371c:	18 16       	cp	r1, r24
    371e:	54 f5       	brge	.+84     	; 0x3774 <main+0x1f94>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3720:	6b 85       	ldd	r22, Y+11	; 0x0b
    3722:	7c 85       	ldd	r23, Y+12	; 0x0c
    3724:	8d 85       	ldd	r24, Y+13	; 0x0d
    3726:	9e 85       	ldd	r25, Y+14	; 0x0e
    3728:	20 e0       	ldi	r18, 0x00	; 0
    372a:	30 e0       	ldi	r19, 0x00	; 0
    372c:	40 e2       	ldi	r20, 0x20	; 32
    372e:	51 e4       	ldi	r21, 0x41	; 65
    3730:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3734:	dc 01       	movw	r26, r24
    3736:	cb 01       	movw	r24, r22
    3738:	bc 01       	movw	r22, r24
    373a:	cd 01       	movw	r24, r26
    373c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3740:	dc 01       	movw	r26, r24
    3742:	cb 01       	movw	r24, r22
    3744:	9e 83       	std	Y+6, r25	; 0x06
    3746:	8d 83       	std	Y+5, r24	; 0x05
    3748:	0f c0       	rjmp	.+30     	; 0x3768 <main+0x1f88>
    374a:	88 ec       	ldi	r24, 0xC8	; 200
    374c:	90 e0       	ldi	r25, 0x00	; 0
    374e:	9c 83       	std	Y+4, r25	; 0x04
    3750:	8b 83       	std	Y+3, r24	; 0x03
    3752:	8b 81       	ldd	r24, Y+3	; 0x03
    3754:	9c 81       	ldd	r25, Y+4	; 0x04
    3756:	01 97       	sbiw	r24, 0x01	; 1
    3758:	f1 f7       	brne	.-4      	; 0x3756 <main+0x1f76>
    375a:	9c 83       	std	Y+4, r25	; 0x04
    375c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    375e:	8d 81       	ldd	r24, Y+5	; 0x05
    3760:	9e 81       	ldd	r25, Y+6	; 0x06
    3762:	01 97       	sbiw	r24, 0x01	; 1
    3764:	9e 83       	std	Y+6, r25	; 0x06
    3766:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3768:	8d 81       	ldd	r24, Y+5	; 0x05
    376a:	9e 81       	ldd	r25, Y+6	; 0x06
    376c:	00 97       	sbiw	r24, 0x00	; 0
    376e:	69 f7       	brne	.-38     	; 0x374a <main+0x1f6a>
    3770:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <main+0x398>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3774:	6f 81       	ldd	r22, Y+7	; 0x07
    3776:	78 85       	ldd	r23, Y+8	; 0x08
    3778:	89 85       	ldd	r24, Y+9	; 0x09
    377a:	9a 85       	ldd	r25, Y+10	; 0x0a
    377c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3780:	dc 01       	movw	r26, r24
    3782:	cb 01       	movw	r24, r22
    3784:	9e 83       	std	Y+6, r25	; 0x06
    3786:	8d 83       	std	Y+5, r24	; 0x05
    3788:	8d 81       	ldd	r24, Y+5	; 0x05
    378a:	9e 81       	ldd	r25, Y+6	; 0x06
    378c:	9a 83       	std	Y+2, r25	; 0x02
    378e:	89 83       	std	Y+1, r24	; 0x01
    3790:	89 81       	ldd	r24, Y+1	; 0x01
    3792:	9a 81       	ldd	r25, Y+2	; 0x02
    3794:	01 97       	sbiw	r24, 0x01	; 1
    3796:	f1 f7       	brne	.-4      	; 0x3794 <main+0x1fb4>
    3798:	9a 83       	std	Y+2, r25	; 0x02
    379a:	89 83       	std	Y+1, r24	; 0x01
    379c:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <main+0x398>

000037a0 <__divmodsi4>:
    37a0:	97 fb       	bst	r25, 7
    37a2:	09 2e       	mov	r0, r25
    37a4:	05 26       	eor	r0, r21
    37a6:	0e d0       	rcall	.+28     	; 0x37c4 <__divmodsi4_neg1>
    37a8:	57 fd       	sbrc	r21, 7
    37aa:	04 d0       	rcall	.+8      	; 0x37b4 <__divmodsi4_neg2>
    37ac:	14 d0       	rcall	.+40     	; 0x37d6 <__udivmodsi4>
    37ae:	0a d0       	rcall	.+20     	; 0x37c4 <__divmodsi4_neg1>
    37b0:	00 1c       	adc	r0, r0
    37b2:	38 f4       	brcc	.+14     	; 0x37c2 <__divmodsi4_exit>

000037b4 <__divmodsi4_neg2>:
    37b4:	50 95       	com	r21
    37b6:	40 95       	com	r20
    37b8:	30 95       	com	r19
    37ba:	21 95       	neg	r18
    37bc:	3f 4f       	sbci	r19, 0xFF	; 255
    37be:	4f 4f       	sbci	r20, 0xFF	; 255
    37c0:	5f 4f       	sbci	r21, 0xFF	; 255

000037c2 <__divmodsi4_exit>:
    37c2:	08 95       	ret

000037c4 <__divmodsi4_neg1>:
    37c4:	f6 f7       	brtc	.-4      	; 0x37c2 <__divmodsi4_exit>
    37c6:	90 95       	com	r25
    37c8:	80 95       	com	r24
    37ca:	70 95       	com	r23
    37cc:	61 95       	neg	r22
    37ce:	7f 4f       	sbci	r23, 0xFF	; 255
    37d0:	8f 4f       	sbci	r24, 0xFF	; 255
    37d2:	9f 4f       	sbci	r25, 0xFF	; 255
    37d4:	08 95       	ret

000037d6 <__udivmodsi4>:
    37d6:	a1 e2       	ldi	r26, 0x21	; 33
    37d8:	1a 2e       	mov	r1, r26
    37da:	aa 1b       	sub	r26, r26
    37dc:	bb 1b       	sub	r27, r27
    37de:	fd 01       	movw	r30, r26
    37e0:	0d c0       	rjmp	.+26     	; 0x37fc <__udivmodsi4_ep>

000037e2 <__udivmodsi4_loop>:
    37e2:	aa 1f       	adc	r26, r26
    37e4:	bb 1f       	adc	r27, r27
    37e6:	ee 1f       	adc	r30, r30
    37e8:	ff 1f       	adc	r31, r31
    37ea:	a2 17       	cp	r26, r18
    37ec:	b3 07       	cpc	r27, r19
    37ee:	e4 07       	cpc	r30, r20
    37f0:	f5 07       	cpc	r31, r21
    37f2:	20 f0       	brcs	.+8      	; 0x37fc <__udivmodsi4_ep>
    37f4:	a2 1b       	sub	r26, r18
    37f6:	b3 0b       	sbc	r27, r19
    37f8:	e4 0b       	sbc	r30, r20
    37fa:	f5 0b       	sbc	r31, r21

000037fc <__udivmodsi4_ep>:
    37fc:	66 1f       	adc	r22, r22
    37fe:	77 1f       	adc	r23, r23
    3800:	88 1f       	adc	r24, r24
    3802:	99 1f       	adc	r25, r25
    3804:	1a 94       	dec	r1
    3806:	69 f7       	brne	.-38     	; 0x37e2 <__udivmodsi4_loop>
    3808:	60 95       	com	r22
    380a:	70 95       	com	r23
    380c:	80 95       	com	r24
    380e:	90 95       	com	r25
    3810:	9b 01       	movw	r18, r22
    3812:	ac 01       	movw	r20, r24
    3814:	bd 01       	movw	r22, r26
    3816:	cf 01       	movw	r24, r30
    3818:	08 95       	ret

0000381a <__prologue_saves__>:
    381a:	2f 92       	push	r2
    381c:	3f 92       	push	r3
    381e:	4f 92       	push	r4
    3820:	5f 92       	push	r5
    3822:	6f 92       	push	r6
    3824:	7f 92       	push	r7
    3826:	8f 92       	push	r8
    3828:	9f 92       	push	r9
    382a:	af 92       	push	r10
    382c:	bf 92       	push	r11
    382e:	cf 92       	push	r12
    3830:	df 92       	push	r13
    3832:	ef 92       	push	r14
    3834:	ff 92       	push	r15
    3836:	0f 93       	push	r16
    3838:	1f 93       	push	r17
    383a:	cf 93       	push	r28
    383c:	df 93       	push	r29
    383e:	cd b7       	in	r28, 0x3d	; 61
    3840:	de b7       	in	r29, 0x3e	; 62
    3842:	ca 1b       	sub	r28, r26
    3844:	db 0b       	sbc	r29, r27
    3846:	0f b6       	in	r0, 0x3f	; 63
    3848:	f8 94       	cli
    384a:	de bf       	out	0x3e, r29	; 62
    384c:	0f be       	out	0x3f, r0	; 63
    384e:	cd bf       	out	0x3d, r28	; 61
    3850:	09 94       	ijmp

00003852 <__epilogue_restores__>:
    3852:	2a 88       	ldd	r2, Y+18	; 0x12
    3854:	39 88       	ldd	r3, Y+17	; 0x11
    3856:	48 88       	ldd	r4, Y+16	; 0x10
    3858:	5f 84       	ldd	r5, Y+15	; 0x0f
    385a:	6e 84       	ldd	r6, Y+14	; 0x0e
    385c:	7d 84       	ldd	r7, Y+13	; 0x0d
    385e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3860:	9b 84       	ldd	r9, Y+11	; 0x0b
    3862:	aa 84       	ldd	r10, Y+10	; 0x0a
    3864:	b9 84       	ldd	r11, Y+9	; 0x09
    3866:	c8 84       	ldd	r12, Y+8	; 0x08
    3868:	df 80       	ldd	r13, Y+7	; 0x07
    386a:	ee 80       	ldd	r14, Y+6	; 0x06
    386c:	fd 80       	ldd	r15, Y+5	; 0x05
    386e:	0c 81       	ldd	r16, Y+4	; 0x04
    3870:	1b 81       	ldd	r17, Y+3	; 0x03
    3872:	aa 81       	ldd	r26, Y+2	; 0x02
    3874:	b9 81       	ldd	r27, Y+1	; 0x01
    3876:	ce 0f       	add	r28, r30
    3878:	d1 1d       	adc	r29, r1
    387a:	0f b6       	in	r0, 0x3f	; 63
    387c:	f8 94       	cli
    387e:	de bf       	out	0x3e, r29	; 62
    3880:	0f be       	out	0x3f, r0	; 63
    3882:	cd bf       	out	0x3d, r28	; 61
    3884:	ed 01       	movw	r28, r26
    3886:	08 95       	ret

00003888 <_exit>:
    3888:	f8 94       	cli

0000388a <__stop_program>:
    388a:	ff cf       	rjmp	.-2      	; 0x388a <__stop_program>
