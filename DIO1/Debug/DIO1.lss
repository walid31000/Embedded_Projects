
DIO1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000758  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a14  00000000  00000000  000007ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000009eb  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7f 03 	call	0x6fe	; 0x6fe <main>
  64:	0c 94 aa 03 	jmp	0x754	; 0x754 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_u8SetPinDirection>:
#include "DIO_reg.h"
#include "DIO_interface.h"


uint8 DIO_u8SetPinDirection (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinDir_t copy_Dir)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8a 83       	std	Y+2, r24	; 0x02
  82:	6b 83       	std	Y+3, r22	; 0x03
  84:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState= OK;
  86:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
  88:	8b 81       	ldd	r24, Y+3	; 0x03
  8a:	88 30       	cpi	r24, 0x08	; 8
  8c:	08 f0       	brcs	.+2      	; 0x90 <DIO_u8SetPinDirection+0x24>
  8e:	f3 c0       	rjmp	.+486    	; 0x276 <DIO_u8SetPinDirection+0x20a>
	{
		if(copy_Dir==DIO_PIN_INPUT)
  90:	8c 81       	ldd	r24, Y+4	; 0x04
  92:	88 23       	and	r24, r24
  94:	09 f0       	breq	.+2      	; 0x98 <DIO_u8SetPinDirection+0x2c>
  96:	77 c0       	rjmp	.+238    	; 0x186 <DIO_u8SetPinDirection+0x11a>
		{
			switch (copy_Port)
  98:	8a 81       	ldd	r24, Y+2	; 0x02
  9a:	28 2f       	mov	r18, r24
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	38 87       	std	Y+8, r19	; 0x08
  a0:	2f 83       	std	Y+7, r18	; 0x07
  a2:	8f 81       	ldd	r24, Y+7	; 0x07
  a4:	98 85       	ldd	r25, Y+8	; 0x08
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	59 f1       	breq	.+86     	; 0x102 <DIO_u8SetPinDirection+0x96>
  ac:	2f 81       	ldd	r18, Y+7	; 0x07
  ae:	38 85       	ldd	r19, Y+8	; 0x08
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	2c f4       	brge	.+10     	; 0xc0 <DIO_u8SetPinDirection+0x54>
  b6:	8f 81       	ldd	r24, Y+7	; 0x07
  b8:	98 85       	ldd	r25, Y+8	; 0x08
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	69 f0       	breq	.+26     	; 0xd8 <DIO_u8SetPinDirection+0x6c>
  be:	60 c0       	rjmp	.+192    	; 0x180 <DIO_u8SetPinDirection+0x114>
  c0:	2f 81       	ldd	r18, Y+7	; 0x07
  c2:	38 85       	ldd	r19, Y+8	; 0x08
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	89 f1       	breq	.+98     	; 0x12c <DIO_u8SetPinDirection+0xc0>
  ca:	8f 81       	ldd	r24, Y+7	; 0x07
  cc:	98 85       	ldd	r25, Y+8	; 0x08
  ce:	83 30       	cpi	r24, 0x03	; 3
  d0:	91 05       	cpc	r25, r1
  d2:	09 f4       	brne	.+2      	; 0xd6 <DIO_u8SetPinDirection+0x6a>
  d4:	40 c0       	rjmp	.+128    	; 0x156 <DIO_u8SetPinDirection+0xea>
  d6:	54 c0       	rjmp	.+168    	; 0x180 <DIO_u8SetPinDirection+0x114>
			{
			case DIO_PORTA:CLR_BIT(DDRA,copy_PinNum);break;
  d8:	aa e3       	ldi	r26, 0x3A	; 58
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	ea e3       	ldi	r30, 0x3A	; 58
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	48 2f       	mov	r20, r24
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	28 2f       	mov	r18, r24
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 2e       	mov	r0, r18
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <DIO_u8SetPinDirection+0x8a>
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	0a 94       	dec	r0
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <DIO_u8SetPinDirection+0x86>
  fa:	80 95       	com	r24
  fc:	84 23       	and	r24, r20
  fe:	8c 93       	st	X, r24
 100:	ba c0       	rjmp	.+372    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:CLR_BIT(DDRB,copy_PinNum);break;
 102:	a7 e3       	ldi	r26, 0x37	; 55
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e7 e3       	ldi	r30, 0x37	; 55
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	48 2f       	mov	r20, r24
 10e:	8b 81       	ldd	r24, Y+3	; 0x03
 110:	28 2f       	mov	r18, r24
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 2e       	mov	r0, r18
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_u8SetPinDirection+0xb4>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	0a 94       	dec	r0
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_u8SetPinDirection+0xb0>
 124:	80 95       	com	r24
 126:	84 23       	and	r24, r20
 128:	8c 93       	st	X, r24
 12a:	a5 c0       	rjmp	.+330    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:CLR_BIT(DDRC,copy_PinNum);break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_u8SetPinDirection+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_u8SetPinDirection+0xda>
 14e:	80 95       	com	r24
 150:	84 23       	and	r24, r20
 152:	8c 93       	st	X, r24
 154:	90 c0       	rjmp	.+288    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:CLR_BIT(DDRD,copy_PinNum);break;
 156:	a1 e3       	ldi	r26, 0x31	; 49
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e1 e3       	ldi	r30, 0x31	; 49
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	48 2f       	mov	r20, r24
 162:	8b 81       	ldd	r24, Y+3	; 0x03
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 2e       	mov	r0, r18
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_u8SetPinDirection+0x108>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_u8SetPinDirection+0x104>
 178:	80 95       	com	r24
 17a:	84 23       	and	r24, r20
 17c:	8c 93       	st	X, r24
 17e:	7b c0       	rjmp	.+246    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	78 c0       	rjmp	.+240    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			}

		}
		else if(copy_Dir==DIO_PIN_OUTPUT)
 186:	8c 81       	ldd	r24, Y+4	; 0x04
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <DIO_u8SetPinDirection+0x122>
 18c:	72 c0       	rjmp	.+228    	; 0x272 <DIO_u8SetPinDirection+0x206>
		{
			switch (copy_Port)
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	3e 83       	std	Y+6, r19	; 0x06
 196:	2d 83       	std	Y+5, r18	; 0x05
 198:	8d 81       	ldd	r24, Y+5	; 0x05
 19a:	9e 81       	ldd	r25, Y+6	; 0x06
 19c:	81 30       	cpi	r24, 0x01	; 1
 19e:	91 05       	cpc	r25, r1
 1a0:	49 f1       	breq	.+82     	; 0x1f4 <DIO_u8SetPinDirection+0x188>
 1a2:	2d 81       	ldd	r18, Y+5	; 0x05
 1a4:	3e 81       	ldd	r19, Y+6	; 0x06
 1a6:	22 30       	cpi	r18, 0x02	; 2
 1a8:	31 05       	cpc	r19, r1
 1aa:	2c f4       	brge	.+10     	; 0x1b6 <DIO_u8SetPinDirection+0x14a>
 1ac:	8d 81       	ldd	r24, Y+5	; 0x05
 1ae:	9e 81       	ldd	r25, Y+6	; 0x06
 1b0:	00 97       	sbiw	r24, 0x00	; 0
 1b2:	61 f0       	breq	.+24     	; 0x1cc <DIO_u8SetPinDirection+0x160>
 1b4:	5b c0       	rjmp	.+182    	; 0x26c <DIO_u8SetPinDirection+0x200>
 1b6:	2d 81       	ldd	r18, Y+5	; 0x05
 1b8:	3e 81       	ldd	r19, Y+6	; 0x06
 1ba:	22 30       	cpi	r18, 0x02	; 2
 1bc:	31 05       	cpc	r19, r1
 1be:	71 f1       	breq	.+92     	; 0x21c <DIO_u8SetPinDirection+0x1b0>
 1c0:	8d 81       	ldd	r24, Y+5	; 0x05
 1c2:	9e 81       	ldd	r25, Y+6	; 0x06
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	91 05       	cpc	r25, r1
 1c8:	e9 f1       	breq	.+122    	; 0x244 <DIO_u8SetPinDirection+0x1d8>
 1ca:	50 c0       	rjmp	.+160    	; 0x26c <DIO_u8SetPinDirection+0x200>
			{
			case DIO_PORTA:SET_BIT(DDRA,copy_PinNum);break;
 1cc:	aa e3       	ldi	r26, 0x3A	; 58
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ea e3       	ldi	r30, 0x3A	; 58
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	48 2f       	mov	r20, r24
 1d8:	8b 81       	ldd	r24, Y+3	; 0x03
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 2e       	mov	r0, r18
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_u8SetPinDirection+0x17e>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_u8SetPinDirection+0x17a>
 1ee:	84 2b       	or	r24, r20
 1f0:	8c 93       	st	X, r24
 1f2:	41 c0       	rjmp	.+130    	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTB:SET_BIT(DDRB,copy_PinNum);break;
 1f4:	a7 e3       	ldi	r26, 0x37	; 55
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e7 e3       	ldi	r30, 0x37	; 55
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8b 81       	ldd	r24, Y+3	; 0x03
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_u8SetPinDirection+0x1a6>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_u8SetPinDirection+0x1a2>
 216:	84 2b       	or	r24, r20
 218:	8c 93       	st	X, r24
 21a:	2d c0       	rjmp	.+90     	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTC:SET_BIT(DDRC,copy_PinNum);break;
 21c:	a4 e3       	ldi	r26, 0x34	; 52
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	e4 e3       	ldi	r30, 0x34	; 52
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8b 81       	ldd	r24, Y+3	; 0x03
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_u8SetPinDirection+0x1ce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_u8SetPinDirection+0x1ca>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
 242:	19 c0       	rjmp	.+50     	; 0x276 <DIO_u8SetPinDirection+0x20a>
			case DIO_PORTD:SET_BIT(DDRD,copy_PinNum);break;
 244:	a1 e3       	ldi	r26, 0x31	; 49
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	e1 e3       	ldi	r30, 0x31	; 49
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	48 2f       	mov	r20, r24
 250:	8b 81       	ldd	r24, Y+3	; 0x03
 252:	28 2f       	mov	r18, r24
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 2e       	mov	r0, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_u8SetPinDirection+0x1f6>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	0a 94       	dec	r0
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_u8SetPinDirection+0x1f2>
 266:	84 2b       	or	r24, r20
 268:	8c 93       	st	X, r24
 26a:	05 c0       	rjmp	.+10     	; 0x276 <DIO_u8SetPinDirection+0x20a>
			default :Local_u8ErrorState=NOK;break;
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	89 83       	std	Y+1, r24	; 0x01
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_u8SetPinDirection+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	89 83       	std	Y+1, r24	; 0x01
		}
	}

	return Local_u8ErrorState;
 276:	89 81       	ldd	r24, Y+1	; 0x01


}	
 278:	28 96       	adiw	r28, 0x08	; 8
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	f8 94       	cli
 27e:	de bf       	out	0x3e, r29	; 62
 280:	0f be       	out	0x3f, r0	; 63
 282:	cd bf       	out	0x3d, r28	; 61
 284:	cf 91       	pop	r28
 286:	df 91       	pop	r29
 288:	08 95       	ret

0000028a <DIO_SetPortDirection>:
uint8 DIO_SetPortDirection (DIO_Port_t copy_Port ,uint8 copy_u8Port_Dir )
{
 28a:	df 93       	push	r29
 28c:	cf 93       	push	r28
 28e:	00 d0       	rcall	.+0      	; 0x290 <DIO_SetPortDirection+0x6>
 290:	00 d0       	rcall	.+0      	; 0x292 <DIO_SetPortDirection+0x8>
 292:	0f 92       	push	r0
 294:	cd b7       	in	r28, 0x3d	; 61
 296:	de b7       	in	r29, 0x3e	; 62
 298:	8a 83       	std	Y+2, r24	; 0x02
 29a:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState= OK;
 29c:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	28 2f       	mov	r18, r24
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	3d 83       	std	Y+5, r19	; 0x05
 2a6:	2c 83       	std	Y+4, r18	; 0x04
 2a8:	8c 81       	ldd	r24, Y+4	; 0x04
 2aa:	9d 81       	ldd	r25, Y+5	; 0x05
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	91 05       	cpc	r25, r1
 2b0:	d1 f0       	breq	.+52     	; 0x2e6 <DIO_SetPortDirection+0x5c>
 2b2:	2c 81       	ldd	r18, Y+4	; 0x04
 2b4:	3d 81       	ldd	r19, Y+5	; 0x05
 2b6:	22 30       	cpi	r18, 0x02	; 2
 2b8:	31 05       	cpc	r19, r1
 2ba:	2c f4       	brge	.+10     	; 0x2c6 <DIO_SetPortDirection+0x3c>
 2bc:	8c 81       	ldd	r24, Y+4	; 0x04
 2be:	9d 81       	ldd	r25, Y+5	; 0x05
 2c0:	00 97       	sbiw	r24, 0x00	; 0
 2c2:	61 f0       	breq	.+24     	; 0x2dc <DIO_SetPortDirection+0x52>
 2c4:	1f c0       	rjmp	.+62     	; 0x304 <DIO_SetPortDirection+0x7a>
 2c6:	2c 81       	ldd	r18, Y+4	; 0x04
 2c8:	3d 81       	ldd	r19, Y+5	; 0x05
 2ca:	22 30       	cpi	r18, 0x02	; 2
 2cc:	31 05       	cpc	r19, r1
 2ce:	81 f0       	breq	.+32     	; 0x2f0 <DIO_SetPortDirection+0x66>
 2d0:	8c 81       	ldd	r24, Y+4	; 0x04
 2d2:	9d 81       	ldd	r25, Y+5	; 0x05
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	91 05       	cpc	r25, r1
 2d8:	81 f0       	breq	.+32     	; 0x2fa <DIO_SetPortDirection+0x70>
 2da:	14 c0       	rjmp	.+40     	; 0x304 <DIO_SetPortDirection+0x7a>
	{
	case DIO_PORTA:DDRA=copy_u8Port_Dir;break;
 2dc:	ea e3       	ldi	r30, 0x3A	; 58
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	8b 81       	ldd	r24, Y+3	; 0x03
 2e2:	80 83       	st	Z, r24
 2e4:	11 c0       	rjmp	.+34     	; 0x308 <DIO_SetPortDirection+0x7e>
	case DIO_PORTB:DDRB=copy_u8Port_Dir;break;
 2e6:	e7 e3       	ldi	r30, 0x37	; 55
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	8b 81       	ldd	r24, Y+3	; 0x03
 2ec:	80 83       	st	Z, r24
 2ee:	0c c0       	rjmp	.+24     	; 0x308 <DIO_SetPortDirection+0x7e>
	case DIO_PORTC:DDRC=copy_u8Port_Dir;break;
 2f0:	e4 e3       	ldi	r30, 0x34	; 52
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	8b 81       	ldd	r24, Y+3	; 0x03
 2f6:	80 83       	st	Z, r24
 2f8:	07 c0       	rjmp	.+14     	; 0x308 <DIO_SetPortDirection+0x7e>
	case DIO_PORTD:DDRD=copy_u8Port_Dir;break;
 2fa:	e1 e3       	ldi	r30, 0x31	; 49
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	8b 81       	ldd	r24, Y+3	; 0x03
 300:	80 83       	st	Z, r24
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_SetPortDirection+0x7e>
	default :Local_u8ErrorState=NOK;break;
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
 308:	89 81       	ldd	r24, Y+1	; 0x01
}
 30a:	0f 90       	pop	r0
 30c:	0f 90       	pop	r0
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	cf 91       	pop	r28
 316:	df 91       	pop	r29
 318:	08 95       	ret

0000031a <DIO_u8SetPinValue>:


uint8 DIO_u8SetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum,DIO_PinVal_t  copy_Val)
{
 31a:	df 93       	push	r29
 31c:	cf 93       	push	r28
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
 322:	28 97       	sbiw	r28, 0x08	; 8
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61
 32e:	8a 83       	std	Y+2, r24	; 0x02
 330:	6b 83       	std	Y+3, r22	; 0x03
 332:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
 334:	19 82       	std	Y+1, r1	; 0x01
	if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
 336:	8b 81       	ldd	r24, Y+3	; 0x03
 338:	88 30       	cpi	r24, 0x08	; 8
 33a:	08 f0       	brcs	.+2      	; 0x33e <DIO_u8SetPinValue+0x24>
 33c:	f3 c0       	rjmp	.+486    	; 0x524 <DIO_u8SetPinValue+0x20a>
	{
		if(copy_Val==DIO_PIN_LOW)
 33e:	8c 81       	ldd	r24, Y+4	; 0x04
 340:	88 23       	and	r24, r24
 342:	09 f0       	breq	.+2      	; 0x346 <DIO_u8SetPinValue+0x2c>
 344:	77 c0       	rjmp	.+238    	; 0x434 <DIO_u8SetPinValue+0x11a>
		{
			switch (copy_Port)
 346:	8a 81       	ldd	r24, Y+2	; 0x02
 348:	28 2f       	mov	r18, r24
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	38 87       	std	Y+8, r19	; 0x08
 34e:	2f 83       	std	Y+7, r18	; 0x07
 350:	8f 81       	ldd	r24, Y+7	; 0x07
 352:	98 85       	ldd	r25, Y+8	; 0x08
 354:	81 30       	cpi	r24, 0x01	; 1
 356:	91 05       	cpc	r25, r1
 358:	59 f1       	breq	.+86     	; 0x3b0 <DIO_u8SetPinValue+0x96>
 35a:	2f 81       	ldd	r18, Y+7	; 0x07
 35c:	38 85       	ldd	r19, Y+8	; 0x08
 35e:	22 30       	cpi	r18, 0x02	; 2
 360:	31 05       	cpc	r19, r1
 362:	2c f4       	brge	.+10     	; 0x36e <DIO_u8SetPinValue+0x54>
 364:	8f 81       	ldd	r24, Y+7	; 0x07
 366:	98 85       	ldd	r25, Y+8	; 0x08
 368:	00 97       	sbiw	r24, 0x00	; 0
 36a:	69 f0       	breq	.+26     	; 0x386 <DIO_u8SetPinValue+0x6c>
 36c:	60 c0       	rjmp	.+192    	; 0x42e <DIO_u8SetPinValue+0x114>
 36e:	2f 81       	ldd	r18, Y+7	; 0x07
 370:	38 85       	ldd	r19, Y+8	; 0x08
 372:	22 30       	cpi	r18, 0x02	; 2
 374:	31 05       	cpc	r19, r1
 376:	89 f1       	breq	.+98     	; 0x3da <DIO_u8SetPinValue+0xc0>
 378:	8f 81       	ldd	r24, Y+7	; 0x07
 37a:	98 85       	ldd	r25, Y+8	; 0x08
 37c:	83 30       	cpi	r24, 0x03	; 3
 37e:	91 05       	cpc	r25, r1
 380:	09 f4       	brne	.+2      	; 0x384 <DIO_u8SetPinValue+0x6a>
 382:	40 c0       	rjmp	.+128    	; 0x404 <DIO_u8SetPinValue+0xea>
 384:	54 c0       	rjmp	.+168    	; 0x42e <DIO_u8SetPinValue+0x114>
			{
			case DIO_PORTA:CLR_BIT(PORTA,copy_PinNum);break;
 386:	ab e3       	ldi	r26, 0x3B	; 59
 388:	b0 e0       	ldi	r27, 0x00	; 0
 38a:	eb e3       	ldi	r30, 0x3B	; 59
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	80 81       	ld	r24, Z
 390:	48 2f       	mov	r20, r24
 392:	8b 81       	ldd	r24, Y+3	; 0x03
 394:	28 2f       	mov	r18, r24
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 2e       	mov	r0, r18
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <DIO_u8SetPinValue+0x8a>
 3a0:	88 0f       	add	r24, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	0a 94       	dec	r0
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <DIO_u8SetPinValue+0x86>
 3a8:	80 95       	com	r24
 3aa:	84 23       	and	r24, r20
 3ac:	8c 93       	st	X, r24
 3ae:	ba c0       	rjmp	.+372    	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:CLR_BIT(PORTB,copy_PinNum);break;
 3b0:	a8 e3       	ldi	r26, 0x38	; 56
 3b2:	b0 e0       	ldi	r27, 0x00	; 0
 3b4:	e8 e3       	ldi	r30, 0x38	; 56
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	48 2f       	mov	r20, r24
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 2e       	mov	r0, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_u8SetPinValue+0xb4>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_u8SetPinValue+0xb0>
 3d2:	80 95       	com	r24
 3d4:	84 23       	and	r24, r20
 3d6:	8c 93       	st	X, r24
 3d8:	a5 c0       	rjmp	.+330    	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:CLR_BIT(PORTC,copy_PinNum);break;
 3da:	a5 e3       	ldi	r26, 0x35	; 53
 3dc:	b0 e0       	ldi	r27, 0x00	; 0
 3de:	e5 e3       	ldi	r30, 0x35	; 53
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	80 81       	ld	r24, Z
 3e4:	48 2f       	mov	r20, r24
 3e6:	8b 81       	ldd	r24, Y+3	; 0x03
 3e8:	28 2f       	mov	r18, r24
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	02 2e       	mov	r0, r18
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <DIO_u8SetPinValue+0xde>
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	0a 94       	dec	r0
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <DIO_u8SetPinValue+0xda>
 3fc:	80 95       	com	r24
 3fe:	84 23       	and	r24, r20
 400:	8c 93       	st	X, r24
 402:	90 c0       	rjmp	.+288    	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:CLR_BIT(PORTD,copy_PinNum);break;
 404:	a2 e3       	ldi	r26, 0x32	; 50
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e2 e3       	ldi	r30, 0x32	; 50
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	48 2f       	mov	r20, r24
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	02 2e       	mov	r0, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_u8SetPinValue+0x108>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_u8SetPinValue+0x104>
 426:	80 95       	com	r24
 428:	84 23       	and	r24, r20
 42a:	8c 93       	st	X, r24
 42c:	7b c0       	rjmp	.+246    	; 0x524 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	89 83       	std	Y+1, r24	; 0x01
 432:	78 c0       	rjmp	.+240    	; 0x524 <DIO_u8SetPinValue+0x20a>
			}


		}
		else if(copy_Val==DIO_PIN_HIGH)
 434:	8c 81       	ldd	r24, Y+4	; 0x04
 436:	81 30       	cpi	r24, 0x01	; 1
 438:	09 f0       	breq	.+2      	; 0x43c <DIO_u8SetPinValue+0x122>
 43a:	72 c0       	rjmp	.+228    	; 0x520 <DIO_u8SetPinValue+0x206>
		{
			switch (copy_Port)
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	3e 83       	std	Y+6, r19	; 0x06
 444:	2d 83       	std	Y+5, r18	; 0x05
 446:	8d 81       	ldd	r24, Y+5	; 0x05
 448:	9e 81       	ldd	r25, Y+6	; 0x06
 44a:	81 30       	cpi	r24, 0x01	; 1
 44c:	91 05       	cpc	r25, r1
 44e:	49 f1       	breq	.+82     	; 0x4a2 <DIO_u8SetPinValue+0x188>
 450:	2d 81       	ldd	r18, Y+5	; 0x05
 452:	3e 81       	ldd	r19, Y+6	; 0x06
 454:	22 30       	cpi	r18, 0x02	; 2
 456:	31 05       	cpc	r19, r1
 458:	2c f4       	brge	.+10     	; 0x464 <DIO_u8SetPinValue+0x14a>
 45a:	8d 81       	ldd	r24, Y+5	; 0x05
 45c:	9e 81       	ldd	r25, Y+6	; 0x06
 45e:	00 97       	sbiw	r24, 0x00	; 0
 460:	61 f0       	breq	.+24     	; 0x47a <DIO_u8SetPinValue+0x160>
 462:	5b c0       	rjmp	.+182    	; 0x51a <DIO_u8SetPinValue+0x200>
 464:	2d 81       	ldd	r18, Y+5	; 0x05
 466:	3e 81       	ldd	r19, Y+6	; 0x06
 468:	22 30       	cpi	r18, 0x02	; 2
 46a:	31 05       	cpc	r19, r1
 46c:	71 f1       	breq	.+92     	; 0x4ca <DIO_u8SetPinValue+0x1b0>
 46e:	8d 81       	ldd	r24, Y+5	; 0x05
 470:	9e 81       	ldd	r25, Y+6	; 0x06
 472:	83 30       	cpi	r24, 0x03	; 3
 474:	91 05       	cpc	r25, r1
 476:	e9 f1       	breq	.+122    	; 0x4f2 <DIO_u8SetPinValue+0x1d8>
 478:	50 c0       	rjmp	.+160    	; 0x51a <DIO_u8SetPinValue+0x200>
			{
			case DIO_PORTA:SET_BIT(PORTA,copy_PinNum);break;
 47a:	ab e3       	ldi	r26, 0x3B	; 59
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	eb e3       	ldi	r30, 0x3B	; 59
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	48 2f       	mov	r20, r24
 486:	8b 81       	ldd	r24, Y+3	; 0x03
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 2e       	mov	r0, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <DIO_u8SetPinValue+0x17e>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <DIO_u8SetPinValue+0x17a>
 49c:	84 2b       	or	r24, r20
 49e:	8c 93       	st	X, r24
 4a0:	41 c0       	rjmp	.+130    	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTB:SET_BIT(PORTB,copy_PinNum);break;
 4a2:	a8 e3       	ldi	r26, 0x38	; 56
 4a4:	b0 e0       	ldi	r27, 0x00	; 0
 4a6:	e8 e3       	ldi	r30, 0x38	; 56
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	48 2f       	mov	r20, r24
 4ae:	8b 81       	ldd	r24, Y+3	; 0x03
 4b0:	28 2f       	mov	r18, r24
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	02 2e       	mov	r0, r18
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <DIO_u8SetPinValue+0x1a6>
 4bc:	88 0f       	add	r24, r24
 4be:	99 1f       	adc	r25, r25
 4c0:	0a 94       	dec	r0
 4c2:	e2 f7       	brpl	.-8      	; 0x4bc <DIO_u8SetPinValue+0x1a2>
 4c4:	84 2b       	or	r24, r20
 4c6:	8c 93       	st	X, r24
 4c8:	2d c0       	rjmp	.+90     	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTC:SET_BIT(PORTC,copy_PinNum);break;
 4ca:	a5 e3       	ldi	r26, 0x35	; 53
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	e5 e3       	ldi	r30, 0x35	; 53
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	48 2f       	mov	r20, r24
 4d6:	8b 81       	ldd	r24, Y+3	; 0x03
 4d8:	28 2f       	mov	r18, r24
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	02 2e       	mov	r0, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_u8SetPinValue+0x1ce>
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	0a 94       	dec	r0
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_u8SetPinValue+0x1ca>
 4ec:	84 2b       	or	r24, r20
 4ee:	8c 93       	st	X, r24
 4f0:	19 c0       	rjmp	.+50     	; 0x524 <DIO_u8SetPinValue+0x20a>
			case DIO_PORTD:SET_BIT(PORTD,copy_PinNum);break;
 4f2:	a2 e3       	ldi	r26, 0x32	; 50
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	e2 e3       	ldi	r30, 0x32	; 50
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	48 2f       	mov	r20, r24
 4fe:	8b 81       	ldd	r24, Y+3	; 0x03
 500:	28 2f       	mov	r18, r24
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 2e       	mov	r0, r18
 50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_u8SetPinValue+0x1f6>
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	0a 94       	dec	r0
 512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_u8SetPinValue+0x1f2>
 514:	84 2b       	or	r24, r20
 516:	8c 93       	st	X, r24
 518:	05 c0       	rjmp	.+10     	; 0x524 <DIO_u8SetPinValue+0x20a>
			default :Local_u8ErrorState=NOK;break;
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	89 83       	std	Y+1, r24	; 0x01
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_u8SetPinValue+0x20a>
			}
		}
		else
		{
			Local_u8ErrorState=NOK;
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	89 83       	std	Y+1, r24	; 0x01
		}
	}


	return Local_u8ErrorState;
 524:	89 81       	ldd	r24, Y+1	; 0x01

}
 526:	28 96       	adiw	r28, 0x08	; 8
 528:	0f b6       	in	r0, 0x3f	; 63
 52a:	f8 94       	cli
 52c:	de bf       	out	0x3e, r29	; 62
 52e:	0f be       	out	0x3f, r0	; 63
 530:	cd bf       	out	0x3d, r28	; 61
 532:	cf 91       	pop	r28
 534:	df 91       	pop	r29
 536:	08 95       	ret

00000538 <DIO_SetPortValue>:

uint8 DIO_SetPortValue (DIO_Port_t copy_Port ,uint8 copy_u8PortVal )
{
 538:	df 93       	push	r29
 53a:	cf 93       	push	r28
 53c:	00 d0       	rcall	.+0      	; 0x53e <DIO_SetPortValue+0x6>
 53e:	00 d0       	rcall	.+0      	; 0x540 <DIO_SetPortValue+0x8>
 540:	0f 92       	push	r0
 542:	cd b7       	in	r28, 0x3d	; 61
 544:	de b7       	in	r29, 0x3e	; 62
 546:	8a 83       	std	Y+2, r24	; 0x02
 548:	6b 83       	std	Y+3, r22	; 0x03

	uint8 Local_u8ErrorState=OK;
 54a:	19 82       	std	Y+1, r1	; 0x01

	switch(copy_Port)
 54c:	8a 81       	ldd	r24, Y+2	; 0x02
 54e:	28 2f       	mov	r18, r24
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	3d 83       	std	Y+5, r19	; 0x05
 554:	2c 83       	std	Y+4, r18	; 0x04
 556:	8c 81       	ldd	r24, Y+4	; 0x04
 558:	9d 81       	ldd	r25, Y+5	; 0x05
 55a:	81 30       	cpi	r24, 0x01	; 1
 55c:	91 05       	cpc	r25, r1
 55e:	d1 f0       	breq	.+52     	; 0x594 <DIO_SetPortValue+0x5c>
 560:	2c 81       	ldd	r18, Y+4	; 0x04
 562:	3d 81       	ldd	r19, Y+5	; 0x05
 564:	22 30       	cpi	r18, 0x02	; 2
 566:	31 05       	cpc	r19, r1
 568:	2c f4       	brge	.+10     	; 0x574 <DIO_SetPortValue+0x3c>
 56a:	8c 81       	ldd	r24, Y+4	; 0x04
 56c:	9d 81       	ldd	r25, Y+5	; 0x05
 56e:	00 97       	sbiw	r24, 0x00	; 0
 570:	61 f0       	breq	.+24     	; 0x58a <DIO_SetPortValue+0x52>
 572:	1f c0       	rjmp	.+62     	; 0x5b2 <DIO_SetPortValue+0x7a>
 574:	2c 81       	ldd	r18, Y+4	; 0x04
 576:	3d 81       	ldd	r19, Y+5	; 0x05
 578:	22 30       	cpi	r18, 0x02	; 2
 57a:	31 05       	cpc	r19, r1
 57c:	81 f0       	breq	.+32     	; 0x59e <DIO_SetPortValue+0x66>
 57e:	8c 81       	ldd	r24, Y+4	; 0x04
 580:	9d 81       	ldd	r25, Y+5	; 0x05
 582:	83 30       	cpi	r24, 0x03	; 3
 584:	91 05       	cpc	r25, r1
 586:	81 f0       	breq	.+32     	; 0x5a8 <DIO_SetPortValue+0x70>
 588:	14 c0       	rjmp	.+40     	; 0x5b2 <DIO_SetPortValue+0x7a>
	{
	case DIO_PORTA:PORTA=copy_u8PortVal;break;
 58a:	eb e3       	ldi	r30, 0x3B	; 59
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	8b 81       	ldd	r24, Y+3	; 0x03
 590:	80 83       	st	Z, r24
 592:	11 c0       	rjmp	.+34     	; 0x5b6 <DIO_SetPortValue+0x7e>
	case DIO_PORTB:PORTB=copy_u8PortVal;break;
 594:	e8 e3       	ldi	r30, 0x38	; 56
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	8b 81       	ldd	r24, Y+3	; 0x03
 59a:	80 83       	st	Z, r24
 59c:	0c c0       	rjmp	.+24     	; 0x5b6 <DIO_SetPortValue+0x7e>
	case DIO_PORTC:PORTC=copy_u8PortVal;break;
 59e:	e5 e3       	ldi	r30, 0x35	; 53
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	8b 81       	ldd	r24, Y+3	; 0x03
 5a4:	80 83       	st	Z, r24
 5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <DIO_SetPortValue+0x7e>
	case DIO_PORTD:PORTD=copy_u8PortVal;break;
 5a8:	e2 e3       	ldi	r30, 0x32	; 50
 5aa:	f0 e0       	ldi	r31, 0x00	; 0
 5ac:	8b 81       	ldd	r24, Y+3	; 0x03
 5ae:	80 83       	st	Z, r24
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <DIO_SetPortValue+0x7e>
	default :Local_u8ErrorState=NOK;break;
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	89 83       	std	Y+1, r24	; 0x01

	}

	return Local_u8ErrorState;
 5b6:	89 81       	ldd	r24, Y+1	; 0x01

}	
 5b8:	0f 90       	pop	r0
 5ba:	0f 90       	pop	r0
 5bc:	0f 90       	pop	r0
 5be:	0f 90       	pop	r0
 5c0:	0f 90       	pop	r0
 5c2:	cf 91       	pop	r28
 5c4:	df 91       	pop	r29
 5c6:	08 95       	ret

000005c8 <DIO_u8GetPinValue>:
uint8  DIO_u8GetPinValue (DIO_Port_t copy_Port, DIO_Pin_t copy_PinNum, DIO_PinVal_t*  copy_pVal)
{
 5c8:	df 93       	push	r29
 5ca:	cf 93       	push	r28
 5cc:	cd b7       	in	r28, 0x3d	; 61
 5ce:	de b7       	in	r29, 0x3e	; 62
 5d0:	27 97       	sbiw	r28, 0x07	; 7
 5d2:	0f b6       	in	r0, 0x3f	; 63
 5d4:	f8 94       	cli
 5d6:	de bf       	out	0x3e, r29	; 62
 5d8:	0f be       	out	0x3f, r0	; 63
 5da:	cd bf       	out	0x3d, r28	; 61
 5dc:	8a 83       	std	Y+2, r24	; 0x02
 5de:	6b 83       	std	Y+3, r22	; 0x03
 5e0:	5d 83       	std	Y+5, r21	; 0x05
 5e2:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState=OK;
 5e4:	19 82       	std	Y+1, r1	; 0x01
	if(copy_pVal!=NULL)
 5e6:	8c 81       	ldd	r24, Y+4	; 0x04
 5e8:	9d 81       	ldd	r25, Y+5	; 0x05
 5ea:	00 97       	sbiw	r24, 0x00	; 0
 5ec:	09 f4       	brne	.+2      	; 0x5f0 <DIO_u8GetPinValue+0x28>
 5ee:	7b c0       	rjmp	.+246    	; 0x6e6 <DIO_u8GetPinValue+0x11e>
	{
		if((copy_PinNum>=DIO_PIN0)&&(copy_PinNum<=DIO_PIN7))
 5f0:	8b 81       	ldd	r24, Y+3	; 0x03
 5f2:	88 30       	cpi	r24, 0x08	; 8
 5f4:	08 f0       	brcs	.+2      	; 0x5f8 <DIO_u8GetPinValue+0x30>
 5f6:	74 c0       	rjmp	.+232    	; 0x6e0 <DIO_u8GetPinValue+0x118>
		{
			switch(copy_Port)
 5f8:	8a 81       	ldd	r24, Y+2	; 0x02
 5fa:	28 2f       	mov	r18, r24
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	3f 83       	std	Y+7, r19	; 0x07
 600:	2e 83       	std	Y+6, r18	; 0x06
 602:	4e 81       	ldd	r20, Y+6	; 0x06
 604:	5f 81       	ldd	r21, Y+7	; 0x07
 606:	41 30       	cpi	r20, 0x01	; 1
 608:	51 05       	cpc	r21, r1
 60a:	59 f1       	breq	.+86     	; 0x662 <DIO_u8GetPinValue+0x9a>
 60c:	8e 81       	ldd	r24, Y+6	; 0x06
 60e:	9f 81       	ldd	r25, Y+7	; 0x07
 610:	82 30       	cpi	r24, 0x02	; 2
 612:	91 05       	cpc	r25, r1
 614:	34 f4       	brge	.+12     	; 0x622 <DIO_u8GetPinValue+0x5a>
 616:	2e 81       	ldd	r18, Y+6	; 0x06
 618:	3f 81       	ldd	r19, Y+7	; 0x07
 61a:	21 15       	cp	r18, r1
 61c:	31 05       	cpc	r19, r1
 61e:	69 f0       	breq	.+26     	; 0x63a <DIO_u8GetPinValue+0x72>
 620:	5c c0       	rjmp	.+184    	; 0x6da <DIO_u8GetPinValue+0x112>
 622:	4e 81       	ldd	r20, Y+6	; 0x06
 624:	5f 81       	ldd	r21, Y+7	; 0x07
 626:	42 30       	cpi	r20, 0x02	; 2
 628:	51 05       	cpc	r21, r1
 62a:	79 f1       	breq	.+94     	; 0x68a <DIO_u8GetPinValue+0xc2>
 62c:	8e 81       	ldd	r24, Y+6	; 0x06
 62e:	9f 81       	ldd	r25, Y+7	; 0x07
 630:	83 30       	cpi	r24, 0x03	; 3
 632:	91 05       	cpc	r25, r1
 634:	09 f4       	brne	.+2      	; 0x638 <DIO_u8GetPinValue+0x70>
 636:	3d c0       	rjmp	.+122    	; 0x6b2 <DIO_u8GetPinValue+0xea>
 638:	50 c0       	rjmp	.+160    	; 0x6da <DIO_u8GetPinValue+0x112>
			{
			case DIO_PORTA:*copy_pVal=GET_BIT(PINA,copy_PinNum);break;
 63a:	e9 e3       	ldi	r30, 0x39	; 57
 63c:	f0 e0       	ldi	r31, 0x00	; 0
 63e:	80 81       	ld	r24, Z
 640:	28 2f       	mov	r18, r24
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	8b 81       	ldd	r24, Y+3	; 0x03
 646:	88 2f       	mov	r24, r24
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	a9 01       	movw	r20, r18
 64c:	02 c0       	rjmp	.+4      	; 0x652 <DIO_u8GetPinValue+0x8a>
 64e:	55 95       	asr	r21
 650:	47 95       	ror	r20
 652:	8a 95       	dec	r24
 654:	e2 f7       	brpl	.-8      	; 0x64e <DIO_u8GetPinValue+0x86>
 656:	ca 01       	movw	r24, r20
 658:	81 70       	andi	r24, 0x01	; 1
 65a:	ec 81       	ldd	r30, Y+4	; 0x04
 65c:	fd 81       	ldd	r31, Y+5	; 0x05
 65e:	80 83       	st	Z, r24
 660:	44 c0       	rjmp	.+136    	; 0x6ea <DIO_u8GetPinValue+0x122>
			case DIO_PORTB:*copy_pVal=GET_BIT(PINB,copy_PinNum);break;
 662:	e6 e3       	ldi	r30, 0x36	; 54
 664:	f0 e0       	ldi	r31, 0x00	; 0
 666:	80 81       	ld	r24, Z
 668:	28 2f       	mov	r18, r24
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	8b 81       	ldd	r24, Y+3	; 0x03
 66e:	88 2f       	mov	r24, r24
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	a9 01       	movw	r20, r18
 674:	02 c0       	rjmp	.+4      	; 0x67a <DIO_u8GetPinValue+0xb2>
 676:	55 95       	asr	r21
 678:	47 95       	ror	r20
 67a:	8a 95       	dec	r24
 67c:	e2 f7       	brpl	.-8      	; 0x676 <DIO_u8GetPinValue+0xae>
 67e:	ca 01       	movw	r24, r20
 680:	81 70       	andi	r24, 0x01	; 1
 682:	ec 81       	ldd	r30, Y+4	; 0x04
 684:	fd 81       	ldd	r31, Y+5	; 0x05
 686:	80 83       	st	Z, r24
 688:	30 c0       	rjmp	.+96     	; 0x6ea <DIO_u8GetPinValue+0x122>
			case DIO_PORTC:*copy_pVal=GET_BIT(PINC,copy_PinNum);break;
 68a:	e3 e3       	ldi	r30, 0x33	; 51
 68c:	f0 e0       	ldi	r31, 0x00	; 0
 68e:	80 81       	ld	r24, Z
 690:	28 2f       	mov	r18, r24
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	8b 81       	ldd	r24, Y+3	; 0x03
 696:	88 2f       	mov	r24, r24
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	a9 01       	movw	r20, r18
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <DIO_u8GetPinValue+0xda>
 69e:	55 95       	asr	r21
 6a0:	47 95       	ror	r20
 6a2:	8a 95       	dec	r24
 6a4:	e2 f7       	brpl	.-8      	; 0x69e <DIO_u8GetPinValue+0xd6>
 6a6:	ca 01       	movw	r24, r20
 6a8:	81 70       	andi	r24, 0x01	; 1
 6aa:	ec 81       	ldd	r30, Y+4	; 0x04
 6ac:	fd 81       	ldd	r31, Y+5	; 0x05
 6ae:	80 83       	st	Z, r24
 6b0:	1c c0       	rjmp	.+56     	; 0x6ea <DIO_u8GetPinValue+0x122>
			case DIO_PORTD:*copy_pVal=GET_BIT(PIND,copy_PinNum);break;
 6b2:	e0 e3       	ldi	r30, 0x30	; 48
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	80 81       	ld	r24, Z
 6b8:	28 2f       	mov	r18, r24
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	88 2f       	mov	r24, r24
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	a9 01       	movw	r20, r18
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <DIO_u8GetPinValue+0x102>
 6c6:	55 95       	asr	r21
 6c8:	47 95       	ror	r20
 6ca:	8a 95       	dec	r24
 6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <DIO_u8GetPinValue+0xfe>
 6ce:	ca 01       	movw	r24, r20
 6d0:	81 70       	andi	r24, 0x01	; 1
 6d2:	ec 81       	ldd	r30, Y+4	; 0x04
 6d4:	fd 81       	ldd	r31, Y+5	; 0x05
 6d6:	80 83       	st	Z, r24
 6d8:	08 c0       	rjmp	.+16     	; 0x6ea <DIO_u8GetPinValue+0x122>
			default :Local_u8ErrorState=NOK;break;
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	89 83       	std	Y+1, r24	; 0x01
 6de:	05 c0       	rjmp	.+10     	; 0x6ea <DIO_u8GetPinValue+0x122>
			}

		}
		else
		{
			Local_u8ErrorState=NOK;
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	89 83       	std	Y+1, r24	; 0x01
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <DIO_u8GetPinValue+0x122>
		}
	}
	else
	{
		Local_u8ErrorState=NULL_PTR;
 6e6:	82 e0       	ldi	r24, 0x02	; 2
 6e8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
 6ea:	89 81       	ldd	r24, Y+1	; 0x01

}	
 6ec:	27 96       	adiw	r28, 0x07	; 7
 6ee:	0f b6       	in	r0, 0x3f	; 63
 6f0:	f8 94       	cli
 6f2:	de bf       	out	0x3e, r29	; 62
 6f4:	0f be       	out	0x3f, r0	; 63
 6f6:	cd bf       	out	0x3d, r28	; 61
 6f8:	cf 91       	pop	r28
 6fa:	df 91       	pop	r29
 6fc:	08 95       	ret

000006fe <main>:
#include <util/delay.h>
#include "Err_Type.h"
#include "DIO_interface.h"

void main(void)
{
 6fe:	df 93       	push	r29
 700:	cf 93       	push	r28
 702:	0f 92       	push	r0
 704:	cd b7       	in	r28, 0x3d	; 61
 706:	de b7       	in	r29, 0x3e	; 62

	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN0,DIO_PIN_OUTPUT);//C0 AS OUTPUT
 708:	82 e0       	ldi	r24, 0x02	; 2
 70a:	60 e0       	ldi	r22, 0x00	; 0
 70c:	41 e0       	ldi	r20, 0x01	; 1
 70e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_u8SetPinDirection>
     DIO_u8SetPinDirection(DIO_PORTD,DIO_PIN0,DIO_PIN_INPUT);//D0 AS INPUT
 712:	83 e0       	ldi	r24, 0x03	; 3
 714:	60 e0       	ldi	r22, 0x00	; 0
 716:	40 e0       	ldi	r20, 0x00	; 0
 718:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_u8SetPinDirection>
     DIO_u8SetPinValue(DIO_PORTD,DIO_PIN0,DIO_PIN_HIGH);//activate pull up res
 71c:	83 e0       	ldi	r24, 0x03	; 3
 71e:	60 e0       	ldi	r22, 0x00	; 0
 720:	41 e0       	ldi	r20, 0x01	; 1
 722:	0e 94 8d 01 	call	0x31a	; 0x31a <DIO_u8SetPinValue>
	while(1)
	{
		uint8 Local_u8Press;
   //  DIO_SetPortValue(DIO_PORTC,0xf0);
	//DIO_u8SetPinValue(DIO_PORTA,DIO_PIN0,DIO_PIN_HIGH);
		DIO_u8GetPinValue(DIO_PORTD,DIO_PIN0,&Local_u8Press);
 726:	83 e0       	ldi	r24, 0x03	; 3
 728:	60 e0       	ldi	r22, 0x00	; 0
 72a:	9e 01       	movw	r18, r28
 72c:	2f 5f       	subi	r18, 0xFF	; 255
 72e:	3f 4f       	sbci	r19, 0xFF	; 255
 730:	a9 01       	movw	r20, r18
 732:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_u8GetPinValue>
		if(Local_u8Press==0)
 736:	89 81       	ldd	r24, Y+1	; 0x01
 738:	88 23       	and	r24, r24
 73a:	31 f4       	brne	.+12     	; 0x748 <main+0x4a>
		{
			DIO_u8SetPinValue(DIO_PORTC,DIO_PIN0,DIO_PIN_HIGH);
 73c:	82 e0       	ldi	r24, 0x02	; 2
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	41 e0       	ldi	r20, 0x01	; 1
 742:	0e 94 8d 01 	call	0x31a	; 0x31a <DIO_u8SetPinValue>
 746:	ef cf       	rjmp	.-34     	; 0x726 <main+0x28>
		}
		else
		{
			DIO_u8SetPinValue(DIO_PORTC,DIO_PIN0,DIO_PIN_LOW);
 748:	82 e0       	ldi	r24, 0x02	; 2
 74a:	60 e0       	ldi	r22, 0x00	; 0
 74c:	40 e0       	ldi	r20, 0x00	; 0
 74e:	0e 94 8d 01 	call	0x31a	; 0x31a <DIO_u8SetPinValue>
 752:	e9 cf       	rjmp	.-46     	; 0x726 <main+0x28>

00000754 <_exit>:
 754:	f8 94       	cli

00000756 <__stop_program>:
 756:	ff cf       	rjmp	.-2      	; 0x756 <__stop_program>
